n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","lam.est")]#
pars
proj <- merge(pars, data.frame(gen=1:ngen))#
proj$n <- n1*proj$lam.est^proj$gen#
proj$id <- paste(proj$morph, proj$gen, sep="_")#
proj$abun <- params$abundance_05[match(proj$spp, params$spp)]#
#
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")#
#
a_diff <- unique(pairs[,c("morph","AC","AR")])#
a_diff$diff <- a_diff$AC / a_diff$AR#
#
proj2 <- data.frame(acast(morph+gen~abundance_pair, data=proj, value.var="n"))#
proj2[, c("morph","gen")]<- proj[match(rownames(proj2), proj$id), c("morph","gen")]#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- a_diff$diff[match(proj2$morph, a_diff$morph)]#
head(proj2)#
proj3 <- proj2#
proj3 <- proj3[proj3$diff<proj2$real,] # less than real diff#
gens <- aggregate(gen~morph, proj3, max)#
proj4 <- proj2#
proj4$max <- gens$gen[match(proj4$morph, gens$morph)] +1 #to cross the line#
proj4 <- proj4[proj4$gen<=proj4$max,]#
#
yrplot2 <- ggplot(proj4[proj4$gen==proj4$max,], aes(x=gen, y=reorder(morph, -gen)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)+#
scale_x_continuous(expand=c(0,0))+#
theme_classic()+theme(axis.title.y=element_blank(), axis.title.x=element_text(size=8), axis.line=element_line(size=0.1), axis.text.y=element_blank())#
yrplot2
yrplot2 <- ggplot(proj4[proj4$gen==proj4$max,], aes(x=gen, y=reorder(morph, -gen)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)+#
scale_x_continuous(expand=c(0,0))+#
theme_classic()+theme(axis.title.y=element_blank(), axis.title.x=element_text(size=8), axis.line=element_line(size=0.1), axis.text.y=element_blank())#
yrplot2
lamcomp <- ggplot(comp, aes(x=lamdiff, y=reorder(morph, -lamdiff)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x=expression(Difference~"in"~lambda))+#
guides(fill="none")+scale_fill_manual(values=colsC)+#
scale_x_continuous(expand=c(0,0))+#
theme_classic()+theme(axis.title.y=element_blank(), axis.title.x=element_text(size=8), axis.line=element_line(size=0.1), axis.text.y=element_blank())#
lamcomp
########################################
# DOUBLE RECRUITMENT#
########################################
#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec.fam[params$spp==sp] *2#
	rec.size <- params$rsize.gr[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam <- bigmatrix()$lam#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam))#
	}#
doub_lam#
#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
########################################
#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] *2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam <- bigmatrix()$lam#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam))#
	}
doub_lam
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
# Double recruitment#
#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] *2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam <- bigmatrix()$lam#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam))#
	}#
doub_lam#
#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] * 2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam <- bigmatrix()$lam#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam))#
	}#
doub_lam#
#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
doub_lam
# Double recruitment#
#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] * 2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam=bigmatrix()$lam))#
	}#
doub_lam#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
params2<-rbind(params, params[6,]) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#AN/AM#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[order(comp$Common)]#
#
comp$AC<-params2$abundance_05[match(comp$Common, params2$spp)]#
comp$AR<-params2$abundance_05[match(comp$Rare, params2$spp)]#
comp$diff <- comp$AC/comp$AR#
#
comp$rec <- params2$rec[match(comp$morph, params2$morph)] #
comp$rec.size <- params2$rec.size[match(comp$morph, params2$morph)] #
comp$rec.size.cm <- sqrt(((10^comp$rec.size)*10000)/pi)*2		#
comp$lamC <- params$lam.est[match(comp$Common, params$spp)]	#
comp$lamR <- params$lam.est[match(comp$Rare, params$spp)]#
comp
params2<-rbind(params, params[6,]) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#AN/AM#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[order(comp$Common)]#
#
comp$AC<-params2$abundance_05[match(comp$Common, params2$spp)]#
comp$AR<-params2$abundance_05[match(comp$Rare, params2$spp)]#
comp$abundiff <- comp$AC/comp$AR	#
comp$lamC <- params$lam.est[match(comp$Common, params$spp)]	#
comp$lamR <- params$lam.est[match(comp$Rare, params$spp)]#
comp
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
# method 1 #
#
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$diff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)#
#
# method 2 - projecting lamda
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$diff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)#
#
# method
# method 1 #
#
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$diff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)#
#
# met
params2<-rbind(params, params[6,]) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#AN/AM#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[order(comp$Common)]#
#
comp$AC<-params2$abundance_05[match(comp$Common, params2$spp)]#
comp$AR<-params2$abundance_05[match(comp$Rare, params2$spp)]#
comp$abundiff <- comp$AC/comp$AR	#
comp$lamC <- params$lam.est[match(comp$Common, params$spp)]	#
comp$lamR <- params$lam.est[match(comp$Rare, params$spp)]#
comp$lamdiff <- comp$lamC - comp$lamR#
comp$logdiff <- log(comp$lamC) - log(comp$lamR)#
#
# Double recruitment#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] * 2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam=bigmatrix()$lam))#
	}#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))#
#
########################################
# TIME NEEDED TO GET DIFFERENCES#
########################################
#
# method 1 #
#
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$diff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$abundiff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)
n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","lam.est")]#
pars
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
# lambda at different rec/recsize combinations#
rec.x <- 10^(seq(-6,-2,0.5))#
recsize.x <- seq(min(params$rec.size)-0.05, max(params$rec.size)+0.1,0.1)#
store3 <- list()#
for (sp in spp) {#
	temp<-matrix(NA,length(rec.x), length(recsize.x))#
	for (i in 1:length(rec.x)){#
		rec <- rec.x[i]#
		for(j in 1:length(recsize.x)){#
			rec.size <- recsize.x[j]#
		h <- mesh()$h#
		y <- mesh()$y	#
   mod <- bigmatrix()#
   temp[i,j] <- mod$lam#
  }#
 } #
 store3[[sp]] <- temp  #
  }#
#
par(mfrow=c(3,4))#
sp.conts <- NULL#
for(sp in spp){#
	#sp<-"Ahy"#
  image(log10(rec.x), recsize.x, log(store3[[sp]]), main=sp, zlim=c(minlam, maxlam))#
  abline(h=params[params$spp==sp, "rec.size"], lty=2)#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0)#
  }#
   contour(log10(rec.x), recsize.x, log(store3[[spp[1]]]), levels=0, col=cols[1], lwd=3)#
 for(i in 1:length(spp)){#
 	sp <- spp[i]#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0, col=cols[i], lwd=3)#
  conts <- melt(store3[[spp[i]]])#
  sp.conts <- rbind(sp.conts, cbind(conts,rec = rep(rec.x, length(recsize.x)), recsize = rep(recsize.x, each=length(rec.x)), spp=sp))#
  }#
head(sp.conts)#
comp$rec <- params2$rec[match(comp$morph, params2$morph)] #
comp$rec.size <- params2$rec.size[match(comp$morph, params2$morph)] #
comp$rec.size.cm <- sqrt(((10^comp$rec.size)*10000)/pi)*2
par(mfrow=c(3,4))#
sp.conts <- NULL#
for(sp in spp){#
	#sp<-"Ahy"#
  image(log10(rec.x), recsize.x, log(store3[[sp]]), main=sp, zlim=c(minlam, maxlam))#
  abline(h=params[params$spp==sp, "rec.size"], lty=2)#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0)#
  }#
   contour(log10(rec.x), recsize.x, log(store3[[spp[1]]]), levels=0, col=cols[1], lwd=3)#
 for(i in 1:length(spp)){#
 	sp <- spp[i]#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0, col=cols[i], lwd=3)#
  conts <- melt(store3[[spp[i]]])#
  sp.conts <- rbind(sp.conts, cbind(conts,rec = rep(rec.x, length(recsize.x)), recsize = rep(recsize.x, each=length(rec.x)), spp=sp))#
  }#
head(sp.conts)
params#
dems <- c("lam.est", "eR","lam.const")#
vars <- NULL#
for (t in c(traits, "eggC", dems,  "abundance_05")){#
	#t <- "f.cm2"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}
ggplot(ek.av[!ek.av$spp=="Asp",], aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
#geom_line()+#
#geom_point()+#
facet_wrap(~morphology, scales="free_x", nrow=2)
ek.hist$morphology<-params$morph[match(ek.hist$spp, params$spp)]#
#ek.hist$X3<-ek.hist$X1*ek.hist$id#
ek.av$X3 <- ek.av$X2 * ek.av$size#
aggregate(X1~spp, ek.av, sum)#
ek.av.av<-aggregate(X3~spp+morphology, ek.hist, sum)#
ek.hist$mean<-ek.av.av$X3[match(ek.hist$spp, ek.av.av$spp)]#
ek.hist$xminusm<-(ek.hist$size-ek.hist$mean)^2#
ek.av.av$sd<-(sqrt(aggregate(xminusm~spp+morphology, ek.hist, sum)$xminusm/aggregate(xminusm~spp+morphology, ek.hist, length)$xminusm)/sqrt(aggregate(xminusm~spp+morphology, ek.hist, length)$xminusm))*2#
siznew<-ggplot(ek.av.av, aes(X3, spp, col=spp))+#
geom_boxplot(data=sdat, aes(y=spp, x=area), col="grey")+#
geom_point()+facet_wrap(~morphology, scales="free", nrow=1)+scale_colour_manual(values=cols)+#
geom_segment(aes(y=spp, yend=spp,x=X3-sd, xend=X3+sd))+theme_void()+theme(strip.text=element_blank(), axis.line.x=element_line(),axis.text.x=element_text(size=8))+#
guides(col="none", fill="none")#
siznew
reproplot<-ggplot()+#
#geom_path(data=params2, aes(f.int, eggC, group=morph, col=morphology), linetype="dotted", size=0.2)+#
#geom_path(data=params2, aes(f.int, eggC, col=morph), arrow=arrow(type="closed", length=unit(3,"mm")),linetype="dotted", size=0.2)+#
#geom_point(col="white", stroke=0.1, size=6)+#
geom_smooth(data=params[params$family=="Acroporidae",], aes(fec1cm, eggC), method="lm", formula=y~poly(x,1), se=F, size=0.2, col="black")+#
geom_segment(data=params,aes(x=fec1cm, xend=fec1cm, y=eggC-ec.se, yend=eggC+ec.se), size=0.2)+#
geom_point(data=params,aes(fec1cm, eggC, fill=spp), shape=21, stroke=0.2, size=3)+#
#geom_point(data=params[params$spp %in% c("Aro","Acy","Ahu","Ami","Gpe"),], aes(f.int, eggC, fill=spp), shape=21, stroke=0.1, size=3.5)+#
geom_text(data=params, aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text(data=params[params$AB=="R",], aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text_repel(data=params, aes(f.int+0, eggC+0,label=spp), size=2, force=0.1)+#
geom_segment(aes(x=335, xend=350, y=47, yend=43),col="grey",#colsC[3], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=405, xend=435, y=41.5, yend=40),col="grey",#colsC[2], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=700, xend=800, y=38, yend=36),col="grey",#colsC[1], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=900, xend=1000, y=28, yend=33),col="grey",#colsC[4], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=920, xend=1020, y=27, yend=27.5),col="grey",#colsC[5], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=880, xend=930, y=10, yend=10.5),col="grey",#colsC[6], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
ggtitle("Reproductive investments")+#
scale_x_log10(breaks=c(400, 600, 900, 1200))+#
geom_text(data=NULL, aes(330, 10, label='C = Common'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 6, label='R = Rare'), size=1.8, hjust=0)+#
#ylim(3,55)+#
labs(x=expression(Egg~number~(eggs~cm^-2)), y= "Egg mass (g)")+#
scale_fill_manual(values=cols)+guides(fill="none", col="none")+#
scale_colour_manual(values=colsC)+#
theme_classic()+rectheme+#
theme(plot.title=element_text(size=8, hjust=0.5))#
reproplot
########################################
# REPRODUCTIVE TRADEOFF#
########################################
params2$spp <- factor(params2$spp, levels=c("Acy","Ahy", "Aro","Ain", "Gpe","Gre","Ahu","Adi","Ami","Ana","Asp"))#
params2<-params2[order(params2$f.int),]#
#
params$AB <- ifelse(params$abundance_pair=="Rare","R","C")#
params2$AB <- ifelse(params2$abundance_pair=="Rare","R","C")#
#mat<- inv.logit(params$m.int[params$spp==sp] + params$m.slp[params$spp==sp] *x)#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
#params$ec.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, function(x){sd(x)/sqrt(length(x))})$Carbon_ug_corrected*2#
params$ec.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, sd)$Carbon_ug_corrected
########################################
# ELASTICITY & IPM MEASURES (KERNEL)#
########################################
 # eigen-things can be combined to obtain the sensitivity and elasticity matrices.#
#
s.list <- list()#
eK.list <- list()#
eR.list <- list()#
eP.list <- list()#
demovals <- NULL#
sizevals <- NULL#
#
for (sp in spp) {#
	#sp <- "Ahy"#
	rec <- params$rec.fam[params$spp==sp]#
	rec.size <- params$rsize.gr[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	K <- bigmatrix()$K#
	P <- bigmatrix()$P#
	R <- bigmatrix()$R#
	#image(t(K^0.2))#
	# population growth#
	lam <- Re(eigen(K)$values[1])#
	# sable size dist /right eigenvec#
	w.eigen<-Re(eigen(K)$vectors[,1]) #
	stable.size <- w.eigen/sum(w.eigen)#
	# reprodutive values /left eigenvec (size contributions) # Gre goes wrong#
	v.eigen<-Re(eigen(t(K))$vectors[,1]) #
	repro.val <- v.eigen/v.eigen[1] # relative#
	# reproductive val * stable size#
	v.dot.w<-sum(stable.size*repro.val*h)#
	# sensitivity matrix#
	sens<-outer(repro.val,stable.size,"*")/v.dot.w  #
#
	# elasticity matrices#
	K.elas <- sens*(K/h)/lam *h^2 # h varies by taxa#
	# survival elasticity#
	P.elas<-(P/h)*sens/lam#
	eP=sum(P.elas)*h^2#
#
	# reproduction elasticity#
	R.elas<-(R/h)*sens/lam#
	eR=sum(R.elas)*h^2#
	# Net reproductive rate from IPMbook monocarp#
	N <- solve(diag(n)-P)#
	R0 <- abs(eigen(R %*% N)$values[1])#
	# Generation time#
	GT <- log(R0)/log(lam)#
	demovals <- rbind(demovals, data.frame(spp=sp, eR, eP, R0, GT))#
	sizevals <- rbind(sizevals, data.frame(spp=sp, area=y, stable.size, repro.val, v.dot.w))#
		s.list[[sp]] <- sens#
		eR.list[[sp]] <- R.elas#
		eP.list[[sp]] <- P.elas#
		eK.list[[sp]] <- K.elas#
		}#
#
summary(s.list)
s.list <- list()#
eK.list <- list()#
eR.list <- list()#
eP.list <- list()#
demovals <- NULL#
sizevals <- NULL#
#
for (sp in spp) {#
	#sp <- "Ahy"#
	rec <- params$rec.fam[params$spp==sp]#
	rec.size <- params$rsize.gr[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	K <- bigmatrix()$K#
	P <- bigmatrix()$P#
	R <- bigmatrix()$R#
	#image(t(K^0.2))#
	# population growth#
	lam <- Re(eigen(K)$values[1])#
	# sable size dist /right eigenvec#
	w.eigen<-Re(eigen(K)$vectors[,1]) #
	stable.size <- w.eigen/sum(w.eigen)#
	# reprodutive values /left eigenvec (size contributions) # Gre goes wrong#
	v.eigen<-Re(eigen(t(K))$vectors[,1]) #
	repro.val <- v.eigen/v.eigen[1] # relative#
	# reproductive val * stable size#
	v.dot.w<-sum(stable.size*repro.val*h)#
	# sensitivity matrix#
	sens<-outer(repro.val,stable.size,"*")/v.dot.w  #
#
	# elasticity matrices#
	K.elas <- sens*(K/h)/lam *h^2 # h varies by taxa#
	# survival elasticity#
	P.elas<-(P/h)*sens/lam#
	eP=sum(P.elas)*h^2#
#
	# reproduction elasticity#
	R.elas<-(R/h)*sens/lam#
	eR=sum(R.elas)*h^2#
	# Net reproductive rate from IPMbook monocarp#
	N <- solve(diag(n)-P)#
	R0 <- abs(eigen(R %*% N)$values[1])#
	# Generation time#
	GT <- log(R0)/log(lam)#
	demovals <- rbind(demovals, data.frame(spp=sp, eR, eP, R0, GT))#
	sizevals <- rbind(sizevals, data.frame(spp=sp, area=y, stable.size, repro.val, v.dot.w))#
		s.list[[sp]] <- sens#
		eR.list[[sp]] <- R.elas#
		eP.list[[sp]] <- P.elas#
		eK.list[[sp]] <- K.elas#
		}
for (sp in spp) {#
	#sp <- "Ahy"#
	rec <- params$rec[params$spp==sp]#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	K <- bigmatrix()$K#
	P <- bigmatrix()$P#
	R <- bigmatrix()$R#
	#image(t(K^0.2))#
	# population growth#
	lam <- Re(eigen(K)$values[1])#
	# sable size dist /right eigenvec#
	w.eigen<-Re(eigen(K)$vectors[,1]) #
	stable.size <- w.eigen/sum(w.eigen)#
	# reprodutive values /left eigenvec (size contributions) # Gre goes wrong#
	v.eigen<-Re(eigen(t(K))$vectors[,1]) #
	repro.val <- v.eigen/v.eigen[1] # relative#
	# reproductive val * stable size#
	v.dot.w<-sum(stable.size*repro.val*h)#
	# sensitivity matrix#
	sens<-outer(repro.val,stable.size,"*")/v.dot.w  #
#
	# elasticity matrices#
	K.elas <- sens*(K/h)/lam *h^2 # h varies by taxa#
	# survival elasticity#
	P.elas<-(P/h)*sens/lam#
	eP=sum(P.elas)*h^2#
#
	# reproduction elasticity#
	R.elas<-(R/h)*sens/lam#
	eR=sum(R.elas)*h^2#
	# Net reproductive rate from IPMbook monocarp#
	N <- solve(diag(n)-P)#
	R0 <- abs(eigen(R %*% N)$values[1])#
	# Generation time#
	GT <- log(R0)/log(lam)#
	demovals <- rbind(demovals, data.frame(spp=sp, eR, eP, R0, GT))#
	sizevals <- rbind(sizevals, data.frame(spp=sp, area=y, stable.size, repro.val, v.dot.w))#
		s.list[[sp]] <- sens#
		eR.list[[sp]] <- R.elas#
		eP.list[[sp]] <- P.elas#
		eK.list[[sp]] <- K.elas#
		}
summary(s.list)
params[,colnames(demovals)]<- demovals[match(demovals$spp, params$spp),]
lapply(eK.list, function(x){sum(x)})
rowSums(demovals[,c("eP","eR")])
plot_grid(#
ggplot(sizevals, aes(x=area, y=repro.val, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+#
scale_y_log10()+guides(col="none"),#
ggplot(sizevals, aes(x=area, y=stable.size, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+guides(col="none"),#
ggplot(params, aes(reorder(spp, -eR), eR, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none"), #
ggplot(params, aes(reorder(spp, -R0), R0, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(reorder(spp, -GT), GT, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(r.int, eR))+geom_text(aes(label=spp))+scale_y_sqrt()+scale_x_log10()#
)
params$morphology <- factor(params$morphology, levels=c("staghorn", "tabular", "corymbose","digitate","massive"))#
elasplot<-ggplot(params, aes(reorder(spp, eR), eR, fill=spp))+#
geom_bar(stat="identity", size=0.1, col="black")+#
scale_fill_manual(values=cols)+#
guides(fill="none")+#
facet_grid(.~morphology, scales="free_x", space="free_x")+#
labs(y=expression(R[elasticity]))+#
geom_text(aes(y=eR+0.02,label=AB), size=1.8)+#
scale_y_continuous(expand=c(0,0), limits=c(0,0.45), breaks=c(0,0.1, 0.2, 0.3))+#
ggtitle("Demographic sensitivity \nto reproduction")+#
theme_classic()+theme(strip.text=element_blank(),#
 strip.background=element_blank(), axis.title.x=element_blank(),  axis.text.y=element_text(size=7),axis.text.x=element_text(size=7, angle=90, vjust=0.5), axis.title.y=element_text(size=8), plot.title=element_text(size=8, hjust=0.5, face="bold"), axis.line.y=element_line(size=0.1))#+coord_flip()#
elasplot
plot_grid(#
ggplot(sizevals, aes(x=area, y=repro.val, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+#
scale_y_log10()+guides(col="none"),#
ggplot(sizevals, aes(x=area, y=stable.size, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+guides(col="none"),#
ggplot(params, aes(reorder(spp, -eR), eR, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none"), #
ggplot(params, aes(reorder(spp, -R0), R0, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(reorder(spp, -GT), GT, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(r.int, eR))+geom_text(aes(label=spp))+scale_y_sqrt()+scale_x_log10()#
)
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- reshape(data.frame(t(eK.list[[sp]])),#
	direction="long", varying=list(c(1:100)), ids=y, times=y,#
	new.row.names=c(1:10000))#
	e.k.sum <- aggregate(X1~id, e.k, sum)#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, sp))#
	}#
head(ek.hist)
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k.sum <- aggregate(value~Var1, e.k, sum)#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, sp))#
	}#
head(ek.hist)
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k.sum <- aggregate(value~Var1, e.k, sum)#
	e.k.sum$y <- rep(y, length(y))#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, sp))#
	}#
head(ek.hist)
y
rep(y, length(y))
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k.sum <- aggregate(value~Var1, e.k, sum)#
	e.k.sum$y <- rep(y, length(y))#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, sp))#
	}#
head(ek.hist)
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k$y <- rep(y, length(y))#
	e.k.sum <- aggregate(value~Var1, e.k, sum)#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, sp))#
	}#
head(ek.hist)
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k$y <- rep(y, length(y))#
	e.k.sum <- aggregate(value~Var1+y, e.k, sum)#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, sp))#
	}#
head(ek.hist)
head(eP.list[["Ahy"]][,c(1:5)])
colnames(ek.hist)
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k$y <- rep(y, length(y))#
	e.k.sum <- aggregate(value~Var1+y, e.k, sum)#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, spp=sp))#
	}#
head(ek.hist)
plot_grid(#
ggplot(ek.hist, aes(id, X1))+#
geom_line(aes(col=spp), size=0.5)+#
scale_y_sqrt()+#
guides(col="none")+#
xlim(c(-4,1))+#
geom_vline(xintercept=log10(pi*((15/2)/100)^2))+#
scale_colour_manual(values=cols)#
,#
ggplot(sdat, aes(area))+#
geom_density(aes(col=spp))+#
guides(col="none")+#
xlim(c(-4,1))+#
scale_colour_manual(values=cols),#
ncol=1)
ggplot(ek.hist, aes(y, value))+#
geom_line(aes(col=spp), size=0.5)+#
scale_y_sqrt()+#
guides(col="none")+#
xlim(c(-4,1))+#
geom_vline(xintercept=log10(pi*((15/2)/100)^2))+#
scale_colour_manual(values=cols)
ggplot()+#
#geom_density(data=sdat, aes(x=area, fill=spp))+#
#scale_y_sqrt()+#
geom_line(data=ek.hist, aes(id, X1/10, col=sp), size=0.5)+#
guides(col="none")+#
xlim(c(-4,1))+#
facet_wrap(~spp, scales="free_y")+#
geom_vline(xintercept=log10(pi*((10/2)/100)^2))+#
geom_vline(xintercept=log10(pi*((20/2)/100)^2))+#
scale_colour_manual(values=cols)+#
scale_fill_manual(values=cols)
ggplot()+#
#geom_density(data=sdat, aes(x=area, fill=spp))+#
#scale_y_sqrt()+#
geom_line(data=ek.hist, aes(id, value/10, col=sp), size=0.5)+#
guides(col="none")+#
xlim(c(-4,1))+#
facet_wrap(~spp, scales="free_y")+#
geom_vline(xintercept=log10(pi*((10/2)/100)^2))+#
geom_vline(xintercept=log10(pi*((20/2)/100)^2))+#
scale_colour_manual(values=cols)+#
scale_fill_manual(values=cols)
ggplot()+#
#geom_density(data=sdat, aes(x=area, fill=spp))+#
#scale_y_sqrt()+#
geom_line(data=ek.hist, aes(y, value/10, col=sp), size=0.5)+#
guides(col="none")+#
xlim(c(-4,1))+#
facet_wrap(~spp, scales="free_y")+#
geom_vline(xintercept=log10(pi*((10/2)/100)^2))+#
geom_vline(xintercept=log10(pi*((20/2)/100)^2))+#
scale_colour_manual(values=cols)+#
scale_fill_manual(values=cols)
params[,colnames(demovals)]<- demovals[match(demovals$spp, params$spp),]#
lapply(eK.list, function(x){sum(x)})#
rowSums(demovals[,c("eP","eR")]) # summing to 1
ek.hist$size <- round(ek.hist$id/0.45)*0.45
ek.hist$size <- round(ek.hist$y/0.45)*0.45
ek.hist$size <- round(ek.hist$y/0.45)*0.45#
ek.av <- aggregate(X1~size+spp, ek.hist, sum)
ek.av <- aggregate(value~size+spp, ek.hist, sum)
ek.av$morphology<-params$morphology[match(ek.av$spp, params$spp)]#
ek.av$X2 <- ek.av$X1#*h^2  #/ek.av$max
ek.hist$size <- round(ek.hist$y/0.45)*0.45#
ek.av <- aggregate(value~size+spp, ek.hist, sum)#
ek.av$morphology<-params$morphology[match(ek.av$spp, params$spp)]#
ek.av$X2 <- ek.av$value#*h^2  #/ek.av$max
ek.av$morphology<-factor(ek.av$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
sdat$morphology<-factor(sdat$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
s.avs <- aggregate(area~morphology, sdat, median)#
segs2<-data.frame(morphology="tabular")#
segs2$morphology<-factor(segs2$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))
ggplot(ek.av[!ek.av$spp=="Asp",], aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
facet_wrap(~morphology, scales="free_x", nrow=2)
ggplot(ek.av, aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
facet_wrap(~morphology, scales="free_x", nrow=2)
ggplot(ek.av[!ek.av$spp=="Asp",], aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
facet_wrap(~morphology, scales="free_x", nrow=2)
########################################
# WITHIN VS BETWEEN#
########################################
#
params#
dems <- c("lam.est", "eR","lam.const")#
vars <- NULL#
for (t in c(traits, "eggC", dems,  "abundance_05")){#
	#t <- "f.cm2"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
#ggsave("figs/fig.5.png", withinplot, width=6, height=6, units="cm", dpi = 250)
head(abun)#
ab2004 <- ggplot(params, aes(x=abundance_05/2700, y=species))+#
geom_bar(stat="identity")+#
ggtitle("2004")+xlab("colonies per m2")#
ab2011_14 <- ggplot(data=abun, aes(x=N/10, y=species))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0, size=0.2)+#
facet_grid(.~year, scales="free_x", space="free_x")+xlab("Colonies per m")#
#
plot_grid(ab2004, ab2011_14, rel_widths=c(1,1.5))
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
#ggsave("figs/fig.1.png", fig.1, width=15, height=9.5, units="cm", dpi = 300)
########################################
# IPM MESH AND BOUNDARIES#
########################################
#
max.size <- 0.3 # max(ss$area)#
n <- 100#
mesh <- function(){#
	min.size <- rec.size#
	b <- seq(min.size, max.size, length=n)#
	h <- b[2] - b[1]#
	b <- c(min(b)-(2*h), min(b)-h, b)#
	y <- 0.5 * (b[1:n]+b[2:(n+1)])#
	I <- y >= rec.size#
	return(list(b=b,h=h,y=y,I=I, rec.size = rec.size))}#
#
########################################
# RECRUITMENT LIT REVIEW#
########################################
#
#  Assume: (A) closed system, (B) 11 species = all acroporids/favids#
density <- params$abundance_05/2700# 275*1*10m #
area.m2 <- log10(density*(10^(params$size.av)))#
params$fec.m2 <- exp(params$f.int+params$f.slp*area.m2) #
fam <- aggregate(fec.m2~family, params, sum)#
tiles$eggs<-fam$fec.m2[match(tiles$Family, fam$family)]#
tiles$N_m2_year[tiles$N_m2_year==0] <-1#
tiles$p.rec <- tiles$N_m2_year/tiles$eggs#
rec.fam <- aggregate(p.rec~Family, tiles, median)#
#
plot_grid(ggplot(tiles, aes(x=(N_m2_year/eggs), y=Family))+#
geom_boxplot()+scale_x_log10()+ggtitle("Recruitment"),#
ggplot(rsize, aes(x=recsize_1yr, y=Family))+geom_boxplot()+ggtitle("Recruit size"), ncol=1)
########################################
# ESTIMATE REC/LAM#
########################################
#
# recsize#
params$rec.size.const <- log10(pi*((5/2)/100)^2) # 5cm diameter#
params$rec.size <- log10(pi*(params$r.int*(10/12))^2)#
r.limit <- log10(pi*((10/100)/2)^2)#
params$rec.size <- ifelse(params$rec.size > r.limit,r.limit,params$rec.size)#
#
# recruitment #
params$rec.const <- 10^-3#
params$rec <- rec.fam$p.rec[match(params$family, rec.fam$Family)]#
params$rec <- ifelse(params$family=="Merulinidae", 5.900139e-05, 1.5*10^-3)#
#
lam.est <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))}#
 lam.est#
params$lam.est <- lam.est$lam#
#
ggplot(params, aes(reorder(spp, -lam.est), lam.est))+geom_bar(stat="identity", aes(fill=spp))+scale_fill_manual(values=cols)+geom_hline(yintercept=1)
#  Assume: (A) closed system, (B) 11 species = all acroporids/favids#
density <- params$abundance_05/2700# 275*1*10m #
area.m2 <- log10(density*(10^(params$size.av)))#
params$fec.m2 <- exp(params$f.int+params$f.slp*area.m2) #
fam <- aggregate(fec.m2~family, params, sum)#
tiles$eggs<-fam$fec.m2[match(tiles$Family, fam$family)]#
tiles$N_m2_year[tiles$N_m2_year==0] <-1#
tiles$p.rec <- tiles$N_m2_year/tiles$eggs#
rec.fam <- aggregate(p.rec~Family, tiles, median)#
#
plot_grid(ggplot(tiles, aes(x=(N_m2_year/eggs), y=Family))+#
geom_boxplot()+scale_x_log10()+ggtitle("Recruitment"),#
ggplot(rsize, aes(x=recsize_1yr, y=Family))+geom_boxplot()+ggtitle("Recruit size"), ncol=1)
lam.est <- NULL#
lam.const <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))#
rec.size <- rec.size.const#
rec <- rec.const#
h <- mesh()$h#
y <- mesh()$y#
lam.const<-rbind(lam.const, data.frame(sp, lam=bigmatrix()$lam))#
}#
params$lam.est <- lam.est$lam#
params$lam.const <- lam.const$lam
# recsize#
rec.size.const <- log10(pi*((5/2)/100)^2) # 5cm diameter#
params$rec.size <- log10(pi*(params$r.int*(10/12))^2)#
r.limit <- log10(pi*((10/100)/2)^2)#
params$rec.size <- ifelse(params$rec.size > r.limit,r.limit,params$rec.size)#
#
# recruitment #
rec.const <- 10^-3#
params$rec <- rec.fam$p.rec[match(params$family, rec.fam$Family)]#
params$rec <- ifelse(params$family=="Merulinidae", 5.900139e-05, 1.5*10^-3)#
#
lam.est <- NULL#
lam.const <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))#
rec.size <- rec.size.const#
rec <- rec.const#
h <- mesh()$h#
y <- mesh()$y#
lam.const<-rbind(lam.const, data.frame(sp, lam=bigmatrix()$lam))#
}#
params$lam.est <- lam.est$lam#
params$lam.const <- lam.const$lam
ggplot(params, aes(reorder(spp, -lam.est), lam.est))+geom_bar(stat="identity", aes(fill=spp))+scale_fill_manual(values=cols)+geom_hline(yintercept=1)
########################################
# INCREASE/DECREASE#
########################################
#
head(abun)#
diffs <- data.frame(dcast(abun, species+tran~year, value.var="N"))#
sp.avs<-aggregate(N~species, abun, mean)#
diffs$orig <- sp.avs$N[match(diffs$species, sp.avs$species)]#
diffs$diff <- (diffs$X2014-diffs$X2011)/diffs$orig#
#
diffsC <- data.frame(dcast(abun, species+tran~year, value.var="cover"))#
sp.avs<-aggregate(cover~species, abun, mean)#
diffsC$orig <- sp.avs$cover[match(diffsC$species, sp.avs$species)]#
diffs$cover <- (diffsC$X2014 - diffsC$X2011)/diffsC$orig#
#
diffs$spp<-params$spp[match(diffs$species, params$species)]#
diffs$lam <- params$lam.est[match(diffs$spp, params$spp)]#
#
ggplot(diffs, aes(reorder(spp, -lam), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0, size=0.2)+#
stat_summary(aes(reorder(spp, -lam), cover, fill=spp), geom="point", fun="mean")
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
# lambda at different rec/recsize combinations#
rec.x <- 10^(seq(-6,-2,0.5))#
recsize.x <- seq(min(params$rec.size)-0.05, max(params$rec.size)+0.1,0.1)#
store3 <- list()#
for (sp in spp) {#
	temp<-matrix(NA,length(rec.x), length(recsize.x))#
	for (i in 1:length(rec.x)){#
		rec <- rec.x[i]#
		for(j in 1:length(recsize.x)){#
			rec.size <- recsize.x[j]#
		h <- mesh()$h#
		y <- mesh()$y	#
   mod <- bigmatrix()#
   temp[i,j] <- mod$lam#
  }#
 } #
 store3[[sp]] <- temp  #
  }#
#
par(mfrow=c(3,4))#
sp.conts <- NULL#
for(sp in spp){#
	#sp<-"Ahy"#
  image(log10(rec.x), recsize.x, log(store3[[sp]]), main=sp, zlim=c(minlam, maxlam))#
  abline(h=params[params$spp==sp, "rec.size"], lty=2)#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0)#
  }#
   contour(log10(rec.x), recsize.x, log(store3[[spp[1]]]), levels=0, col=cols[1], lwd=3)#
 for(i in 1:length(spp)){#
 	sp <- spp[i]#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0, col=cols[i], lwd=3)#
  conts <- melt(store3[[spp[i]]])#
  sp.conts <- rbind(sp.conts, cbind(conts,rec = rep(rec.x, length(recsize.x)), recsize = rep(recsize.x, each=length(rec.x)), spp=sp))#
  }#
head(sp.conts)
par(mfrow=c(3,4))#
sp.conts <- NULL#
for(sp in spp){#
	#sp<-"Ahy"#
  image(log10(rec.x), recsize.x, log(store3[[sp]]), main=sp, zlim=c(minlam, maxlam))#
  abline(h=params[params$spp==sp, "rec.size"], lty=2)#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0)#
  }#
   contour(log10(rec.x), recsize.x, log(store3[[spp[1]]]), levels=0, col=cols[1], lwd=3)#
 for(i in 1:length(spp)){#
 	sp <- spp[i]#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0, col=cols[i], lwd=3)#
  conts <- melt(store3[[spp[i]]])#
  sp.conts <- rbind(sp.conts, cbind(conts,rec = rep(rec.x, length(recsize.x)), recsize = rep(recsize.x, each=length(rec.x)), spp=sp))#
  }#
head(sp.conts)
minlam <- min(log(do.call("rbind", store3)))#
maxlam <- max(log(do.call("rbind", store3)))#
#
par(mfrow=c(3,4))#
sp.conts <- NULL#
for(sp in spp){#
	#sp<-"Ahy"#
  image(log10(rec.x), recsize.x, log(store3[[sp]]), main=sp, zlim=c(minlam, maxlam))#
  abline(h=params[params$spp==sp, "rec.size"], lty=2)#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0)#
  }#
   contour(log10(rec.x), recsize.x, log(store3[[spp[1]]]), levels=0, col=cols[1], lwd=3)#
 for(i in 1:length(spp)){#
 	sp <- spp[i]#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0, col=cols[i], lwd=3)#
  conts <- melt(store3[[spp[i]]])#
  sp.conts <- rbind(sp.conts, cbind(conts,rec = rep(rec.x, length(recsize.x)), recsize = rep(recsize.x, each=length(rec.x)), spp=sp))#
  }#
head(sp.conts)
########################################
# FIG2#
########################################
#
#speed <- 0.1 # slow but final#
speed <- 0.5 # fast#
source("figs/fig.2.R")#
fig2#
#ggsave("figs/fig.2.png", fig2, width=15, height=8, units="cm", dpi = 250)
########################################
# COMPARE MORPHOLOGIES#
########################################
#
params2<-rbind(params, params[6,]) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#AN/AM#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[order(comp$Common)]#
#
comp$AC<-params2$abundance_05[match(comp$Common, params2$spp)]#
comp$AR<-params2$abundance_05[match(comp$Rare, params2$spp)]#
comp$abundiff <- comp$AC/comp$AR	#
comp$lamC <- params$lam.est[match(comp$Common, params$spp)]	#
comp$lamR <- params$lam.est[match(comp$Rare, params$spp)]#
comp$lamdiff <- comp$lamC - comp$lamR#
comp$logdiff <- log(comp$lamC) - log(comp$lamR)#
#
# Double recruitment#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] * 2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam=bigmatrix()$lam))#
	}#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
########################################
# TIME NEEDED TO GET DIFFERENCES#
########################################
#
# method 1 #
#
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$abundiff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)
########################################
# WITHIN VS BETWEEN#
########################################
#
params#
dems <- c("lam.est", "eR","lam.const")#
vars <- NULL#
for (t in c(traits, "eggC", dems,  "abundance_05")){#
	#t <- "f.cm2"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
#ggsave("figs/fig.5.png", withinplot, width=6, height=6, units="cm", dpi = 250)
vars
ggplot(vars, aes(within,reorder(t, -within))+geom_bar(stat="identity")
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k$y <- rep(y, length(y))#
	e.k.sum <- aggregate(value~Var1+y, e.k, sum)#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, spp=sp))#
	}#
head(ek.hist)#
#
ek.hist$size <- round(ek.hist$y/0.45)*0.45#
ek.av <- aggregate(value~size+spp, ek.hist, sum)#
ek.av$morphology<-params$morphology[match(ek.av$spp, params$spp)]#
ek.av$X2 <- ek.av$value#*h^2  #/ek.av$max#
#
ggplot(ek.av[!ek.av$spp=="Asp",], aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
facet_wrap(~morphology, scales="free_x", nrow=2)
########################################
# ELASTICITY & IPM MEASURES #
########################################
 # eigen-things combined to get sensitivity/elasticity matrices.#
#
s.list <- list()#
eK.list <- list()#
eR.list <- list()#
eP.list <- list()#
demovals <- NULL#
sizevals <- NULL#
#
for (sp in spp) {#
	#sp <- "Ahy"#
	rec <- params$rec[params$spp==sp]#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	K <- bigmatrix()$K#
	P <- bigmatrix()$P#
	R <- bigmatrix()$R#
	#image(t(K^0.2))#
	# population growth#
	lam <- Re(eigen(K)$values[1])#
	# sable size dist /right eigenvec#
	w.eigen<-Re(eigen(K)$vectors[,1]) #
	stable.size <- w.eigen/sum(w.eigen)#
	# reprodutive values /left eigenvec (size contributions) # Gre goes wrong#
	v.eigen<-Re(eigen(t(K))$vectors[,1]) #
	repro.val <- v.eigen/v.eigen[1] # relative#
	# reproductive val * stable size#
	v.dot.w<-sum(stable.size*repro.val*h)#
	# sensitivity matrix#
	sens<-outer(repro.val,stable.size,"*")/v.dot.w  #
#
	# elasticity matrices#
	K.elas <- sens*(K/h)/lam *h^2 # h varies by taxa#
	# survival elasticity#
	P.elas<-(P/h)*sens/lam#
	eP=sum(P.elas)*h^2#
#
	# reproduction elasticity#
	R.elas<-(R/h)*sens/lam#
	eR=sum(R.elas)*h^2#
	# Net reproductive rate from IPMbook monocarp#
	N <- solve(diag(n)-P)#
	R0 <- abs(eigen(R %*% N)$values[1])#
	# Generation time#
	GT <- log(R0)/log(lam)#
	demovals <- rbind(demovals, data.frame(spp=sp, eR, eP, R0, GT))#
	sizevals <- rbind(sizevals, data.frame(spp=sp, area=y, stable.size, repro.val, v.dot.w))#
		s.list[[sp]] <- sens#
		eR.list[[sp]] <- R.elas#
		eP.list[[sp]] <- P.elas#
		eK.list[[sp]] <- K.elas#
		}#
#
params[,colnames(demovals)]<- demovals[match(demovals$spp, params$spp),]#
lapply(eK.list, function(x){sum(x)})#
rowSums(demovals[,c("eP","eR")]) # summing to 1#
#
plot_grid(#
ggplot(sizevals, aes(x=area, y=repro.val, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+#
scale_y_log10()+guides(col="none"),#
ggplot(sizevals, aes(x=area, y=stable.size, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+guides(col="none"),#
ggplot(params, aes(reorder(spp, -eR), eR, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none"), #
ggplot(params, aes(reorder(spp, -R0), R0, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(reorder(spp, -GT), GT, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(r.int, eR))+geom_text(aes(label=spp))+scale_y_sqrt()+scale_x_log10())
plot_grid(ecplot,reproplot, nrow=1, rel_widths=c(1.15,1))
params$AB <- ifelse(params$abundance_pair=="Rare","R","C")#
params2$AB <- ifelse(params2$abundance_pair=="Rare","R","C")#
#mat<- inv.logit(params$m.int[params$spp==sp] + params$m.slp[params$spp==sp] *x)#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
#params$ec.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, function(x){sd(x)/sqrt(length(x))})$Carbon_ug_corrected*2#
params$ec.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, sd)$Carbon_ug_corrected#
ggplot()+#
geom_smooth(data=params[params$family=="Acroporidae",], aes( eggC,fec1cm), method="lm", formula=y~poly(x,1), se=F, size=0.5, col="grey")+#
geom_point(data=params,aes(eggC, fec1cm, fill=spp), shape=21, stroke=0.2, size=3)+#
scale_y_log10(breaks=c(400, 600, 900))+#
scale_fill_manual(values=cols)+guides(fill="none", col="none")+#
theme_classic()+rectheme
params$fec1cm[match(params2$spp, params$spp)]
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]
ec$morph<-params$morphology[match(ec$spp, params$spp)]#
ec.min<-aggregate(Carbon_ug_corrected~spp+morph, ec, max)#
ec.min$AB<-params$AB[match(ec.min$spp,params$spp)]#
ecplot<-ggplot()+#
geom_boxplot(data=ec, aes(reorder(morph, -Carbon_ug_corrected), Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+#
ggtitle("Egg size")+#
labs( y= "Egg mass (g)")+#
#geom_text(data=params[params$AB=="R",], aes(morphology, eggC, label=AB), size=1.8, nudge_x=0.5)+#
geom_text(data=ec.min, aes(x=reorder(morph, -Carbon_ug_corrected),  y=Carbon_ug_corrected, label=AB), size=1.8, position = position_dodge(width = 1))+#
#geom_text(data=subset(params[params$AB=="C",], spp!="Asp"), aes(morphology, eggC, label=AB), size=1.8, nudge_x=-0.5)+#
#geom_text(data=subset(params, spp=="Asp"), aes(morphology, eggC, label=AB), size=1.8, nudge_x=+0.3)+#
geom_text(data=NULL, aes(0.5, 7, label='C = Common'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(0.5, 2, label='R = Rare'), size=1.8, hjust=0)+#
#ylim(0,57)+#
scale_fill_manual(values=cols)+guides(fill="none")+#
theme_classic()+rectheme+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=30, hjust=1))
ecplot
ggplot()+#
geom_boxplot(data=ec, aes(reorder(morph, -Carbon_ug_corrected), Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
########################################
# REPRODUCTIVE TRADEOFF#
########################################
ggplot()+#
geom_boxplot(data=ec, aes(reorder(morph, -Carbon_ug_corrected), Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]
ggplot()+#
geom_boxplot(data=ec, aes(reorder(morph, -Carbon_ug_corrected), Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
ggplot(params, aes(fec1cm, eggC))+geom_point()
ggplot(params, aes(fec1cm, eggC, col=spp))+geom_point()
ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))#
, nrow=1, rel_widths=c(1.15,1))
ecplot <- ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")#
#
#mat<- inv.logit(params$m.int[params$spp==sp] + params$m.slp[params$spp==sp] *x)#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))#
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))#
, nrow=1, rel_widths=c(1.15,1))
# REPRODUCTIVE TRADEOFF#
########################################
ecplot <- ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")#
#
#mat<-inv.logit(params$m.int[params$spp==sp]+params$m.slp[params$spp==sp]*x)#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp)), nrow=1, rel_widths=c(1.15,1))
########################################
# ELASTICITY & IPM MEASURES #
########################################
 # eigen-things combined to get sensitivity/elasticity matrices.#
#
s.list <- list()#
eK.list <- list()#
eR.list <- list()#
eP.list <- list()#
demovals <- NULL#
sizevals <- NULL#
#
for (sp in spp) {#
	#sp <- "Ahy"#
	rec <- params$rec[params$spp==sp]#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	K <- bigmatrix()$K#
	P <- bigmatrix()$P#
	R <- bigmatrix()$R#
	#image(t(K^0.2))#
	# population growth#
	lam <- Re(eigen(K)$values[1])#
	# sable size dist /right eigenvec#
	w.eigen<-Re(eigen(K)$vectors[,1]) #
	stable.size <- w.eigen/sum(w.eigen)#
	# reprodutive values /left eigenvec (size contributions) # Gre goes wrong#
	v.eigen<-Re(eigen(t(K))$vectors[,1]) #
	repro.val <- v.eigen/v.eigen[1] # relative#
	# reproductive val * stable size#
	v.dot.w<-sum(stable.size*repro.val*h)#
	# sensitivity matrix#
	sens<-outer(repro.val,stable.size,"*")/v.dot.w  #
#
	# elasticity matrices#
	K.elas <- sens*(K/h)/lam *h^2 # h varies by taxa#
	# survival elasticity#
	P.elas<-(P/h)*sens/lam#
	eP=sum(P.elas)*h^2#
#
	# reproduction elasticity#
	R.elas<-(R/h)*sens/lam#
	eR=sum(R.elas)*h^2#
	# Net reproductive rate from IPMbook monocarp#
	N <- solve(diag(n)-P)#
	R0 <- abs(eigen(R %*% N)$values[1])#
	# Generation time#
	GT <- log(R0)/log(lam)#
	demovals <- rbind(demovals, data.frame(spp=sp, eR, eP, R0, GT))#
	sizevals <- rbind(sizevals, data.frame(spp=sp, area=y, stable.size, repro.val, v.dot.w))#
		s.list[[sp]] <- sens#
		eR.list[[sp]] <- R.elas#
		eP.list[[sp]] <- P.elas#
		eK.list[[sp]] <- K.elas#
		}#
#
params[,colnames(demovals)]<- demovals[match(demovals$spp, params$spp),]#
lapply(eK.list, function(x){sum(x)})#
rowSums(demovals[,c("eP","eR")]) # summing to 1#
#
plot_grid(#
ggplot(sizevals, aes(x=area, y=repro.val, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+#
scale_y_log10()+guides(col="none"),#
ggplot(sizevals, aes(x=area, y=stable.size, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+guides(col="none"),#
ggplot(params, aes(reorder(spp, -eR), eR, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none"), #
ggplot(params, aes(reorder(spp, -R0), R0, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(reorder(spp, -GT), GT, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(r.int, eR))+geom_text(aes(label=spp))+scale_y_sqrt()+scale_x_log10())
merge(pars, data.frame(gen=1:ngen))
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","lam.est")]#
pars#
#
proj <- merge(pars, data.frame(gen=1:ngen))#
proj$n <- n1*proj$lam.est^proj$gen#
#proj$id <- paste(proj$morph, proj$gen, sep="_")#
#proj$abun <- params$abundance_05[match(proj$spp, params$spp)]#
#
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
acast(morph+gen~abundance_pair, data=proj, value.var="n")
dcast(morph+gen~abundance_pair, data=proj, value.var="n")
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- a_diff$diff[match(proj2$morph, a_diff$morph)]#
head(proj2)
n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","abundance_05","lam.est")]#
proj <- merge(pars, data.frame(gen=1:ngen))#
proj$n <- n1*proj$lam.est^proj$gen
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","lam.est")]#
proj <- merge(pars, data.frame(gen=1:ngen))#
proj$n <- n1*proj$lam.est^proj$gen
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- a_diff$diff[match(proj2$morph, a_diff$morph)]#
head(proj2)
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
head(proj2)
rm(list = ls())#
library("ggrepel")#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
library("stats4")#
#
########################################
# LOAD DATA#
########################################
source("R/functions.R")#
source("R/data_prep.R")#
sdat<-sdat[!sdat$colony_id==287,]#
gdat<-gdat[!gdat$colony_id==287,]#
#
########################################
# MODEL PARAMETERS#
########################################
source("R/params.R")#
fig.s1#
#ggsave("figs/supp/fig.s1.png", fig.s1, width=25, height=13, units="cm", dpi = 300)#
#
########################################
# DEMOGRAPHIC SPACE#
########################################
# size#
ggplot(ss, aes(x=area, col=spp))+#
geom_density()+scale_colour_manual(values=cols)#
#
# proportion mortality at 100cm2#
params$p_mort<-inv.logit((params$p.slp*log10(0.01))+params$p.int)#
#
# average modelled survival#
params$av.surv<-aggregate(pred~spp, s.pred,mean)$pred#
#
# recruit survival#
rec.cm <- 11#
params$survcm<-aggregate(pred~spp, s.pred[s.pred$area<log10(pi*(rec.cm/100/2)^2),], FUN=mean)$pred#
#
# size at maximum survival #
max.surv<-do.call(rbind, lapply(split(s.pred, as.factor(s.pred$spp)), function(x) {return(x[which.max(x$pred),])}))#
params$safe.size<-max.surv$area#
#
# fecundity per area#
params$f.cm2<-aggregate(f.cm2~spp, fec,mean)$f.cm2#
#ggplot(params, aes(f.cm2, f.int))+geom_text(aes(label=spp))#
#
# total fecundity#
head(fec)#
params$f.colony<-aggregate(fecundity~spp, fec,mean)$fecundity#
#
# average size#
size.av <- aggregate(area~spp, ss[!is.na(ss$spp),], mean)#
params$size.av <- size.av$area[match(params$spp, size.av$spp)]#
#
# minimum at reproductive maturity#
params$min.r<-1/aggregate(area_cm2~spp, fec[fec$reproductive==1,], min)$area_cm2#
#
# PCA of demographic parameters#
colnames(params)#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
#
# explained variation#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100#
exp#
#
# Figure S2 - fast/slow continuum#
#source("figs/supp/fig.S2_lms.R")	#
#fig.s2
########################################
# ABUNDANCE#
########################################
#
head(abun)#
ab2004 <- ggplot(params, aes(x=abundance_05/2700, y=species))+#
geom_bar(stat="identity")+#
ggtitle("2004")+xlab("colonies per m2")#
ab2011_14 <- ggplot(data=abun, aes(x=N/10, y=species))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0, size=0.2)+#
facet_grid(.~year, scales="free_x", space="free_x")+xlab("Colonies per m")#
#
plot_grid(ab2004, ab2011_14, rel_widths=c(1,1.5))#
#
# Figure S3 - abundances#
#source("figs/supp/fig.S3_abun.R")	#
#fig.s3
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
#ggsave("figs/fig.1.png", fig.1, width=15, height=9.5, units="cm", dpi = 300)
########################################
# IPM MESH AND BOUNDARIES#
########################################
#
max.size <- 0.3 # max(ss$area)#
n <- 100#
mesh <- function(){#
	min.size <- rec.size#
	b <- seq(min.size, max.size, length=n)#
	h <- b[2] - b[1]#
	b <- c(min(b)-(2*h), min(b)-h, b)#
	y <- 0.5 * (b[1:n]+b[2:(n+1)])#
	I <- y >= rec.size#
	return(list(b=b,h=h,y=y,I=I, rec.size = rec.size))}#
#
########################################
# GENERATE IPMS#
########################################
#
par(mfcol=c(2, 6))#
#
lam_const <- NULL#
ipm.k.list <- list()#
ipm.p.list <- list()#
ipm.r.list <- list()#
y.list <- list()#
#
for (sp in spp) {#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()#
   # plot#
	image(y, y, t(mod$P)^0.3)   #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
	y.list[[sp]] <- y #
	ipm.k.list[[sp]] <- mod$P#
	ipm.p.list[[sp]] <- mod$P#
	ipm.r.list[[sp]] <- mod$R#
	}#
#
# Figure S4#
source("figs/supp/fig.s4_ipms.R")	#
#fig.s4
fig.s4
source("figs/supp/fig.s4_ipms.R")	#
#fig.s4
par(mfcol=c(2, 6))#
#
lam_const <- NULL#
ipm.k.list <- list()#
ipm.p.list <- list()#
ipm.r.list <- list()#
y.list <- list()#
#
for (sp in spp) {#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()#
   # plot#
	image(y, y, t(mod$P)^0.3)   #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
	y.list[[sp]] <- y #
	ipm.k.list[[sp]] <- mod$P#
	ipm.p.list[[sp]] <- mod$P#
	ipm.r.list[[sp]] <- mod$R#
	}#
#
# Figure S4#
source("figs/supp/fig.s4_ipms.R")	#
#fig.s4
max.size <- 0.3 # max(ss$area)#
n <- 100#
mesh <- function(){#
	min.size <- rec.size#
	b <- seq(min.size, max.size, length=n)#
	h <- b[2] - b[1]#
	b <- c(min(b)-(2*h), min(b)-h, b)#
	y <- 0.5 * (b[1:n]+b[2:(n+1)])#
	I <- y >= rec.size#
	return(list(b=b,h=h,y=y,I=I, rec.size = rec.size))}
sp<-"Ahy"#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()
max.size <- 0.3 # max(ss$area)#
n <- 100#
mesh <- function(){#
	min.size <- rec.size#
	b <- seq(min.size, max.size, length=n)#
	h <- b[2] - b[1]#
	b <- c(min(b)-(2*h), min(b)-h, b)#
	y <- 0.5 * (b[1:n]+b[2:(n+1)])#
	I <- y >= rec.size#
	return(list(b=b,h=h,y=y,I=I, rec.size = rec.size))}
mesh
sp<-"Ahy"#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()
#  Assume: (A) closed system, (B) 11 species = all acroporids/favids#
density <- params$abundance_05/2700# 275*1*10m #
area.m2 <- log10(density*(10^(params$size.av)))#
params$fec.m2 <- exp(params$f.int+params$f.slp*area.m2) #
fam <- aggregate(fec.m2~family, params, sum)#
tiles$eggs<-fam$fec.m2[match(tiles$Family, fam$family)]#
tiles$N_m2_year[tiles$N_m2_year==0] <-1#
tiles$p.rec <- tiles$N_m2_year/tiles$eggs#
rec.fam <- aggregate(p.rec~Family, tiles, median)#
#
plot_grid(ggplot(tiles, aes(x=(N_m2_year/eggs), y=Family))+#
geom_boxplot()+scale_x_log10()+ggtitle("Recruitment"),#
ggplot(rsize, aes(x=recsize_1yr, y=Family))+geom_boxplot()+ggtitle("Recruit size"), ncol=1)#
# recsize#
rec.size.const <- log10(pi*((5/2)/100)^2) # 5cm diameter#
params$rec.size <- log10(pi*(params$r.int*(10/12))^2)#
r.limit <- log10(pi*((10/100)/2)^2)#
params$rec.size <- ifelse(params$rec.size > r.limit,r.limit,params$rec.size)#
#
# recruitment #
rec.const <- 10^-3#
params$rec <- rec.fam$p.rec[match(params$family, rec.fam$Family)]#
params$rec <- ifelse(params$family=="Merulinidae", 5.900139e-05, 1.5*10^-3)
########################################
# GENERATE IPMS#
########################################
#
par(mfcol=c(2, 6))#
#
ipm.k.list <- list()#
ipm.p.list <- list()#
ipm.r.list <- list()#
y.list <- list()#
#
for (sp in spp) {#
	sp<-"Ahy"#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()#
   # plot#
	image(y, y, t(mod$P)^0.3)   #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
	y.list[[sp]] <- y #
	ipm.k.list[[sp]] <- mod$P#
	ipm.p.list[[sp]] <- mod$P#
	ipm.r.list[[sp]] <- mod$R#
	}#
#
# Figure S4#
source("figs/supp/fig.s4_ipms.R")	#
#fig.s4
fig.s4
########################################
# IMAGES#
########################################
tab<-readPNG("data/coral_silhouettes/tabularG.png")#
tab<-rasterGrob(tab, interpolate=TRUE)#
mas<-readPNG("data/coral_silhouettes/massiveG.png")#
mas<-rasterGrob(mas, interpolate=TRUE)#
cor<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor<-rasterGrob(cor, interpolate=TRUE)#
cor<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor<-rasterGrob(cor, interpolate=TRUE)#
dig<-readPNG("data/coral_silhouettes/digitateG.png")#
dig<-rasterGrob(dig, interpolate=TRUE)#
brn<-readPNG("data/coral_silhouettes/branchingG.png")#
brn<-rasterGrob(brn, interpolate=TRUE)#
#
library("viridis")#
#
plots <- list()#
for (sp in spp) {#
	#sp <- "Acy"#
	ydat <- data.frame(n=c(1:n), y=y.list[[sp]])#
	ipm.p <- melt(ipm.p.list[[sp]])#
	ipm.p$y1 <- ydat$y[match(ipm.p$Var1, ydat$n)]#
	ipm.p$y2 <- ydat$y[match(ipm.p$Var2, ydat$n)]#
	ipm.r <- melt(ipm.r.list[[sp]])#
	ipm.r$y1 <- ydat$y[match(ipm.r$Var1, ydat$n)]#
	ipm.r$y2 <- ydat$y[match(ipm.r$Var2, ydat$n)]#
plot<-ggplot()+#
	geom_raster(data=ipm.p, aes(y2, y1,fill=value))+#
	geom_point(data=ipm.r[ipm.r$value>0,], aes(y2, y1, col=value, alpha=log(value)), size=0.1)+#
	ggtitle(paste(params$species[params$spp==sp]))+#
	geom_point(data=sub, aes(x=area, y=area_next), col="grey", size=0.01)+#
	scale_fill_viridis(n.breaks=3, trans="sqrt")+#
	scale_colour_viridis(option="C", trans="log", breaks=c(10^3, 10^5, 10^7), labels=c(expression(~10^3),expression(~10^5), expression(~10^7)))+#
	theme_bw()+#
	guides(alpha="none", fill=guide_colourbar(order=1), colour=guide_colourbar(order=2))+#
	geom_abline(col="black", slope=1, size=0.1, linetype="dashed")+#
	scale_x_continuous(expand=c(0,0), limits=c(min(ipm.p$y2), max(ipm.p$y2)), labels=function(x){10^x}, breaks=c(-3,-2,-1,0,1))+#
	scale_y_continuous(expand=c(0,0), limits=c(min(ipm.p$y1), max(ipm.p$y1)), labels=function(x){10^x}, breaks=c(-3,-2,-1,0,1) )+#
	xlab(expression(area[~t]~(m^2)))+#
	ylab(expression(area[~t~+1]~(m^2)))+#
	theme(legend.title=element_blank(), legend.key.size=unit(2,"mm"), #
	legend.text=element_text(size=5, colour="white"), axis.title.x=element_text(size=8,color="white"), #
	legend.spacing.x = unit(0.05, "cm"),#
	legend.margin = margin(0,0.1,0,0, unit="cm"),#
	axis.title.y=element_blank(), #
	legend.key.height=unit(1.4,"mm"), legend.key.width=unit(1,"mm"),#
	plot.title=element_text(size=7, face="bold.italic", hjust=0.5), legend.position=c(0.22,0.91), #
	legend.background=element_blank(), #
	legend.box = "horizontal", #
	plot.background=element_blank(), #
	axis.text.y=element_text(size=6, angle=90, hjust=0.5),#
	axis.text.x=element_text(size=6))#
#
	plots[[sp]] <- plot#
	}#
#
#fig.s4 <- plot_grid(plotlist=plots)#
#fig.s4#
#
fig.s4 <- plot_grid(#
plot_grid(plots[["Ahy"]]+annotation_custom(tab,-0.5,0.2,-2,-1.5), NULL, plots[["Acy"]]+annotation_custom(tab,-0.5,0.2,-2,-1.5)+#
theme(axis.title.y=element_text(size=8, angle=90, hjust=1.2)), rel_heights=c(1,-0.12,1), ncol=1, align="v"),#
plot_grid(plots[["Ain"]]+annotation_custom(brn,-0.5,0.5,-2,-1.3), NULL, plots[["Aro"]]+annotation_custom(brn,-0.5,0.5,-2,-1.3), rel_heights=c(1,-0.12,1), ncol=1),#
plot_grid(plots[["Ana"]]+annotation_custom(cor,-1,0.5,-2.5,-2), NULL, plots[["Asp"]]+annotation_custom(cor,-1,0.5,-2.3,-1.8)+#
theme(axis.title.x=element_text(colour="black",size=8)), rel_heights=c(1,-0.12,1), ncol=1),#
plot_grid(plots[["Adi"]]+annotation_custom(dig,-1,0.3,-2.8,-2.2), NULL, plots[["Ahu"]]+annotation_custom(dig,-1,0.3,-2.8,-2.2), rel_heights=c(1,-0.12,1), ncol=1),#
plot_grid(plots[["Gre"]]+annotation_custom(mas,-0.8,0,-3,-2.2), NULL, plots[["Gpe"]]+annotation_custom(mas,-0.8,0,-3,-2.2), rel_heights=c(1,-0.12,1), ncol=1),#
align="h",#
nrow=1, rel_widths=c(1.1,1,1,1,1))#
fig.s4#
#
#ggsave("figs/fig.s2.png", fig.s2, width=23, height=10.5, units="cm", dpi = 300)
sp <- "Acy"#
	ydat <- data.frame(n=c(1:n), y=y.list[[sp]])#
	ipm.p <- melt(ipm.p.list[[sp]])#
	ipm.p$y1 <- ydat$y[match(ipm.p$Var1, ydat$n)]#
	ipm.p$y2 <- ydat$y[match(ipm.p$Var2, ydat$n)]#
	ipm.r <- melt(ipm.r.list[[sp]])#
	ipm.r$y1 <- ydat$y[match(ipm.r$Var1, ydat$n)]#
	ipm.r$y2 <- ydat$y[match(ipm.r$Var2, ydat$n)]
c(1:n)
data.frame(n=c(1:n), y=y.list[[sp]])
y.list[[sp]]
par(mfcol=c(2, 6))#
#
ipm.k.list <- list()#
ipm.p.list <- list()#
ipm.r.list <- list()#
y.list <- list()#
#
for (sp in spp) {#
	sp<-"Ahy"#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()#
   # plot#
	image(y, y, t(mod$P)^0.3)   #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
	y.list[[sp]] <- y #
	ipm.k.list[[sp]] <- mod$P#
	ipm.p.list[[sp]] <- mod$P#
	ipm.r.list[[sp]] <- mod$R#
	}
y.list[[sp]]
########################################
# GENERATE IPMS#
########################################
#
par(mfcol=c(2, 6))#
#
ipm.k.list <- list()#
ipm.p.list <- list()#
ipm.r.list <- list()#
y.list <- list()#
#
for (sp in spp) {#
	sp<-"Ahy"#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()#
   # plot#
	image(y, y, t(mod$P)^0.3)   #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
	y.list[[sp]] <- y #
	ipm.k.list[[sp]] <- mod$P#
	ipm.p.list[[sp]] <- mod$P#
	ipm.r.list[[sp]] <- mod$R#
	}#
#
# Figure S4#
source("figs/supp/fig.s4_ipms.R")	#
fig.s4
########################################
# GENERATE IPMS#
########################################
#
par(mfcol=c(2, 6))#
#
ipm.k.list <- list()#
ipm.p.list <- list()#
ipm.r.list <- list()#
y.list <- list()#
#
for (sp in spp) {#
	sp<-"Ahy"#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()#
   # plot#
	image(y, y, t(mod$P)^0.3)   #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
	y.list[[sp]] <- y #
	ipm.k.list[[sp]] <- mod$P#
	ipm.p.list[[sp]] <- mod$P#
	ipm.r.list[[sp]] <- mod$R#
	}#
#
# Figure S4#
source("figs/supp/fig.s4_ipms.R")	#
fig.s4
y.list[[sp]]
y.list[[sp]] <- y
y.list[[sp]]
par(mfcol=c(2, 6))#
#
ipm.k.list <- list()#
ipm.p.list <- list()#
ipm.r.list <- list()#
y.list <- list()#
#
for (sp in spp) {#
	#sp<-"Ahy"#
	rec <- 1#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	sub<-gdat[gdat$spp==sp,]#
    mod <- bigmatrix()#
   # plot#
	image(y, y, t(mod$P)^0.3)   #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
	y.list[[sp]] <- y #
	ipm.k.list[[sp]] <- mod$P#
	ipm.p.list[[sp]] <- mod$P#
	ipm.r.list[[sp]] <- mod$R#
	}#
#
# Figure S4#
source("figs/supp/fig.s4_ipms.R")	#
fig.s4
########################################
# ESTIMATE LAM#
########################################
#
lam.est <- NULL#
lam.const <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))#
rec.size <- rec.size.const#
rec <- rec.const#
h <- mesh()$h#
y <- mesh()$y#
lam.const<-rbind(lam.const, data.frame(sp, lam=bigmatrix()$lam))#
}#
params$lam.est <- lam.est$lam#
params$lam.const <- lam.const$lam#
#
ggplot(params, aes(reorder(spp, -lam.est), lam.est))+geom_bar(stat="identity", aes(fill=spp))+scale_fill_manual(values=cols)+geom_hline(yintercept=1)
########################################
# INCREASE/DECREASE#
########################################
#
head(abun)#
diffs <- data.frame(dcast(abun, species+tran~year, value.var="N"))#
sp.avs<-aggregate(N~species, abun, mean)#
diffs$orig <- sp.avs$N[match(diffs$species, sp.avs$species)]#
diffs$diff <- (diffs$X2014-diffs$X2011)/diffs$orig#
#
diffsC <- data.frame(dcast(abun, species+tran~year, value.var="cover"))#
sp.avs<-aggregate(cover~species, abun, mean)#
diffsC$orig <- sp.avs$cover[match(diffsC$species, sp.avs$species)]#
diffs$cover <- (diffsC$X2014 - diffsC$X2011)/diffsC$orig#
#
diffs$spp<-params$spp[match(diffs$species, params$species)]#
diffs$lam <- params$lam.est[match(diffs$spp, params$spp)]#
#
ggplot(diffs, aes(reorder(spp, -lam), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0, size=0.2)+#
stat_summary(aes(reorder(spp, -lam), cover, fill=spp), geom="point", fun="mean")
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
# lambda at different rec/recsize combinations#
rec.x <- 10^(seq(-6,-2,0.5))#
recsize.x <- seq(min(params$rec.size)-0.05, max(params$rec.size)+0.1,0.1)#
store3 <- list()#
for (sp in spp) {#
	temp<-matrix(NA,length(rec.x), length(recsize.x))#
	for (i in 1:length(rec.x)){#
		rec <- rec.x[i]#
		for(j in 1:length(recsize.x)){#
			rec.size <- recsize.x[j]#
		h <- mesh()$h#
		y <- mesh()$y	#
   mod <- bigmatrix()#
   temp[i,j] <- mod$lam#
  }#
 } #
 store3[[sp]] <- temp  #
  }#
#
minlam <- min(log(do.call("rbind", store3)))#
maxlam <- max(log(do.call("rbind", store3)))#
#
par(mfrow=c(3,4))#
sp.conts <- NULL#
for(sp in spp){#
	#sp<-"Ahy"#
  image(log10(rec.x), recsize.x, log(store3[[sp]]), main=sp, zlim=c(minlam, maxlam))#
  abline(h=params[params$spp==sp, "rec.size"], lty=2)#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0)#
  }#
   contour(log10(rec.x), recsize.x, log(store3[[spp[1]]]), levels=0, col=cols[1], lwd=3)#
 for(i in 1:length(spp)){#
 	sp <- spp[i]#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0, col=cols[i], lwd=3)#
  conts <- melt(store3[[spp[i]]])#
  sp.conts <- rbind(sp.conts, cbind(conts,rec = rep(rec.x, length(recsize.x)), recsize = rep(recsize.x, each=length(rec.x)), spp=sp))#
  }#
head(sp.conts)
#speed <- 0.1 # slow but final#
speed <- 0.5 # fast#
source("figs/fig.2.R")#
fig2#
#ggsave("figs/fig.2.png", fig2, width=15, height=8, units="cm", dpi = 250)
########################################
# COMPARE MORPHOLOGIES#
########################################
#
params2<-rbind(params, params[6,]) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#AN/AM#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[order(comp$Common)]#
#
comp$AC<-params2$abundance_05[match(comp$Common, params2$spp)]#
comp$AR<-params2$abundance_05[match(comp$Rare, params2$spp)]#
comp$abundiff <- comp$AC/comp$AR	#
comp$lamC <- params$lam.est[match(comp$Common, params$spp)]	#
comp$lamR <- params$lam.est[match(comp$Rare, params$spp)]#
comp$lamdiff <- comp$lamC - comp$lamR#
comp$logdiff <- log(comp$lamC) - log(comp$lamR)#
#
# Double recruitment#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] * 2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam=bigmatrix()$lam))#
	}#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
########################################
# TIME NEEDED TO GET DIFFERENCES#
########################################
#
# method 1 #
#
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$abundiff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)#
#
# method 2 - projecting lamda#
#
n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","lam.est")]#
proj <- merge(pars, data.frame(gen=1:ngen))#
proj$n <- n1*proj$lam.est^proj$gen#
#
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")#
#
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
head(proj2)
proj
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
head(proj2)
aggregate(gen~morph, proj3, max)
head(proj2, 20)
proj2
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
#
head(proj2)
proj3 <- proj2#
proj3 <- proj3[proj3$diff<proj2$real,] # less than real diff#
gens <- aggregate(gen~morph, proj3, max)#
proj4 <- proj2#
proj4$max <- gens$gen[match(proj4$morph, gens$morph)] +1 #to cross the line#
proj4 <- proj4[proj4$gen<=proj4$max,]#
#
yrplot2 <- ggplot(proj4[proj4$gen==proj4$max,], aes(x=gen, y=reorder(morph, -gen)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)+#
scale_x_continuous(expand=c(0,0))+#
theme_classic()+theme(axis.title.y=element_blank(), axis.title.x=element_text(size=8), axis.line=element_line(size=0.1), axis.text.y=element_blank())#
yrplot2
proj3 <- proj2#
proj3 <- proj3[proj3$diff<proj2$real,] # less than real diff#
gens <- aggregate(gen~morph, proj3, max)#
proj4 <- proj2#
proj4$max <- gens$gen[match(proj4$morph, gens$morph)] +1 #to cross the line#
proj4 <- proj4[proj4$gen<=proj4$max,]#
#
yrplot2 <- ggplot(proj4[proj4$gen==proj4$max,], aes(x=gen, y=reorder(morph, -gen)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)+#
scale_x_continuous(expand=c(0,0))+#
theme_classic()+theme(axis.title.y=element_blank(), axis.title.x=element_text(size=8), axis.line=element_line(size=0.1), axis.text.y=element_blank())#
yrplot2#
#
maxdat <- proj4[proj4$gen==proj4$max,]
# method 1 #
#
comp$doub.time <- log(2)/log(1+comp$lamdiff)#
comp$difftime <- log(comp$abundiff)/log(1+comp$lamdiff)#
ggplot(comp[comp$difftime>0,], aes(x=difftime, y=reorder(morph, -difftime)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)
n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","lam.est")]#
proj <- merge(pars, data.frame(gen=1:ngen))#
proj$n <- n1*proj$lam.est^proj$gen
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]
head(proj2)
ifelse(proj2$diff<proj2$real,proj2$diff, NA)
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
proj2$diff2 <- ifelse(proj2$diff<proj2$real,proj2$diff, NA)#
head(proj2)
aggregate(gen~morph, proj3, max)
aggregate(gen~morph, proj2[!is.na(proj2$diff2),], max)
aggregate(gen~morph, proj2[proj2$diff<proj2$real,], max)
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj2[proj2$diff<proj2$real,], max)#
proj2$maxgen <- gens$gen[match(proj2$morph, gens$morph)] +1 #to cross the line#
head(proj2)
yrplot2 <- ggplot(proj4[proj4$gen==proj4$max,], aes(x=gen, y=reorder(morph, -gen)))+#
geom_bar(stat="Identity", aes(fill=morph))+#
labs(x="Years to project \nabundance differences")+#
guides(fill="none")+scale_fill_manual(values=colsC)+#
scale_x_continuous(expand=c(0,0))+#
theme_classic()+theme(axis.title.y=element_blank(), axis.title.x=element_text(size=8), axis.line=element_line(size=0.1), axis.text.y=element_blank())#
yrplot2
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj2[proj2$diff<proj2$real,], max)#
proj2$maxgen <- gens$gen[match(proj2$morph, gens$morph)] +1 #to cross the line#
head(proj2)
proj2
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj2[proj2$diff<proj2$real,], max)#
proj2$maxgen <- gens$gen[match(proj2$morph, gens$morph)] +1 #to cross the line#
head(proj2)
ggplot(proj4[proj2$gen==proj2$maxgen,], aes(x=gen, y=reorder(morph, -gen)))+#
geom_bar(stat="Identity", aes(fill=morph))
ggplot(proj2, aes(gen, real, col=morph))+geom_line()
ggplot(proj2, aes(gen, diff, col=morph))+geom_line()
ggplot(proj2, aes(gen, diff, col=morph))+geom_line()+coord_cartesian(ylim=c(0,100))
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,100))
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,100))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,100))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,100))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])+scale_y_log10()
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,100))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])
ens$gen[match(proj2$morph, gens$morph)] +1
proj2$real
n1 <- 100#
ngen <- 100#
pars <- params2[, c("spp","morph", "abundance_pair","lam.est")]#
proj <- merge(pars, data.frame(gen=1:ngen))#
proj$n <- n1*proj$lam.est^proj$gen#
#
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
ggplot(proj, aes(gen, n))+geom_line(aes(group=spp, col=spp))+scale_colour_manual(values=cols)+facet_wrap(~morph, scales="free_y")
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$diff[match(proj2$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj2[proj2$diff<proj2$real,], max)#
proj2$maxgen <- gens$gen[match(proj2$morph, gens$morph)] +1 #to cross the line#
head(proj2)
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,100))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])
comp$diff
comp
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$abundiff[match(proj2$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj2[proj2$diff<proj2$real,], max)#
proj2$maxgen <- gens$gen[match(proj2$morph, gens$morph)] +1 #to cross the line#
head(proj2)
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,100))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,60))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,60))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])+scale_y_log10()
proj2[proj2$gen<proj2$maxgen,]
proj2
proj2 <- dcast(morph+gen~abundance_pair, data=proj, value.var="n")#
proj2$diff <- proj2$Common/proj2$Rare#
proj2$real <- comp$abundiff[match(proj2$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj2[proj2$diff<proj2$real,], max)#
proj2$maxgen <- gens$gen[match(proj2$morph, gens$morph)] +2 #to cross the line#
head(proj2)#
#
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,60))+geom_line(data=proj2[proj2$gen<proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,60))+geom_line(data=proj2[proj2$gen<=proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])
ggplot(proj2, aes(gen, diff, col=morph))+geom_line(linetype="dotted")+coord_cartesian(ylim=c(0,60))+geom_line(data=proj2[proj2$gen<=proj2$maxgen,])+geom_point(data=proj2[proj2$gen==proj2$maxgen,])+scale_y_log10()
comp$rec <- params2$rec[match(comp$morph, params2$morph)] #
comp$rec.size <- params2$rec.size[match(comp$morph, params2$morph)] #
comp$rec.size.cm <- sqrt(((10^comp$rec.size)*10000)/pi)*2
# difference in lambda across rec/recsize combinations#
pairs3 <- NULL#
for(m in comp$morph){#
	#m <- "tabular"#
	spC <- comp$Common[comp$morph==m]#
	spR <- comp$Rare[comp$morph==m]#
	logdiff <- log(store3[[spC]]) - log(store3[[spR]])#
	temp <- melt(logdiff)#
	temp$rec <- rep(rec.x, length(recsize.x))#
	temp$recsize <- rep(recsize.x, each=length(rec.x))#
    pairs3 <- rbind(pairs3, cbind(temp, morph=m))#
}#
head(pairs3)#
pairs3$lam2 <- ifelse(pairs3$value < 0, NA, pairs3$value)#
#
ggplot()+#
geom_raster(data=pairs3, aes(x=rec, y=recsize, fill=lam2))+#
geom_point(data=params2, aes(rec.const, rec.size.const ), col="white", shape=3, stroke=1, size=0.3)+#
geom_point(data=params2, aes(rec, rec.size ), col="white", shape=3)+#
	scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(expand=c(0,0))+#
	scale_fill_distiller(palette="Spectral")+#
	facet_wrap(~morph, scales="free")+#
	labs(x="rec rate", y="rec size")+#
	theme(strip.background=element_blank())
source("figs/supp/fig.s5_rec.R")	#
#fig.s5
fig.s5
########################################
# REPRODUCTIVE TRADEOFF#
########################################
ecplot <- ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")#
#
#mat<-inv.logit(params$m.int[params$spp==sp]+params$m.slp[params$spp==sp]*x)#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp)), nrow=1, rel_widths=c(1.15,1))
# Figure 3#
source("figs/fig.3.R")#
fig3
########################################
# RECRUITMENT SENSITIVITY II#
#######################################	#
comp$rec <- params2$rec[match(comp$morph, params2$morph)] #
comp$rec.size <- params2$rec.size[match(comp$morph, params2$morph)] #
comp$rec.size.cm <- sqrt(((10^comp$rec.size)*10000)/pi)*2	#
#
# difference in lambda across rec/recsize combinations#
pairs3 <- NULL#
for(m in comp$morph){#
	#m <- "tabular"#
	spC <- comp$Common[comp$morph==m]#
	spR <- comp$Rare[comp$morph==m]#
	logdiff <- log(store3[[spC]]) - log(store3[[spR]])#
	temp <- melt(logdiff)#
	temp$rec <- rep(rec.x, length(recsize.x))#
	temp$recsize <- rep(recsize.x, each=length(rec.x))#
    pairs3 <- rbind(pairs3, cbind(temp, morph=m))#
}#
head(pairs3)#
#
pairs3$lam2 <- ifelse(pairs3$value < 0, NA, pairs3$value)#
#
ggplot()+#
geom_raster(data=pairs3, aes(x=rec, y=recsize, fill=lam2))+#
geom_point(data=params2, aes(rec.const, rec.size.const ), col="white", shape=3, stroke=1, size=0.3)+#
geom_point(data=params2, aes(rec, rec.size ), col="white", shape=3)+#
	scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(expand=c(0,0))+#
	scale_fill_distiller(palette="Spectral")+#
	facet_wrap(~morph, scales="free")+#
	labs(x="rec rate", y="rec size")+#
	theme(strip.background=element_blank())#
#
# Figure S5#
#source("figs/supp/fig.s5_rec.R")	#
#fig.s5
projplot <- ggplot()+#
geom_line(data=proj2, aes(gen, diff, col=morph), linetype="dotted", size=0.2)+#
geom_line(data=proj2, aes(gen, diff, col=morph), size=0.75)+#
scale_y_log10()+#
#scale_x_log10()+#
#geom_segment(data=proj4[proj4$gen==proj4$max,], aes(xend=gen, x=gen,y=Inf, yend=-Inf), linetype="dotted", col="grey")+#
#geom_text(data=maxdat, aes(x, y, label=lab),  col="grey", angle=90, size=2, hjust=0)+#
#geom_segment(aes(x=-Inf, xend=Inf, y=real, yend=real, col=morph), linetype="dotted")+#
#geom_point(data=comp, inherit.aes=F, aes(difftime, diff, col=morph))+#
#geom_point(aes(max,real, col=morph))+#
#geom_segment(data=dmaxdat, aes(y=diff, yend=diff, x=norm, xend=gen), arrow=arrow(length=unit(1,"mm")))+#
#geom_segment(data=NULL, aes(y=5.769612, yend=5.769612, x=2, xend=1), arrow=arrow(length=unit(1,"mm")))+#
geom_point(data=maxdat, aes(gen, diff, fill=morph), shape=21, stroke=0.1, size=2)+#
scale_colour_manual(values=colsC)+#
scale_fill_manual(values=colsC)+#
theme_classic()+#
theme(axis.line=element_line(size=0.1), axis.title=element_text(size=8), #
plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
coord_cartesian(ylim=c(1,55), xlim=c(1,85))+#
guides(colour="none", fill="none")+#
#scale_x_continuous(expand=c(0,0))+#
labs(x="Time (years)", y=expression(N[" common "]/N[" rare"]))+#
ggtitle("Time taken to project \n observed gaps in abundance")#
projplot
projplot <- ggplot()+#
geom_line(data=proj2, aes(gen, diff, col=morph), linetype="dotted", size=0.2)+#
geom_line(data=proj2[proj2$gen <= proj2$maxgen], aes(gen, diff, col=morph), size=0.75)+#
scale_y_log10()+#
#scale_x_log10()+#
#geom_segment(data=proj4[proj4$gen==proj4$max,], aes(xend=gen, x=gen,y=Inf, yend=-Inf), linetype="dotted", col="grey")+#
#geom_text(data=maxdat, aes(x, y, label=lab),  col="grey", angle=90, size=2, hjust=0)+#
#geom_segment(aes(x=-Inf, xend=Inf, y=real, yend=real, col=morph), linetype="dotted")+#
#geom_point(data=comp, inherit.aes=F, aes(difftime, diff, col=morph))+#
#geom_point(aes(max,real, col=morph))+#
#geom_segment(data=dmaxdat, aes(y=diff, yend=diff, x=norm, xend=gen), arrow=arrow(length=unit(1,"mm")))+#
#geom_segment(data=NULL, aes(y=5.769612, yend=5.769612, x=2, xend=1), arrow=arrow(length=unit(1,"mm")))+#
geom_point(data=maxdat, aes(gen, diff, fill=morph), shape=21, stroke=0.1, size=2)+#
scale_colour_manual(values=colsC)+#
scale_fill_manual(values=colsC)+#
theme_classic()+#
theme(axis.line=element_line(size=0.1), axis.title=element_text(size=8), #
plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
coord_cartesian(ylim=c(1,55), xlim=c(1,85))+#
guides(colour="none", fill="none")+#
#scale_x_continuous(expand=c(0,0))+#
labs(x="Time (years)", y=expression(N[" common "]/N[" rare"]))+#
ggtitle("Time taken to project \n observed gaps in abundance")#
projplot
projplot <- ggplot()+#
geom_line(data=proj2, aes(gen, diff, col=morph), linetype="dotted", size=0.2)+#
geom_line(data=proj2[proj2$gen <= proj2$maxgen,], aes(gen, diff, col=morph), size=0.75)+#
scale_y_log10()+#
#scale_x_log10()+#
#geom_segment(data=proj4[proj4$gen==proj4$max,], aes(xend=gen, x=gen,y=Inf, yend=-Inf), linetype="dotted", col="grey")+#
#geom_text(data=maxdat, aes(x, y, label=lab),  col="grey", angle=90, size=2, hjust=0)+#
#geom_segment(aes(x=-Inf, xend=Inf, y=real, yend=real, col=morph), linetype="dotted")+#
#geom_point(data=comp, inherit.aes=F, aes(difftime, diff, col=morph))+#
#geom_point(aes(max,real, col=morph))+#
#geom_segment(data=dmaxdat, aes(y=diff, yend=diff, x=norm, xend=gen), arrow=arrow(length=unit(1,"mm")))+#
#geom_segment(data=NULL, aes(y=5.769612, yend=5.769612, x=2, xend=1), arrow=arrow(length=unit(1,"mm")))+#
geom_point(data=maxdat, aes(gen, diff, fill=morph), shape=21, stroke=0.1, size=2)+#
scale_colour_manual(values=colsC)+#
scale_fill_manual(values=colsC)+#
theme_classic()+#
theme(axis.line=element_line(size=0.1), axis.title=element_text(size=8), #
plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
coord_cartesian(ylim=c(1,55), xlim=c(1,85))+#
guides(colour="none", fill="none")+#
#scale_x_continuous(expand=c(0,0))+#
labs(x="Time (years)", y=expression(N[" common "]/N[" rare"]))+#
ggtitle("Time taken to project \n observed gaps in abundance")#
projplot
projplot <- ggplot()+#
geom_line(data=proj2, aes(gen, diff, col=morph), linetype="dotted", size=0.2)+#
geom_line(data=proj2[proj2$gen <= proj2$maxgen,], aes(gen, diff, col=morph), size=0.75)+#
scale_y_log10()+#
#scale_x_log10()+#
#geom_segment(data=proj4[proj4$gen==proj4$max,], aes(xend=gen, x=gen,y=Inf, yend=-Inf), linetype="dotted", col="grey")+#
#geom_text(data=maxdat, aes(x, y, label=lab),  col="grey", angle=90, size=2, hjust=0)+#
#geom_segment(aes(x=-Inf, xend=Inf, y=real, yend=real, col=morph), linetype="dotted")+#
#geom_point(data=comp, inherit.aes=F, aes(difftime, diff, col=morph))+#
#geom_point(aes(max,real, col=morph))+#
#geom_segment(data=dmaxdat, aes(y=diff, yend=diff, x=norm, xend=gen), arrow=arrow(length=unit(1,"mm")))+#
#geom_segment(data=NULL, aes(y=5.769612, yend=5.769612, x=2, xend=1), arrow=arrow(length=unit(1,"mm")))+#
geom_point(data=proj2[proj2$gen==proj2$maxgen,], aes(gen, diff, fill=morph), shape=21, stroke=0.1, size=2)+#
scale_colour_manual(values=colsC)+#
scale_fill_manual(values=colsC)+#
theme_classic()+#
theme(axis.line=element_line(size=0.1), axis.title=element_text(size=8), #
plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
coord_cartesian(ylim=c(1,55), xlim=c(1,85))+#
guides(colour="none", fill="none")+#
#scale_x_continuous(expand=c(0,0))+#
labs(x="Time (years)", y=expression(N[" common "]/N[" rare"]))+#
ggtitle("Time taken to project \n observed gaps in abundance")#
projplot
########################################
# RECRUITMENT PLOT#
########################################
tab<-readPNG("data/coral_silhouettes/tabularG.png")#
tab<-rasterGrob(tab, interpolate=TRUE)#
mas<-readPNG("data/coral_silhouettes/massiveG.png")#
mas<-rasterGrob(mas, interpolate=TRUE)#
cor<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor<-rasterGrob(cor, interpolate=TRUE)#
cor2<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor2<-rasterGrob(cor2, interpolate=TRUE)#
dig<-readPNG("data/coral_silhouettes/digitateG.png")#
dig<-rasterGrob(dig, interpolate=TRUE)#
brn<-readPNG("data/coral_silhouettes/branchingGt.png")#
brn<-rasterGrob(brn, interpolate=TRUE)#
comp$labels <- paste(comp$Common, "-", comp$Rare, sep="")#
#
mas_x <- comp$doubdiff[comp$morph=="massive"]#
tab_x <- comp$doubdiff[comp$morph=="tabular"]#
brn_x <- comp$doubdiff[comp$morph=="staghorn"]#
dig_x <- comp$doubdiff[comp$morph=="digitate"]#
cor_x <- comp$doubdiff[comp$morph=="corymbose"]#
cor2_x <- comp$doubdiff[comp$morph=="corymbose_2"]#
#
comp$rank<-NA#
comp$rank[order(comp$lamdiff)] <- 1:nrow(comp)#
mas_y <- comp$rank[comp$morph=="massive"]#
tab_y <- comp$rank[comp$morph=="tabular"]#
brn_y <- comp$rank[comp$morph=="staghorn"]#
dig_y <- comp$rank[comp$morph=="digitate"]#
cor_y <- comp$rank[comp$morph=="corymbose"]#
cor2_y <- comp$rank[comp$morph=="corymbose_2"]#
#
lamcomp2 <- ggplot()+#
geom_bar(data=comp, aes(x=lamdiff, y=reorder(labels, lamdiff), fill=morph), stat="Identity",  col="black", size=0.1, width=0.75)+#
labs(x=expression(Difference~"in"~lambda))+#
geom_segment(data=comp, aes(y=reorder(labels, -lamdiff), yend=reorder(labels, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))+#
guides(fill="none")+scale_fill_manual(values=colsC)+#
scale_x_continuous(expand=c(0,0), limits=c(0,1.1))+#
ggtitle("Difference in fitness \n(common-rare)")+#
geom_segment(data=NULL, aes(y=2, yend=2, x=0.8, xend=0.9), arrow=arrow(length=unit(1,"mm")))+#
geom_text(data=NULL,  aes(x=0.85, y=1.2, label="recruitment x2 in \nall taxa"), size=2)+#
annotation_custom(mas, mas_x+0.01, mas_x+0.13, mas_y-0.5, mas_y+0.5)+#
annotation_custom(brn, brn_x+0.01, brn_x+0.14, brn_y-0.5, brn_y+0.5)+#
annotation_custom(tab, tab_x+0.01, tab_x+0.18, tab_y-0.7, tab_y+0.7)+#
annotation_custom(cor, cor_x+0.01, cor_x+0.15, cor_y-0.5, cor_y+0.5)+#
annotation_custom(cor2, cor2_x+0.01, cor2_x+0.15, cor2_y-0.5, cor2_y+0.5)+#
annotation_custom(dig, dig_x+0.01, dig_x+0.15, dig_y-0.6, dig_y+0.6)+#
theme_classic()+theme(axis.title.y=element_blank(), axis.title.x=element_text(size=7), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text=element_text(size=7))#
lamcomp2
lsize <- 0.5#
########################################
# CONTOURS#
########################################
#
#scapes <- pairs3[!pairs3$morph=="corymbose",]#
scapes <- pairs3#
head(pairs3)#
scapes$posi <- ifelse(scapes$X1 > 0, "common > rare", "rare > common")#
#scapes$morph <- ifelse(scapes$morph=="corymbose_2", "corymbose", scapes$morph)#
scapes$morph <- ifelse(scapes$morph=="staghorn", "arborescent", scapes$morph)#
#scapes$morph <- ifelse(scapes$morph=="massive", "boulder", scapes$morph)#
scapes$morph <- factor(scapes$morph, levels=rev(c("tabular", "arborescent", "corymbose","corymbose_2","digitate", "massive")))#
#
colsC2 <- colsC#
names(colsC2)[6]<-"massive"#
names(colsC2)[3]<-"arborescent"#
#
sp.points <- params2[,c("morph","rec.size", "spp")]#
#sp.points <- sp.points[!sp.points$morph=="corymbose",]#
sp.points$rec <- ifelse(sp.points$morph=="massive", 10^-4, 10^-3)#
#sp.points$morph <- ifelse(sp.points$morph=="corymbose_2", "corymbose", sp.points$morph)#
sp.points$morph <- ifelse(sp.points$morph=="staghorn", "arborescent", sp.points$morph)#
#sp.points$morph <- ifelse(sp.points$morph=="massive", "boulder", sp.points$morph)#
sp.points$morph <- factor(sp.points$morph, levels=rev(c("tabular", "arborescent", "corymbose","corymbose_2","digitate", "massive")))#
#
blueish <- colsC[2]#
#
legend <- ggplot()+#
geom_point(data=scapes, aes(x=id, y=sqrt(((10^time)*10000)), fill=posi), shape=22)+#
theme_classic()+#
scale_fill_manual(values=c(blueish, "white"))+#
guides(col="none",  fill=guide_legend(direction="vertical", title=expression(Delta~log*(lambda)), title.hjust=0.5, title.vjust=-1, label.hjust=100))+#
theme(legend.text=element_text(size=6),#
	#legend.title=element_text(size=6, face="bold"),#
	legend.title=element_blank(),#
	plot.margin=unit(c(1, 4, 1, 1), "cm"),#
	legend.key.height=unit(1,"mm"),#
	legend.position=c(0.9,0 ),#
	legend.background=element_blank(),#
	legend.key.width=unit(5,"mm"))#
	sp.points$eggC <- params$eggC[match(sp.points$spp, params$spp)]#
	sp.points$recEn <- sp.points$rec * (10^(scale(sp.points$eggC)/max(abs(scale(sp.points$eggC))))) #
sp.points$rec.const <- params$rec.const[match(sp.points$spp, params$spp)]#
library("metR")#
#
sp.points<-aggregate(.~morph, subset(sp.points, select=-spp), mean)#
#
contours <- ggplot(data=scapes, aes(x=id, y=sqrt(((10^time)*10000)), z=X1))+#
geom_contour_filled(aes(fill=morph, alpha=..level..),breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8), col="grey", size=lsize)+#
geom_contour(aes(col=morph), breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8,1.6),size=lsize)+#
geom_text_contour(breaks = c(0,0.05, 0.1, 0.2, 0.4), size=1.5, skip=0, stroke=0.15)+#
#geom_segment(data=sp.points, inherit.aes=F, aes(x=5*10^-4, xend=rec, y=5, yend=sqrt(((10^rec.size)*10000))), col="black", arrow=arrow(length=unit(1, "mm")))+#
#geom_point(data=sp.points, inherit.aes=F, aes(x=5*10^-4,y=5), shape=21, col="black", size=0.5)+#
geom_point(data=sp.points, inherit.aes=F, aes(x=rec,y=sqrt(((10^rec.size)*10000))), shape=3, stroke=1, size=0.25, col="black")+#
facet_wrap(~morph, nrow=1)+#
labs(x="Probability of larval settlement", y="Recruit diameter")+#
scale_fill_manual(values=colsC2)+#
scale_colour_manual(values=colsC2)+#
guides(fill="none", alpha="none", col="none")+#
ggtitle(expression(bold(Delta*fitness~landscapes)))+#
	#scale_y_log10(expand=c(0,0))+#
	scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(breaks=c(10^-5, 10^-4,10^-3), labels=c(#
		expression(10^-5),#
		expression(10^-4),#
		expression(10^-3)), expand=c(0,0))+#
	theme_bw()+#
	theme(strip.background=element_blank(),  #
	strip.text=element_text(size=7, vjust=-2),#
	panel.background=element_rect(fill="white"),#
	panel.grid.major=element_blank(),#
	panel.grid.minor=element_blank(),#
	plot.title=element_text(size=8, hjust=0.5, vjust=-7, face="bold"),#
	axis.text.x=element_text(size=5), #
	axis.text.y=element_text(size=5, angle=90, hjust=0.5), #
	axis.title=element_text(size=7))#+coord_flip()#
contours
head(scapes)
contours <- ggplot(data=scapes, aes(x=rec, y=sqrt(((10^recsize)*10000)), z=value))+#
geom_contour_filled(aes(fill=morph, alpha=..level..),breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8), col="grey", size=lsize)+#
geom_contour(aes(col=morph), breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8,1.6),size=lsize)+#
geom_text_contour(breaks = c(0,0.05, 0.1, 0.2, 0.4), size=1.5, skip=0, stroke=0.15)+#
#geom_segment(data=sp.points, inherit.aes=F, aes(x=5*10^-4, xend=rec, y=5, yend=sqrt(((10^rec.size)*10000))), col="black", arrow=arrow(length=unit(1, "mm")))+#
#geom_point(data=sp.points, inherit.aes=F, aes(x=5*10^-4,y=5), shape=21, col="black", size=0.5)+#
geom_point(data=sp.points, inherit.aes=F, aes(x=rec,y=sqrt(((10^rec.size)*10000))), shape=3, stroke=1, size=0.25, col="black")+#
facet_wrap(~morph, nrow=1)+#
labs(x="Probability of larval settlement", y="Recruit diameter")+#
scale_fill_manual(values=colsC2)+#
scale_colour_manual(values=colsC2)+#
guides(fill="none", alpha="none", col="none")+#
ggtitle(expression(bold(Delta*fitness~landscapes)))+#
	#scale_y_log10(expand=c(0,0))+#
	scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(breaks=c(10^-5, 10^-4,10^-3), labels=c(#
		expression(10^-5),#
		expression(10^-4),#
		expression(10^-3)), expand=c(0,0))+#
	theme_bw()+#
	theme(strip.background=element_blank(),  #
	strip.text=element_text(size=7, vjust=-2),#
	panel.background=element_rect(fill="white"),#
	panel.grid.major=element_blank(),#
	panel.grid.minor=element_blank(),#
	plot.title=element_text(size=8, hjust=0.5, vjust=-7, face="bold"),#
	axis.text.x=element_text(size=5), #
	axis.text.y=element_text(size=5, angle=90, hjust=0.5), #
	axis.title=element_text(size=7))#+coord_flip()#
contours
fig3<-plot_grid(#
plot_grid(lamcomp2, projplot, nrow=1, rel_widths=c(0.7,1), labels=c("A","B"), label_size=9), #
NULL,#
contours,#
ncol=1, rel_heights=c(1,-0.0,0.9),labels=c("","C"), label_size=9)#
fig3
########################################
# REPRODUCTIVE TRADEOFF#
########################################
ecplot <- ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")#
#
#mat<-inv.logit(params$m.int[params$spp==sp]+params$m.slp[params$spp==sp]*x)#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp)), nrow=1, rel_widths=c(1.15,1))#
#
########################################
# ELASTICITY & IPM MEASURES #
########################################
 # eigen-things combined to get sensitivity/elasticity matrices.#
#
s.list <- list()#
eK.list <- list()#
eR.list <- list()#
eP.list <- list()#
demovals <- NULL#
sizevals <- NULL#
#
for (sp in spp) {#
	#sp <- "Ahy"#
	rec <- params$rec[params$spp==sp]#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	K <- bigmatrix()$K#
	P <- bigmatrix()$P#
	R <- bigmatrix()$R#
	#image(t(K^0.2))#
	lam <- Re(eigen(K)$values[1]) # population growth#
	w.eigen<-Re(eigen(K)$vectors[,1]) # right eigenvec#
	stable.size <- w.eigen/sum(w.eigen) # sable size dist #
	v.eigen<-Re(eigen(t(K))$vectors[,1]) # left eigenvec#
	repro.val <- v.eigen/v.eigen[1] # rel. reprodutive values #
	v.dot.w<-sum(stable.size*repro.val*h) # reproductive val * stable size#
	sens<-outer(repro.val,stable.size,"*")/v.dot.w   # sensitivity matrix#
	K.elas <- sens*(K/h)/lam *h^2 # elasticity matrices (h varies)#
	P.elas<-(P/h)*sens/lam # survival elasticity matrix#
	eP=sum(P.elas)*h^2 # total survival elasticity#
	R.elas<-(R/h)*sens/lam # reproduction elasticity matrix#
	eR=sum(R.elas)*h^2 # total reproduction elasticity#
	# Net reproductive rate/Generation time from IPMbook monocarp#
	N <- solve(diag(n)-P)#
	R0 <- abs(eigen(R %*% N)$values[1])#
	GT <- log(R0)/log(lam)#
	demovals <- rbind(demovals, data.frame(spp=sp, eR, eP, R0, GT))#
	sizevals <- rbind(sizevals, data.frame(spp=sp, area=y, stable.size, repro.val, v.dot.w))#
		s.list[[sp]] <- sens#
		eR.list[[sp]] <- R.elas#
		eP.list[[sp]] <- P.elas#
		eK.list[[sp]] <- K.elas#
		}#
#
params[,colnames(demovals)]<- demovals[match(demovals$spp, params$spp),]#
lapply(eK.list, function(x){sum(x)})#
rowSums(demovals[,c("eP","eR")]) # summing to 1#
#
plot_grid(#
ggplot(sizevals, aes(x=area, y=repro.val, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+#
scale_y_log10()+guides(col="none"),#
ggplot(sizevals, aes(x=area, y=stable.size, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+guides(col="none"),#
ggplot(params, aes(reorder(spp, -eR), eR, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none"), #
ggplot(params, aes(reorder(spp, -R0), R0, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(reorder(spp, -GT), GT, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(r.int, eR))+geom_text(aes(label=spp))+scale_y_sqrt()+scale_x_log10())
########################################
# ELASTICITY ACROSS SIZES#
########################################
#
spp2 <- spp#
ek.hist <- NULL#
for (sp in spp2) {#
#	sp <- "Gpe"#
	y <- y.list[[sp]]#
	e.k <- melt(eK.list[[sp]])#
	e.k$y <- rep(y, length(y))#
	e.k.sum <- aggregate(value~Var1+y, e.k, sum)#
	ek.hist <- rbind(ek.hist, cbind(e.k.sum, spp=sp))#
	}#
head(ek.hist)#
#
ek.hist$size <- round(ek.hist$y/0.45)*0.45#
ek.av <- aggregate(value~size+spp, ek.hist, sum)#
ek.av$morphology<-params$morphology[match(ek.av$spp, params$spp)]#
ek.av$X2 <- ek.av$value#*h^2  #/ek.av$max#
#
ggplot(ek.av[!ek.av$spp=="Asp",], aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
facet_wrap(~morphology, scales="free_x", nrow=2)
# REPRODUCTIVE TRADEOFF#
########################################
ecplot <- ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")#
#
#mat<-inv.logit(params$m.int[params$spp==sp]+params$m.slp[params$spp==sp]*x)#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp)), nrow=1, rel_widths=c(1.15,1))
ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
ec$morph<-params$morphology[match(ec$spp, params$spp)]#
ecplot <- ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
ecplot
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp)), nrow=1, rel_widths=c(1.15,1))
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$Family=="Acroporidae"],), nrow=1, rel_widths=c(1.15,1))
params[params$Family=="Acroporidae"]
params
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae"],), nrow=1, rel_widths=c(1.15,1))
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae",]), nrow=1, rel_widths=c(1.15,1))
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae",], method="lm"), nrow=1, rel_widths=c(1.15,1))
?geom_smooth
########################################
# ELASTICITY & IPM MEASURES #
########################################
 # eigen-things combined to get sensitivity/elasticity matrices.#
#
s.list <- list()#
eK.list <- list()#
eR.list <- list()#
eP.list <- list()#
demovals <- NULL#
sizevals <- NULL#
#
for (sp in spp) {#
	#sp <- "Ahy"#
	rec <- params$rec[params$spp==sp]#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	K <- bigmatrix()$K#
	P <- bigmatrix()$P#
	R <- bigmatrix()$R#
	#image(t(K^0.2))#
	lam <- Re(eigen(K)$values[1]) # population growth#
	w.eigen<-Re(eigen(K)$vectors[,1]) # right eigenvec#
	stable.size <- w.eigen/sum(w.eigen) # sable size dist #
	v.eigen<-Re(eigen(t(K))$vectors[,1]) # left eigenvec#
	repro.val <- v.eigen/v.eigen[1] # rel. reprodutive values #
	v.dot.w<-sum(stable.size*repro.val*h) # reproductive val * stable size#
	sens<-outer(repro.val,stable.size,"*")/v.dot.w   # sensitivity matrix#
	K.elas <- sens*(K/h)/lam *h^2 # elasticity matrices (h varies)#
	P.elas<-(P/h)*sens/lam # survival elasticity matrix#
	eP=sum(P.elas)*h^2 # total survival elasticity#
	R.elas<-(R/h)*sens/lam # reproduction elasticity matrix#
	eR=sum(R.elas)*h^2 # total reproduction elasticity#
	# Net reproductive rate/Generation time from IPMbook monocarp#
	N <- solve(diag(n)-P)#
	R0 <- abs(eigen(R %*% N)$values[1])#
	GT <- log(R0)/log(lam)#
	demovals <- rbind(demovals, data.frame(spp=sp, eR, eP, R0, GT))#
	sizevals <- rbind(sizevals, data.frame(spp=sp, area=y, stable.size, repro.val, v.dot.w))#
		s.list[[sp]] <- sens#
		eR.list[[sp]] <- R.elas#
		eP.list[[sp]] <- P.elas#
		eK.list[[sp]] <- K.elas#
		}#
#
params[,colnames(demovals)]<- demovals[match(demovals$spp, params$spp),]#
lapply(eK.list, function(x){sum(x)})#
rowSums(demovals[,c("eP","eR")]) # summing to 1#
#
plot_grid(#
ggplot(sizevals, aes(x=area, y=repro.val, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+#
scale_y_log10()+guides(col="none"),#
ggplot(sizevals, aes(x=area, y=stable.size, col=spp))+geom_line()+#
scale_colour_manual(values=cols)+guides(col="none"),#
ggplot(params, aes(reorder(spp, -eR), eR, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none"), #
ggplot(params, aes(reorder(spp, -R0), R0, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(reorder(spp, -GT), GT, fill=spp))+geom_bar(stat="identity")+scale_fill_manual(values=cols)+guides(fill="none")+scale_y_log10(),#
ggplot(params, aes(r.int, eR))+geom_text(aes(label=spp))+scale_y_sqrt()+scale_x_log10())#
#
########################################
# ELASTICITY ACROSS SIZES
params$AB <- ifelse(params$abundance_pair=="Rare","R","C")#
params2$AB <- ifelse(params2$abundance_pair=="Rare","R","C")#
ek.av$morphology<-factor(ek.av$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
sdat$morphology<-factor(sdat$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
s.avs <- aggregate(area~morphology, sdat, median)#
segs2<-data.frame(morphology="tabular")#
segs2$morphology<-factor(segs2$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
ek.hist$morphology<-params$morph[match(ek.hist$spp, params$spp)]#
#ek.hist$X3<-ek.hist$X1*ek.hist$id#
ek.av$X3 <- ek.av$X2 * ek.av$size#
aggregate(X1~spp, ek.av, sum)#
ek.av.av<-aggregate(X3~spp+morphology, ek.hist, sum)#
ek.hist$mean<-ek.av.av$X3[match(ek.hist$spp, ek.av.av$spp)]#
ek.hist$xminusm<-(ek.hist$size-ek.hist$mean)^2#
ek.av.av$sd<-(sqrt(aggregate(xminusm~spp+morphology, ek.hist, sum)$xminusm/aggregate(xminusm~spp+morphology, ek.hist, length)$xminusm)/sqrt(aggregate(xminusm~spp+morphology, ek.hist, length)$xminusm))*2#
siznew<-ggplot(ek.av.av, aes(X3, spp, col=spp))+#
geom_boxplot(data=sdat, aes(y=spp, x=area), col="grey")+#
geom_point()+facet_wrap(~morphology, scales="free", nrow=1)+scale_colour_manual(values=cols)+#
geom_segment(aes(y=spp, yend=spp,x=X3-sd, xend=X3+sd))+theme_void()+theme(strip.text=element_blank(), axis.line.x=element_line(),axis.text.x=element_text(size=8))+#
guides(col="none", fill="none")#
siznew
size.elas<-ggplot(ek.av[!ek.av$spp=="Asp",], aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
#geom_line()+#
#geom_point()+#
facet_wrap(~morphology, scales="free_x", nrow=2)+#
scale_fill_manual(values=cols)+#
scale_colour_manual(values=cols)+#
geom_boxplot(data=sdat[!sdat$spp=="Asp",], aes(x=area, y=0.9, fill=spp), width=0.2, outlier.size=0.01, size=0.1, outlier.colour="grey")+#
guides(fill="none", col="none")+#
geom_segment(data=s.avs, aes(x=area, xend=area, y=0, yend=0.7), linetype="dotted")+#
#geom_point(data=ek.av.av, aes(x=X3, y=0.6, col=spp))+#
labs(x=expression(size~(m^2)), y="elasticity")+#
scale_y_continuous(expand=c(0,0), breaks=c(0,0.5,1))+#
theme_classic()+theme(strip.background=element_blank(), strip.text=element_text(size=8),#
axis.text.y=element_text(size=6), axis.text.x=element_text(size=6, angle=45, hjust=1), axis.title=element_text(size=8), axis.line=element_line(size=0.1), plot.title=element_text(hjust=0.5, size=8, face="bold"))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.5, y=0.8, yend=1))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.4, y=0.8, yend=0.8))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.4, y=1, yend=1))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.7, y=0.9, yend=0.9))+#
geom_segment(data=segs2, aes(x=0.7, xend=0.7, y=0.5, yend=0.9))+#
geom_text(data=segs2,aes(x=1, y=0.35, label="colony \nsizes"), size=2, hjust=1)+#
ggtitle(expression(bold(Influence~of~colony~size~classes~on~lambda)))+#
#ggtitle("Demographic sensitivity to size")+#
scale_x_continuous(breaks=c(-4,-3,-2,-1,0), labels=c(expression(0.0001),expression(0.001), expression(0.01),  expression(0.1),  expression(1)))#
size.elas
params$morphology <- factor(params$morphology, levels=c("staghorn", "tabular", "corymbose","digitate","massive"))#
elasplot<-ggplot(params, aes(reorder(spp, eR), eR, fill=spp))+#
geom_bar(stat="identity", size=0.1, col="black")+#
scale_fill_manual(values=cols)+#
guides(fill="none")+#
facet_grid(.~morphology, scales="free_x", space="free_x")+#
labs(y=expression(R[elasticity]))+#
geom_text(aes(y=eR+0.02,label=AB), size=1.8)+#
scale_y_continuous(expand=c(0,0), limits=c(0,0.45), breaks=c(0,0.1, 0.2, 0.3))+#
ggtitle("Demographic sensitivity \nto reproduction")+#
theme_classic()+theme(strip.text=element_blank(),#
 strip.background=element_blank(), axis.title.x=element_blank(),  axis.text.y=element_text(size=7),axis.text.x=element_text(size=7, angle=90, vjust=0.5), axis.title.y=element_text(size=8), plot.title=element_text(size=8, hjust=0.5, face="bold"), axis.line.y=element_line(size=0.1))#+coord_flip()#
elasplot
reproplot<-ggplot()+#
#geom_path(data=params2, aes(f.int, eggC, group=morph, col=morphology), linetype="dotted", size=0.2)+#
#geom_path(data=params2, aes(f.int, eggC, col=morph), arrow=arrow(type="closed", length=unit(3,"mm")),linetype="dotted", size=0.2)+#
#geom_point(col="white", stroke=0.1, size=6)+#
geom_smooth(data=params[params$family=="Acroporidae",], aes(fec1cm, eggC), method="lm", formula=y~poly(x,1), se=F, size=0.2, col="black")+#
geom_segment(data=params,aes(x=fec1cm, xend=fec1cm, y=eggC-ec.se, yend=eggC+ec.se), size=0.2)+#
geom_point(data=params,aes(fec1cm, eggC, fill=spp), shape=21, stroke=0.2, size=3)+#
#geom_point(data=params[params$spp %in% c("Aro","Acy","Ahu","Ami","Gpe"),], aes(f.int, eggC, fill=spp), shape=21, stroke=0.1, size=3.5)+#
geom_text(data=params, aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text(data=params[params$AB=="R",], aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text_repel(data=params, aes(f.int+0, eggC+0,label=spp), size=2, force=0.1)+#
geom_segment(aes(x=335, xend=350, y=47, yend=43),col="grey",#colsC[3], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=405, xend=435, y=41.5, yend=40),col="grey",#colsC[2], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=700, xend=800, y=38, yend=36),col="grey",#colsC[1], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=900, xend=1000, y=28, yend=33),col="grey",#colsC[4], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=920, xend=1020, y=27, yend=27.5),col="grey",#colsC[5], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=880, xend=930, y=10, yend=10.5),col="grey",#colsC[6], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
ggtitle("Reproductive investments")+#
scale_x_log10(breaks=c(400, 600, 900, 1200))+#
geom_text(data=NULL, aes(330, 10, label='C = Common'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 6, label='R = Rare'), size=1.8, hjust=0)+#
#ylim(3,55)+#
labs(x=expression(Egg~number~(eggs~cm^-2)), y= "Egg mass (g)")+#
scale_fill_manual(values=cols)+guides(fill="none", col="none")+#
scale_colour_manual(values=colsC)+#
theme_classic()+rectheme+#
theme(plot.title=element_text(size=8, hjust=0.5))#
reproplot
params$ec.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, sd)$Carbon_ug_corrected
reproplot<-ggplot()+#
#geom_path(data=params2, aes(f.int, eggC, group=morph, col=morphology), linetype="dotted", size=0.2)+#
#geom_path(data=params2, aes(f.int, eggC, col=morph), arrow=arrow(type="closed", length=unit(3,"mm")),linetype="dotted", size=0.2)+#
#geom_point(col="white", stroke=0.1, size=6)+#
geom_smooth(data=params[params$family=="Acroporidae",], aes(fec1cm, eggC), method="lm", formula=y~poly(x,1), se=F, size=0.2, col="black")+#
geom_segment(data=params,aes(x=fec1cm, xend=fec1cm, y=eggC-ec.se, yend=eggC+ec.se), size=0.2)+#
geom_point(data=params,aes(fec1cm, eggC, fill=spp), shape=21, stroke=0.2, size=3)+#
#geom_point(data=params[params$spp %in% c("Aro","Acy","Ahu","Ami","Gpe"),], aes(f.int, eggC, fill=spp), shape=21, stroke=0.1, size=3.5)+#
geom_text(data=params, aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text(data=params[params$AB=="R",], aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text_repel(data=params, aes(f.int+0, eggC+0,label=spp), size=2, force=0.1)+#
geom_segment(aes(x=335, xend=350, y=47, yend=43),col="grey",#colsC[3], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=405, xend=435, y=41.5, yend=40),col="grey",#colsC[2], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=700, xend=800, y=38, yend=36),col="grey",#colsC[1], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=900, xend=1000, y=28, yend=33),col="grey",#colsC[4], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=920, xend=1020, y=27, yend=27.5),col="grey",#colsC[5], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=880, xend=930, y=10, yend=10.5),col="grey",#colsC[6], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
ggtitle("Reproductive investments")+#
scale_x_log10(breaks=c(400, 600, 900, 1200))+#
geom_text(data=NULL, aes(330, 10, label='C = Common'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 6, label='R = Rare'), size=1.8, hjust=0)+#
#ylim(3,55)+#
labs(x=expression(Egg~number~(eggs~cm^-2)), y= "Egg mass (g)")+#
scale_fill_manual(values=cols)+guides(fill="none", col="none")+#
scale_colour_manual(values=colsC)+#
theme_classic()+rectheme+#
theme(plot.title=element_text(size=8, hjust=0.5))#
reproplot
fig4 <- plot_grid(size.elas, plot_grid(elasplot,reproplot, nrow=1, rel_widths=c(1, 1.2),labels=c("B","C"), label_size=9), ncol=1, rel_heights=c(1,1.1),labels=c("A",""), label_size=9)+#
draw_plot(mas, 0.39, 0.1, 0.06, 0.1)+#
draw_plot(dig, 0.33, 0.12, 0.06, 0.1)+#
draw_plot(cor, 0.26, 0.29, 0.06, 0.1)+#
draw_plot(tab, 0.16, 0.31, 0.094, 0.1)+#
draw_plot(brn2, 0.12, 0.36, 0.035, 0.1)#
fig4 #
#ggsave("figs/fig.4.png", fig4, width=10, height=11, units="cm", dpi = 250)
fig4 <- plot_grid(size.elas, plot_grid(elasplot,reproplot, nrow=1, rel_widths=c(1, 1.2),labels=c("B","C"), label_size=9), ncol=1, rel_heights=c(1,1.1),labels=c("A",""), label_size=9)+#
draw_plot(mas, 0.39, 0.1, 0.06, 0.1)+#
draw_plot(dig, 0.33, 0.12, 0.06, 0.1)+#
draw_plot(cor, 0.26, 0.29, 0.06, 0.1)+#
draw_plot(tab, 0.16, 0.31, 0.094, 0.1)+#
draw_plot(brn, 0.12, 0.36, 0.035, 0.1)#
fig4
tab<-readPNG("data/coral_silhouettes/tabularG.png")#
tab<-rasterGrob(tab, interpolate=TRUE)#
mas<-readPNG("data/coral_silhouettes/massiveG.png")#
mas<-rasterGrob(mas, interpolate=TRUE)#
cor<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor<-rasterGrob(cor, interpolate=TRUE)#
cor2<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor2<-rasterGrob(cor2, interpolate=TRUE)#
dig<-readPNG("data/coral_silhouettes/digitateG.png")#
dig<-rasterGrob(dig, interpolate=TRUE)#
brn<-readPNG("data/coral_silhouettes/branchingGt.png")#
brn<-rasterGrob(brn, interpolate=TRUE)
tab<-readPNG("data/coral_silhouettes/tabularG.png")#
tab<-rasterGrob(tab, interpolate=TRUE)#
mas<-readPNG("data/coral_silhouettes/massiveG.png")#
mas<-rasterGrob(mas, interpolate=TRUE)#
cor<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor<-rasterGrob(cor, interpolate=TRUE)#
cor2<-readPNG("data/coral_silhouettes/corymboseG.png")#
cor2<-rasterGrob(cor2, interpolate=TRUE)#
dig<-readPNG("data/coral_silhouettes/digitateG.png")#
dig<-rasterGrob(dig, interpolate=TRUE)#
brn<-readPNG("data/coral_silhouettes/branchingG.png")#
brn<-rasterGrob(brn, interpolate=TRUE)
fig4 <- plot_grid(size.elas, plot_grid(elasplot,reproplot, nrow=1, rel_widths=c(1, 1.2),labels=c("B","C"), label_size=9), ncol=1, rel_heights=c(1,1.1),labels=c("A",""), label_size=9)+#
draw_plot(mas, 0.39, 0.1, 0.06, 0.1)+#
draw_plot(dig, 0.33, 0.12, 0.06, 0.1)+#
draw_plot(cor, 0.26, 0.29, 0.06, 0.1)+#
draw_plot(tab, 0.16, 0.31, 0.094, 0.1)+#
draw_plot(brn, 0.12, 0.36, 0.035, 0.1)#
fig4 #
#ggsave("figs/fig.4.png",
fig4 <- plot_grid(size.elas, plot_grid(elasplot,reproplot, ncol=1, rel_heights=c(1, 1.2),labels=c("B","C"), label_size=9), ncol=2, rel_widths=c(1.8,1),labels=c("A",""), label_size=9)+#
draw_plot(mas, 0.39, 0.1, 0.06, 0.1)+#
draw_plot(dig, 0.33, 0.12, 0.06, 0.1)+#
draw_plot(cor, 0.26, 0.29, 0.06, 0.1)+#
draw_plot(tab, 0.16, 0.31, 0.094, 0.1)+#
draw_plot(brn, 0.12, 0.36, 0.035, 0.1)#
fig4
ek.av$morphology<-factor(ek.av$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
sdat$morphology<-factor(sdat$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
s.avs <- aggregate(area~morphology, sdat, median)#
segs2<-data.frame(morphology="tabular")#
segs2$morphology<-factor(segs2$morphology, levels=c("massive","digitate","corymbose","staghorn","tabular"))#
#
size.elas<-ggplot(ek.av[!ek.av$spp=="Asp",], aes(size,X2))+#
geom_bar(stat="identity", position=position_dodge(preserve = "single"), aes(fill=spp), col="black", size=0.1, width=0.33)+#
#geom_line()+#
#geom_point()+#
facet_wrap(~morphology, scales="free_x", nrow=1)+#
scale_fill_manual(values=cols)+#
scale_colour_manual(values=cols)+#
geom_boxplot(data=sdat[!sdat$spp=="Asp",], aes(x=area, y=0.9, fill=spp), width=0.2, outlier.size=0.01, size=0.1, outlier.colour="grey")+#
guides(fill="none", col="none")+#
geom_segment(data=s.avs, aes(x=area, xend=area, y=0, yend=0.7), linetype="dotted")+#
#geom_point(data=ek.av.av, aes(x=X3, y=0.6, col=spp))+#
labs(x=expression(size~(m^2)), y="elasticity")+#
scale_y_continuous(expand=c(0,0), breaks=c(0,0.5,1))+#
theme_classic()+theme(strip.background=element_blank(), strip.text=element_text(size=8),#
axis.text.y=element_text(size=6), axis.text.x=element_text(size=6, angle=45, hjust=1), axis.title=element_text(size=8), axis.line=element_line(size=0.1), plot.title=element_text(hjust=0.5, size=8, face="bold"))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.5, y=0.8, yend=1))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.4, y=0.8, yend=0.8))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.4, y=1, yend=1))+#
geom_segment(data=segs2, aes(x=0.5, xend=0.7, y=0.9, yend=0.9))+#
geom_segment(data=segs2, aes(x=0.7, xend=0.7, y=0.5, yend=0.9))+#
geom_text(data=segs2,aes(x=1, y=0.35, label="colony \nsizes"), size=2, hjust=1)+#
ggtitle(expression(bold(Influence~of~colony~size~classes~on~lambda)))+#
#ggtitle("Demographic sensitivity to size")+#
scale_x_continuous(breaks=c(-4,-3,-2,-1,0), labels=c(expression(0.0001),expression(0.001), expression(0.01),  expression(0.1),  expression(1)))#
size.elas#
params$morphology <- factor(params$morphology, levels=c("staghorn", "tabular", "corymbose","digitate","massive"))#
elasplot<-ggplot(params, aes(reorder(spp, eR), eR, fill=spp))+#
geom_bar(stat="identity", size=0.1, col="black")+#
scale_fill_manual(values=cols)+#
guides(fill="none")+#
facet_grid(.~morphology, scales="free_x", space="free_x")+#
labs(y=expression(R[elasticity]))+#
geom_text(aes(y=eR+0.02,label=AB), size=1.8)+#
scale_y_continuous(expand=c(0,0), limits=c(0,0.45), breaks=c(0,0.1, 0.2, 0.3))+#
ggtitle("Demographic sensitivity \nto reproduction")+#
theme_classic()+theme(strip.text=element_blank(),#
 strip.background=element_blank(), axis.title.x=element_blank(),  axis.text.y=element_text(size=7),axis.text.x=element_text(size=7, angle=90, vjust=0.5), axis.title.y=element_text(size=8), plot.title=element_text(size=8, hjust=0.5, face="bold"), axis.line.y=element_line(size=0.1))#+coord_flip()#
elasplot#
params$ec.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, sd)$Carbon_ug_corrected#
reproplot<-ggplot()+#
#geom_path(data=params2, aes(f.int, eggC, group=morph, col=morphology), linetype="dotted", size=0.2)+#
#geom_path(data=params2, aes(f.int, eggC, col=morph), arrow=arrow(type="closed", length=unit(3,"mm")),linetype="dotted", size=0.2)+#
#geom_point(col="white", stroke=0.1, size=6)+#
geom_smooth(data=params[params$family=="Acroporidae",], aes(fec1cm, eggC), method="lm", formula=y~poly(x,1), se=F, size=0.2, col="black")+#
geom_segment(data=params,aes(x=fec1cm, xend=fec1cm, y=eggC-ec.se, yend=eggC+ec.se), size=0.2)+#
geom_point(data=params,aes(fec1cm, eggC, fill=spp), shape=21, stroke=0.2, size=3)+#
#geom_point(data=params[params$spp %in% c("Aro","Acy","Ahu","Ami","Gpe"),], aes(f.int, eggC, fill=spp), shape=21, stroke=0.1, size=3.5)+#
geom_text(data=params, aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text(data=params[params$AB=="R",], aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text_repel(data=params, aes(f.int+0, eggC+0,label=spp), size=2, force=0.1)+#
geom_segment(aes(x=335, xend=350, y=47, yend=43),col="grey",#colsC[3], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=405, xend=435, y=41.5, yend=40),col="grey",#colsC[2], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=700, xend=800, y=38, yend=36),col="grey",#colsC[1], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=900, xend=1000, y=28, yend=33),col="grey",#colsC[4], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=920, xend=1020, y=27, yend=27.5),col="grey",#colsC[5], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=880, xend=930, y=10, yend=10.5),col="grey",#colsC[6], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
ggtitle("Reproductive investments")+#
scale_x_log10(breaks=c(400, 600, 900, 1200))+#
geom_text(data=NULL, aes(330, 10, label='C = Common'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 6, label='R = Rare'), size=1.8, hjust=0)+#
#ylim(3,55)+#
labs(x=expression(Egg~number~(eggs~cm^-2)), y= "Egg mass (g)")+#
scale_fill_manual(values=cols)+guides(fill="none", col="none")+#
scale_colour_manual(values=colsC)+#
theme_classic()+rectheme+#
theme(plot.title=element_text(size=8, hjust=0.5))#
reproplot#
fig4 <- plot_grid(size.elas, plot_grid(elasplot,reproplot, nrow=1, rel_widths=c(1, 1.2),labels=c("B","C"), label_size=9), ncol=1, rel_heights=c(1,1.1),labels=c("A",""), label_size=9)+#
draw_plot(mas, 0.39, 0.1, 0.06, 0.1)+#
draw_plot(dig, 0.33, 0.12, 0.06, 0.1)+#
draw_plot(cor, 0.26, 0.29, 0.06, 0.1)+#
draw_plot(tab, 0.16, 0.31, 0.094, 0.1)+#
draw_plot(brn, 0.12, 0.36, 0.035, 0.1)#
fig4 #
#ggsave("figs/fig.4.png", fig4, width=10, height=11, units="cm", dpi = 250)#
#
#fig4 <- plot_grid(size.elas, plot_grid(elasplot,reproplot, ncol=1, rel_heights=c(1, 1.2),labels=c("B","C"), label_size=9), ncol=2, rel_widths=c(1.8,1),labels=c("A",""), label_size=9)+#
#draw_plot(mas, 0.39, 0.1, 0.06, 0.1)+#
#draw_plot(dig, 0.33, 0.12, 0.06, 0.1)+#
#draw_plot(cor, 0.26, 0.29, 0.06, 0.1)+#
#draw_plot(tab, 0.16, 0.31, 0.094, 0.1)+#
#draw_plot(brn, 0.12, 0.36, 0.035, 0.1)#
#fig4
fig4
########################################
# WITHIN VS BETWEEN#
########################################
#
params#
dems <- c("lam.est", "eR","lam.const")#
vars <- NULL#
for (t in c(traits, "eggC", dems,  "abundance_05")){#
	#t <- "f.cm2"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")#
#
source("figs/fig.5.R")#
#ggsave("figs/fig.5.png", withinplot, width=6, height=6, units="cm", dpi = 250)
fig.5
source("figs/fig.5.R")#
fig.5
