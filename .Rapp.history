params2$lam.est <- params$lam.est[match(params2$spp, params$spp)]#
#
morph.diff <- function(x){#
	params2$x.temp <-params[match(params2$spp, params$spp), x]#
	comp$x.common <- params2$x.temp[match(comp$Common, params2$spp)]#
	comp$x.rare <- params2$x.temp[match(comp$Rare, params2$spp)]#
	comp$x.diff <- comp$x.common-comp$x.rare#
	comp$x.div <- comp$x.common/comp$x.rare#
	comp#
	}
comp$AC<-morph.diff("abundance_05")$x.common#
comp$AR<-morph.diff("abundance_05")$x.rare#
comp$abundiff <- morph.diff("abundance_05")$x.div#
#
comp$lamC <- morph.diff("lam.est")$x.common#
comp$lamR <- morph.diff("lam.est")$x.rare#
comp$lamdiff <- morph.diff("lam.est")$x.diff#
comp$logdiff <- log(comp$lamC) - log(comp$lamR)#
#
# Double recruitment#
doub_lam <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] * 2#
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	doub_lam <- rbind(doub_lam, data.frame(spp=sp, lam=bigmatrix()$lam))#
	}#
comp$doubC <- doub_lam$lam[match(comp$Common, doub_lam$spp)]#
comp$doubR <- doub_lam$lam[match(comp$Rare, doub_lam$spp)]#
comp$doubdiff <- comp$doubC - comp$doubR#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")+#
geom_segment(aes(y=reorder(morph, -lamdiff), yend=reorder(morph, -lamdiff), x=lamdiff, xend=doubdiff), arrow=arrow(length=unit(1,"mm")))
comp
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")
params2$lam.est <- params$lam.est[match(params2$spp, params$spp)]#
#
morph.diff <- function(x){#
	params2$x.temp <-params[match(params2$spp, params$spp), x]#
	comp$x.common <- params2$x.temp[match(comp$Common, params2$spp)]#
	comp$x.rare <- params2$x.temp[match(comp$Rare, params2$spp)]#
	comp$x.diff <- comp$x.common-comp$x.rare#
	comp$x.div <- comp$x.common/comp$x.rare#
	comp#
	}#
#
comp$AC<-morph.diff("abundance_05")$x.common#
comp$AR<-morph.diff("abundance_05")$x.rare#
comp$abundiff <- morph.diff("abundance_05")$x.div#
#
comp$lamC <- morph.diff("lam.est")$x.common#
comp$lamR <- morph.diff("lam.est")$x.rare#
comp$lamdiff <- morph.diff("lam.est")$x.diff#
comp$logdiff <- log(comp$lamC) - log(comp$lamR)#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")
params_orig <- params # CAREFUL set original
params_orig <- params # CAREFUL set original #
source("R/7_morphology.R")#
head(p.morph)
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}
source("R/1_data_prep.R")
source("R/2_params.R")
source("R/3_demo_traits.R")
params <- read.csv("data/params.csv") #skip 1-2-3#
head(params)#
spp<-params$spp[order(params$spp)]
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
# Gre growth slope = Gpe#
#################################### #
params[params$spp=="Gre", c("p.int", "p.slp","p.sig")] <- params[params$spp=="Gpe", c("p.int", "p.slp","p.sig")]#
params[params$spp=="Gre", c("g.int", "g.slp","g.var")] <- params[params$spp=="Gpe", c("g.int", "g.slp","g.var")]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2 <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+geom_line(aes(col=spp))+scale_x_log10()+scale_colour_manual(values=cols)+coord_cartesian(ylim=c(0.6,2))+guides(col="none")#
#
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
agg.rec <- aggregate(log10(rec.tran)~family, params, mean)#
params$rec.mean <- 10^agg.rec[match(params$family, agg.rec$family),2]#
params$rec <- params$rec.mean#
#
lam.est <- NULL#
R0 <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))#
R0 <- rbind(R0, data.frame(sp, R0=bigmatrix()$R0))#
}#
#
params$lam.est <- lam.est$lam#
params$R0 <- R0$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]#
#
# source("figs/supp/supp.fig2.R") # abundances#
# source("figs/supp/supp.fig3.R") # plot IPMs#
#
########################################
# BOOTSTRAP LAM#
#######################################	#
#
# source("R/bootstap.R")#
boot <- read.csv("data/lam.range.csv")#
boot$GT <- log(boot$r)/log(boot$lam)#
#
ggplot(boot, aes(GT, log(lam)))+#
geom_hline(yintercept=0)+#
geom_point(shape=21, aes(col=spp), alpha=0.2)+#
coord_cartesian(xlim=c(min(boot$GT),100))+#
scale_colour_manual(values=cols)+scale_x_log10()+#
geom_point(data=params, aes(GT, log(lam.est)))+#
guides(col="none")+#
theme_classic()#
#
########################################
# FIG 2#
#######################################	#
source("figs/fig.2.R") #
fig.2#
#ggsave("figs/fig.2.jpeg", fig.2, width=15, height=12.7, units="cm", dpi = 600)#
#
########################################
# COMPARE LAMS#
########################################
#
params2$lam.est <- params$lam.est[match(params2$spp, params$spp)]#
#
morph.diff <- function(x){#
	params2$x.temp <-params[match(params2$spp, params$spp), x]#
	comp$x.common <- params2$x.temp[match(comp$Common, params2$spp)]#
	comp$x.rare <- params2$x.temp[match(comp$Rare, params2$spp)]#
	comp$x.diff <- comp$x.common-comp$x.rare#
	comp$x.div <- comp$x.common/comp$x.rare#
	comp#
	}#
#
comp$AC<-morph.diff("abundance_05")$x.common#
comp$AR<-morph.diff("abundance_05")$x.rare#
comp$abundiff <- morph.diff("abundance_05")$x.div#
comp$lamC <- morph.diff("lam.est")$x.common#
comp$lamR <- morph.diff("lam.est")$x.rare#
comp$lamdiff <- morph.diff("lam.est")$x.diff#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")
########################################
# TIME NEEDED TO GET DIFFERENCES#
########################################
#
# projecting lamda from basic size dist.. #
#
proj.size <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] #
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam=bigmatrix()$lam#
	v=bigmatrix()$v#
	w=bigmatrix()$w#
	ngen <- 200#
	npop <- 100#
	v <- matrix(c(1, rep(0,99)))#
pop  <- matrix(nrow=npop, ncol=ngen) # sizes/gens.#
pop[,1] <- round(v * npop) # inital pop. size#
for(j in 2:ngen){ pop[,j] <- bigmatrix()$K %*% as.matrix(pop[,j-1]) }#
pop.long <- melt(pop, value.name = "NperSize")#
colnames(pop.long)[1]<-"Size"#
colnames(pop.long)[2]<-"gen"#
psize<-	aggregate(NperSize~gen, data=pop.long, sum)#
psize$n <- npop*lam^psize$gen # simpler method#
proj.size <- rbind(proj.size, cbind(psize, spp=sp, abun=params$abundance_pair[params$spp==sp], morph=params$morph[params$spp==sp]))#
}#
#
proj.size <- proj.size[!proj.size$spp=="Ana",]	#
#
proj <- dcast(morph+gen~abun, data=proj.size, value.var="NperSize")#
proj$diff <- proj$Common/proj$Rare#
proj$real <- comp$abundiff[match(proj$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj[proj$diff<proj$real,], max)#
proj$maxgen <- gens$gen[match(proj$morph, gens$morph)] +1 #
#
projdat <- proj3[proj3$gen==proj3$maxgen,]#
projdat#
ggplot(proj, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
geom_line(data=proj3[proj3$gen<=proj3$maxgen,])+#
geom_point(data=proj3[proj3$gen==proj3$maxgen,])+ #
scale_y_sqrt()+scale_x_sqrt()+#
coord_cartesian(ylim=c(0,60), xlim=c(0,100))
########################################
# WITHIN VS BETWEEN#
########################################
#
Gen5 <- subset(proj.size, gen==5 )#
params$Gen5<-Gen5$NperSize[match(params$spp, Gen5$spp)]#
#
Gen10 <- subset(proj.size, gen==10)#
params$Gen10<-Gen10$NperSize[match(params$spp, Gen10$spp)]#
#
dems <- c("lam.est", "Gen5",  "Gen10", "abundance_05", "rec")#
#
vars <- NULL#
for (t in c(traits, "eggC",dems)){#
	#t <- "Gen15"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")
params_orig <- params # CAREFUL set original #
source("R/7_morphology.R")#
head(p.morph)
write.csv(p.morph, "p.morph.csv")
p.morph <- read.csv("data/params_morph.csv")
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_demo_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
head(params)#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
# Gre growth slope = Gpe#
#################################### #
params[params$spp=="Gre", c("p.int", "p.slp","p.sig")] <- params[params$spp=="Gpe", c("p.int", "p.slp","p.sig")]#
params[params$spp=="Gre", c("g.int", "g.slp","g.var")] <- params[params$spp=="Gpe", c("g.int", "g.slp","g.var")]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2 <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+geom_line(aes(col=spp))+scale_x_log10()+scale_colour_manual(values=cols)+coord_cartesian(ylim=c(0.6,2))+guides(col="none")#
#
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
agg.rec <- aggregate(log10(rec.tran)~family, params, mean)#
params$rec.mean <- 10^agg.rec[match(params$family, agg.rec$family),2]#
params$rec <- params$rec.mean#
#
lam.est <- NULL#
R0 <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))#
R0 <- rbind(R0, data.frame(sp, R0=bigmatrix()$R0))#
}#
#
params$lam.est <- lam.est$lam#
params$R0 <- R0$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]#
#
# source("figs/supp/supp.fig2.R") # abundances#
# source("figs/supp/supp.fig3.R") # plot IPMs#
#
########################################
# BOOTSTRAP LAM#
#######################################	#
#
# source("R/bootstap.R")#
boot <- read.csv("data/lam.range.csv")#
boot$GT <- log(boot$r)/log(boot$lam)#
#
ggplot(boot, aes(GT, log(lam)))+#
geom_hline(yintercept=0)+#
geom_point(shape=21, aes(col=spp), alpha=0.2)+#
coord_cartesian(xlim=c(min(boot$GT),100))+#
scale_colour_manual(values=cols)+scale_x_log10()+#
geom_point(data=params, aes(GT, log(lam.est)))+#
guides(col="none")+#
theme_classic()#
#
########################################
# FIG 2#
#######################################	#
source("figs/fig.2.R") #
fig.2#
#ggsave("figs/fig.2.jpeg", fig.2, width=15, height=12.7, units="cm", dpi = 600)#
#
########################################
# COMPARE LAMS#
########################################
#
params2$lam.est <- params$lam.est[match(params2$spp, params$spp)]#
#
morph.diff <- function(x){#
	params2$x.temp <-params[match(params2$spp, params$spp), x]#
	comp$x.common <- params2$x.temp[match(comp$Common, params2$spp)]#
	comp$x.rare <- params2$x.temp[match(comp$Rare, params2$spp)]#
	comp$x.diff <- comp$x.common-comp$x.rare#
	comp$x.div <- comp$x.common/comp$x.rare#
	comp#
	}#
#
comp$AC<-morph.diff("abundance_05")$x.common#
comp$AR<-morph.diff("abundance_05")$x.rare#
comp$abundiff <- morph.diff("abundance_05")$x.div#
comp$lamC <- morph.diff("lam.est")$x.common#
comp$lamR <- morph.diff("lam.est")$x.rare#
comp$lamdiff <- morph.diff("lam.est")$x.diff#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")#
#
########################################
# TIME NEEDED TO GET DIFFERENCES#
########################################
#
# projecting lamda from basic size dist.. #
#
proj.size <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] #
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam=bigmatrix()$lam#
	v=bigmatrix()$v#
	w=bigmatrix()$w#
	ngen <- 200#
	npop <- 100#
	v <- matrix(c(1, rep(0,99)))#
pop  <- matrix(nrow=npop, ncol=ngen) # sizes/gens.#
pop[,1] <- round(v * npop) # inital pop. size#
for(j in 2:ngen){ pop[,j] <- bigmatrix()$K %*% as.matrix(pop[,j-1]) }#
pop.long <- melt(pop, value.name = "NperSize")#
colnames(pop.long)[1]<-"Size"#
colnames(pop.long)[2]<-"gen"#
psize<-	aggregate(NperSize~gen, data=pop.long, sum)#
psize$n <- npop*lam^psize$gen # simpler method#
proj.size <- rbind(proj.size, cbind(psize, spp=sp, abun=params$abundance_pair[params$spp==sp], morph=params$morph[params$spp==sp]))#
}#
#
proj.size <- proj.size[!proj.size$spp=="Ana",]	#
#
proj <- dcast(morph+gen~abun, data=proj.size, value.var="NperSize")#
proj$diff <- proj$Common/proj$Rare#
proj$real <- comp$abundiff[match(proj$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj[proj$diff<proj$real,], max)#
proj$maxgen <- gens$gen[match(proj$morph, gens$morph)] +1 #
#
projdat <- proj3[proj3$gen==proj3$maxgen,]#
projdat#
ggplot(proj, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
geom_line(data=proj3[proj3$gen<=proj3$maxgen,])+#
geom_point(data=proj3[proj3$gen==proj3$maxgen,])+ #
scale_y_sqrt()+scale_x_sqrt()+#
coord_cartesian(ylim=c(0,60), xlim=c(0,100))#
#
########################################
# WITHIN VS BETWEEN#
########################################
#
Gen5 <- subset(proj.size, gen==5 )#
params$Gen5<-Gen5$NperSize[match(params$spp, Gen5$spp)]#
#
Gen10 <- subset(proj.size, gen==10)#
params$Gen10<-Gen10$NperSize[match(params$spp, Gen10$spp)]#
#
dems <- c("lam.est", "Gen5",  "Gen10", "abundance_05", "rec")#
#
vars <- NULL#
for (t in c(traits, "eggC",dems)){#
	#t <- "Gen15"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")#
#
########################################
# SENSITIVITY ANALYSIS!!  Within morph groups#
########################################
#
params_orig <- params # CAREFUL set original #
#source("R/7_morphology.R")#
head(p.morph)#
p.morph <- read.csv("data/params_morph.csv")
head(p.morph)
#source("R/7_morphology.R")#
p.morph <- read.csv("data/params_morph.csv") #skip 7#
head(p.morph)#
#
pars <- c("m.int", "m.slp","f.int","f.slp","g.int","g.slp","g.var", "s.int", "s.slp", "s.slp.2")#
#
p.types <- data.frame(pars, type = c("reproduction","reproduction","reproduction","reproduction","growth","growth","growth", "survival","survival","survival"))#
#
types <- unique(p.types$type)#
#
test <- NULL#
test2 <- NULL#
for (i in types) {#
#i <- "m.int"#
#i = "maturity"#
params <- params_orig #
params[,pars] <- p.morph[match(params$morphology, p.morph$morph), pars]#
pars2 <- p.types$pars[p.types$type==i]#
params[,pars2] <- params_orig[match(params$spp, params_orig$spp), pars2]#
params#
for (sp in spp) {#
	#sp <- "Ahy"#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
test<-rbind(test, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="normal"))#
rec <- params$rec.mean[params$spp==sp] * 2#
test2<-rbind(test2, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="double"))#
 } #
}
diffs <- NULL#
diffs2 <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	diffs <- rbind(diffs, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	sub2 <- test2[test2$param==i, ]#
	params$x <- sub2$lam[match(params$spp, sub2$spp)]#
	diffs2 <- rbind(diffs2, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="double"))#
	}#
head(diffs)#
sums <- aggregate(d~morph+rec, diffs, sum)#
sums$lamdiff <- comp$lamdiff[match(sums$morph, comp$morp)]#
#
sums2 <- aggregate(d~morph+rec, diffs2, sum)#
sums2$lamdiff <- comp$doubdiff[match(sums2$morph, comp$morp)]#
ggplot(rbind(sums,sums), aes(lamdiff, d))+geom_point(aes(col=morph, shape=rec))+#
scale_y_log10()+scale_x_log10()+#
#scale_y_sqrt()+scale_x_sqrt()+#
geom_abline(slope=1)+#
labs(x="Real lamda difference", y = "Sum of differences")
ggplot()+#
geom_bar(data=diffs, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+#
geom_point(data=comp, aes(lamdiff, morph, col=morph), shape=4, stroke=1, size=0.5)+#
#scale_fill_manual(values=c("white",pal[c(2:3)]))+#
labs(x="Lamda difference (Common - Rare)")+#
geom_vline(xintercept=0)+#
#scale_x_sqrt()+#
guides(col="none")+scale_colour_manual(values=colsC)+#
theme_classic()+theme(axis.title.y=element_blank(), legend.title=element_blank(), legend.position=c(0.8, 0.8), legend.key.width=unit(2,"mm"), legend.key.height=unit(1,"mm"))
sums
ggplot(rbind(sums,sums), aes(lamdiff, d))+geom_point(aes(col=morph, shape=rec))+#
scale_y_log10()+scale_x_log10()+#
#scale_y_sqrt()+scale_x_sqrt()+#
geom_abline(slope=1)+#
labs(x="Real lamda difference", y = "Sum of differences")
source("figs/fig.3.R")#
fig.3
ggplot()+#
geom_bar(data=diffs, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+#
geom_point(data=comp, aes(lamdiff, morph, col=morph), shape=4, stroke=1, size=0.5)+#
labs(x="Lamda difference (Common - Rare)")+#
geom_vline(xintercept=0)+#
guides(col="none")+scale_colour_manual(values=colsC)
ggplot()+#
geom_bar(data=diffs, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+#
geom_point(data=comp, aes(lamdiff, morph, col=morph), shape=4, stroke=1, size=0.5)+#
labs(x="Lamda difference (Common - Rare)")+#
geom_vline(xintercept=0)
ggplot()+#
geom_bar(data=diffs, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+geom_vline(xintercept=0)
test <- NULL#
test2 <- NULL#
for (i in types) {#
#i <- "m.int"#
#i = "maturity"#
params <- params_orig #
params[,pars] <- p.morph[match(params$morphology, p.morph$morph), pars]#
pars2 <- p.types$pars[p.types$type==i]#
params[,pars2] <- params_orig[match(params$spp, params_orig$spp), pars2]#
params#
for (sp in spp) {#
	#sp <- "Ahy"#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
test<-rbind(test, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="normal"))#
rec <- params$rec.mean[params$spp==sp] * 2#
test2<-rbind(test2, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="double"))#
 } #
}#
#
diffs <- NULL#
diffs2 <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	diffs <- rbind(diffs, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	sub2 <- test2[test2$param==i, ]#
	params$x <- sub2$lam[match(params$spp, sub2$spp)]#
	diffs2 <- rbind(diffs2, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="double"))#
	}#
head(diffs)
plotdat <- proj#
#
projplot <- ggplot(plotdat, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
#scale_x_log10()+scale_y_log10()+#
geom_line(data=plotdat[plotdat$gen<=plotdat$maxgen,])+#
geom_point(data=plotdat[plotdat$gen==plotdat$maxgen,])+#
#geom_text(data=proj3[proj3$gen==proj3$maxgen,], aes(x=gen*1.2, label=morph), size=2, col="black", hjust=0)+#
#geom_text(data=projdat[projdat$morph=="massive",], aes(x=gen-15, label=morph), size=2, hjust=1, angle=55)+#
#geom_text(data=projdat[projdat$morph=="digitate",], aes(x=gen-4, y=diff*1.2, label=morph), size=2, hjust=0, angle=65)+#
#geom_text(data=projdat[projdat$morph=="staghorn",], aes(x=gen-1, y=diff*1.2, label=morph), size=2, hjust=0, angle=70)+#
#geom_text(data=projdat[projdat$morph=="tabular",], aes(x=gen-5, y=diff/1.2, label=morph), size=2, hjust=1, angle=82)+#
#geom_text(data=projdat[projdat$morph=="corymbose",], aes(x=gen-2, y=diff*1.2, label=morph), size=2, hjust=0, angle=80)+#
#geom_text(data=projdat[projdat$morph=="corymbose_2",], aes(x=gen+4, y=diff*1.2, label=morph), size=2, hjust=0, angle=70)+#
#geom_text(data=proj3[proj3$Gen==proj3$maxgen & proj3$morph=="digitate",], aes(x=Gen-10, label=morph), size=2, hjust=1, angle=28)+#
coord_cartesian(ylim=c(0.5,65), xlim=c(0.7,45))+#scale_y_log10()+#
#guides(col="none")+#
scale_y_sqrt(expand=c(0,0))+#
#scale_x_sqrt(limits=c(1, max(gens$Gen+5)), breaks=c(10, 50, 90,130,170), expand=c(0,0))+#
scale_x_sqrt(expand=c(0,0))+#
#scale_x_sqrt(breaks=c(5, 40, 100, 150))+#
#scale_x_log10(breaks=c(1,3.2,10,32,100))+#
scale_colour_manual(values=colsC)+#
theme_classic()+theme(legend.position=c(0.75, 0.2), legend.title=element_blank(), legend.background=element_blank(), legend.key.height=unit(1,"mm"), legend.text=element_text(size=7), axis.title=element_text(size=9))#
projplot
projplot <- ggplot(plotdat, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
#scale_x_log10()+scale_y_log10()+#
geom_line(data=plotdat[plotdat$gen<=plotdat$maxgen,])+#
geom_point(data=plotdat[plotdat$gen==plotdat$maxgen,])+#
coord_cartesian(ylim=c(0.5,65), xlim=c(0.7,45))+#
scale_y_sqrt(expand=c(0,0))+#
scale_x_sqrt(expand=c(0,0))+#
scale_colour_manual(values=colsC)+#
theme_classic()+theme(legend.position=c(0.75, 0.2), legend.title=element_blank(), legend.background=element_blank(), legend.key.height=unit(1,"mm"), legend.text=element_text(size=7), axis.title=element_text(size=9))#
projplot
projdat <- proj[proj3gen==proj$maxgen,]#
projdat
vars$type <- ifelse(vars$t %in% dems, "Abundance", ifelse(vars$t=="abundance_05", "Abundance", "Demographic traits"))#
#vars$type <- factor(vars$type, levels=c("Demographic traits", "Abundance", "Abundance"))#
#
abunvar <- subset(vars, t=="abundance_05")#
vars2 <- vars[!vars$t=="abundance_05",]#
vars2$t[order(vars2$within)]#
group_name <- c(#
expression(italic(P[rec])),#
expression(Survival[juvenile]), #
expression(Partial~mortality),#
expression(Growth[max]),  #
expression(Fecundity[colony]),#
expression(Mature~size),#
expression(Survival[adult]),#
"Egg Mass",#
expression(Fecundity[area]), #
expression(Pop.~growth~(lambda)),#
expression(Abundance["5yrs"]),#
expression(Abundance["10yrs"])#
)#
#
#pal[1:3]#
library("RColorBrewer")#
pal <- brewer.pal(n = 3, name = 'Greys')#
#https://www.schemecolor.com/leather.php#
#
withinplot <- ggplot(vars2, aes(y=reorder(t, -within), x=within))+#
#geom_point(aes(col=type))+#
geom_bar(stat="Identity", col="black", size=0.1, width=0.75, aes(fill=type))+#
geom_bar(stat="Identity", col="black", size=0.1, width=0.75,fill="grey", alpha=0.5)+#
scale_x_continuous(expand=c(0,0), limits=c(0,80))+#
scale_y_discrete(labels=rev(group_name))+#
labs(x="% variation within \nmorphological groups", y="parameter")+#
guides(fill="none")+#
#coord_cartesian(xlim=c(0,55))+#
theme_classic()+#
geom_point(data=abunvar, aes(y="Gen10", x=within), shape=4, stroke=0.7)+#
geom_segment(data=NULL, aes(y="f.cm2", yend="survcm", x=20, xend=20))+#
geom_segment(data=NULL, aes(y="f.cm2", yend="f.cm2", x=20, xend=19))+#
geom_segment(data=NULL, aes(y="survcm", yend="survcm", x=20, xend=19))+#
geom_text(data=NULL, aes(y="min.r", x=22, label="Demographic \ntraits"), size=2.5, hjust=0)+#
geom_text(data=NULL, aes(y="lam.est", x=80, label="Abundances\nin 2005"), size=2.5, hjust=1)+#
geom_segment(data=NULL, aes(y="Gen5", yend=1.5, x=77.3, xend=77.3))+#
scale_fill_manual(values=c("#9F7159","#DF9D6C"))+ #pal[c(2:3)]#
theme(axis.title.y=element_blank(), legend.title=element_blank(), legend.key.width=unit(2, "mm"), legend.key.height=unit(2, "mm"), legend.position=c(0.6, 0.9), #
legend.background=element_blank(),#
panel.grid.major.x=element_line(),#
panel.grid.minor.x=element_line(),#
axis.line=element_line(size=0.1),#
legend.text=element_text(size=8),#
axis.title.x=element_text(size=8), axis.text.y=element_text(size=8))#
withinplot
Fig4AB <- plot_grid(projplot+labs(x="Time (years)", y=expression(N[common]/N[rare]))+ggtitle("Projected abundance \ndifferences")+theme(plot.title=element_text(size=8, hjust=0.5, face="bold")), withinplot+ggtitle("Disassociation from \nmorphology")+theme(plot.title=element_text(size=8, hjust=0.5, face="bold")), rel_widths=c(0.8, 1), labels=c("a","b"), label_size=9)#
	Fig4AB
pal <- brewer.pal(n = 3, name = 'Greys')#
#
comp$labels <- paste(comp$Common, " - ", comp$Rare, sep="")
mas_x <- comp$lamdiff[comp$morph=="massive"]#
tab_x <- comp$lamdiff[comp$morph=="tabular"]#
brn_x <- comp$lamdiff[comp$morph=="staghorn"]#
dig_x <- comp$lamdiff[comp$morph=="digitate"]#
cor_x <- comp$lamdiff[comp$morph=="corymbose"]
comp$rank<-NA#
comp$rank[order(comp$lamdiff)] <- nrow(comp):1#
mas_y <- comp$rank[comp$morph=="massive"]#
tab_y <- comp$rank[comp$morph=="tabular"]#
brn_y <- comp$rank[comp$morph=="staghorn"]#
dig_y <- comp$rank[comp$morph=="digitate"]#
cor_y <- comp$rank[comp$morph=="corymbose"]#
cor2_y <- comp$rank[comp$morph=="corymbose_2"]#
#
diffs$label <- comp$label[match(diffs$morph, comp$morph)]
fig4CD <- plot_grid(ggplot(diffs, aes(d, reorder(label, -d), fill=param))+#
geom_bar(stat="Identity", position="stack", col="black", size=0.2, width=0.6)+#
#geom_point(data=comp, aes(lamdiff, morph, fill=NA), shape=4)+#
#facet_wrap(~morph, nrow=2)+#
#scale_fill_manual(values=colsC)+#
scale_fill_manual(values=c("white",pal[c(2:3)]))+#
labs(x=expression(lambda~difference~(Common~-~Rare)))+#
xlim(c(-0.02, 0.6))+#
annotation_custom(mas, mas_x+0.01, mas_x+0.13, mas_y-0.4, mas_y+0.4)+#
annotation_custom(brn, brn_x+0.05, brn_x+0.14, brn_y-0.5, brn_y+0.5)+#
annotation_custom(tab, tab_x+0.03, tab_x+0.12, tab_y-0.5, tab_y+0.5)+#
annotation_custom(cor, cor_x+0.01, cor_x+0.15, cor_y-0.5, cor_y+0.5)+#
annotation_custom(dig, dig_x+0.01, dig_x+0.15, dig_y-0.5, dig_y+0.5)+#
geom_vline(xintercept=0)+#
#scale_x_sqrt()+#
theme_classic()+theme(axis.title.y=element_blank(), legend.title=element_blank(),  legend.key.width=unit(2,"mm"), legend.key.height=unit(1,"mm"), axis.line.y=element_blank(), legend.position=c(0.8,0.8),axis.text.x=element_text(size=9),axis.text.y=element_text(size=7, angle=30), axis.title=element_text(size=9)),#
ggplot(sums, aes(lamdiff, d))+geom_abline(slope=1, size=0.1)+geom_point(aes(col=morph), size=2)+#
#scale_y_sqrt()+scale_x_sqrt()+#
labs(x=expression(~Original~lambda~difference), y = "Sum of \ndifferences")+guides(col="none")+scale_colour_manual(values=colsC)+theme_classic()+theme(axis.text=element_text(size=9),axis.title=element_text(size=9)), #
rel_widths=c(1,0.5), labels=c("c","d"), label_size=9)#
#fig4CD
fig.3<- plot_grid(plot_grid(NULL, Fig4AB, rel_widths=c(0.02,1)), NULL, fig4CD, ncol=1, rel_heights=c(1,0.12, 0.7))+#
draw_label(expression(bold(Source~of~lambda~differences)), 0.55, 0.42, size=8)+#
draw_label(expression(bold(within~groups)), 0.55, 0.39, size=8)+#
draw_label("?", 0.63, 0.9, size=8, fontface="bold")#
fig.3
source("figs/fig.3.R")#
fig.3
########################################
# REPRODUCTIVE TRADEOFF#
########################################
#
params <- params_orig #
#
ec$morph<-params$morphology[match(ec$spp, params$spp)]#
ecplot <- ggplot()+#
geom_boxplot(data=ec, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")#
#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
plot_grid(ecplot,ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae",], method="lm"), nrow=1, rel_widths=c(1.15,1))
param
params
ec
geom_boxplot(data=params, aes(y=reorder(morph, -Carbon_ug_corrected), x=Carbon_ug_corrected, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
geom_boxplot(data=params, aes(y=reorder(morph, -eggC), x=eggC, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
ecplot <- ggplot()+#
geom_boxplot(data=params, aes(y=reorder(morph, -eggC), x=eggC, fill=spp), outlier.size=0.2, size=0.1,position = position_dodge(width = 1))+scale_fill_manual(values=cols)+guides(fill="none")
params <- params_orig #
#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae",], method="lm")
source("figs/fig.4.R")#
fig.4#
#ggsave("figs/fig.
params$AB <- ifelse(params$abundance_pair=="Common","C","R")#
params$AB[params$spp=="Ana"]<-"D"#
#
#params$ec.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, sd)$Carbon_ug_corrected#
#
reproplot<-ggplot()+#
#geom_path(data=params2, aes(f.int, eggC, group=morph, col=morphology), linetype="dotted", size=0.2)+#
#geom_path(data=params2, aes(f.int, eggC, col=morph), arrow=arrow(type="closed", length=unit(3,"mm")),linetype="dotted", size=0.2)+#
#geom_point(col="white", stroke=0.1, size=6)+#
geom_smooth(data=params[params$family=="Acroporidae",], aes(fec1cm, eggC), method="lm", formula=y~poly(x,1), se=F, size=0.2, col="black")+#
geom_segment(data=params,aes(x=fec1cm, xend=fec1cm, y=eggC-ec.se, yend=eggC+ec.se), size=0.2)+#
geom_point(data=params,aes(fec1cm, eggC, fill=spp), shape=21, stroke=0.2, size=3)+#
#geom_point(data=params[params$spp %in% c("Aro","Acy","Ahu","Ami","Gpe"),], aes(f.int, eggC, fill=spp), shape=21, stroke=0.1, size=3.5)+#
geom_text(data=params, aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text(data=params[params$AB=="R",], aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text_repel(data=params, aes(f.int+0, eggC+0,label=spp), size=2, force=0.1)+#
geom_segment(aes(x=335, xend=350, y=47, yend=43),col="grey",#colsC[3], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=405, xend=435, y=41.5, yend=40),col="grey",#colsC[2], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=700, xend=800, y=38, yend=36),col="grey",#colsC[1], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=900, xend=1000, y=28, yend=33),col="grey",#colsC[4], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=920, xend=1020, y=27, yend=27.5),col="grey",#colsC[5], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=880, xend=930, y=10, yend=10.5),col="grey",#colsC[6], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
ggtitle("Reproductive investments")+#
scale_x_log10(breaks=c(400, 600, 900, 1200))+#
geom_text(data=NULL, aes(330, 10, label='C = Common'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 8, label='R = Rare'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 6, label='D = Declined'), size=1.8, hjust=0)+#
#ylim(3,55)+#
labs(x=expression(Egg~number~(eggs~cm^-2)), y= "Egg mass (g of Carbon)")+#
scale_fill_manual(values=cols)+guides(fill="none", col="none")+#
scale_colour_manual(values=colsC)+#
theme_classic()+#
theme(plot.title=element_text(size=8, hjust=0.5, face="bold"), axis.title=element_text(size=10))#
reproplot#
#
arrows3 <- dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="lam.mn")#
arrows3$GT.C <- dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="GT")$Common#
arrows3$GT.R <- dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="GT")$Rare#
arrows3$Common2 <- ifelse(arrows3$GT.R > 20, arrows3$Common * 0.98, arrows3$Common * 0.95)#
arrows3$Rare2 <- ifelse(arrows3$GT.R > 20, arrows3$Rare * 1.02, arrows3$Rare * 1.1)#
arrows3$GT.C2 <- ifelse(arrows3$GT.C > 20, arrows3$GT.C *1.1, arrows3$GT.C * 1)#
arrows3$GT.R2 <- ifelse(arrows3$GT.R > 20, arrows3$GT.R *0.9, arrows3$GT.R * 1)#
#
GTplot<- ggplot()+geom_hline(yintercept=1, size=0.1)+#
geom_segment(data=params, aes(x=GT, xend=GT, y=lam.sd1, yend=lam.sd2), size=0.2)+#
#geom_segment(data=arrows3, aes(x=GT.R2, xend=GT.C2, y=Rare2, yend=Common2), col="grey", arrow=arrow(type="closed", length=unit(0.8,"mm")))+#
geom_point(data=params,aes(GT, lam.mn, fill=spp), shape=21, stroke=0.2, size=3)+#
geom_text(data=params, aes(GT, lam.mn, label=AB), size=1.8)+#
#scale_x_log10()+#
#scale_y_log10()+#
scale_fill_manual(values=cols)+guides(fill="none")+#
theme_classic()+#
ggtitle("Generation times")+#
labs(x="Generation Time (years)", y=expression(Fitness~(lambda)))+theme(plot.title=element_text(size=8, hjust=0.5, face="bold"), axis.title=element_text(size=10))
params$eggC.se<-aggregate(Carbon_ug_corrected~spp+morph, ec, sd)$Carbon_ug_corrected
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA
source("R/1_data_prep.R")
source("R/2_params.R")
source("R/3_demo_traits.R")
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA
source("R/1_data_prep.R")
params$eggC.se<-aggregate(Carbon_ug_corrected~spp, ec, sd)$Carbon_ug_corrected
source("R/1_data_prep.R")
source("R/2_params.R")
source("R/3_demo_traits.R")
write.csv(params, "data/params.csv")
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_demo_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
head(params)#
spp<-params$spp[order(params$spp)]#
#
# ordering
params
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_demo_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
head(params)#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
# Gre growth slope = Gpe#
#################################### #
params[params$spp=="Gre", c("p.int", "p.slp","p.sig")] <- params[params$spp=="Gpe", c("p.int", "p.slp","p.sig")]#
params[params$spp=="Gre", c("g.int", "g.slp","g.var")] <- params[params$spp=="Gpe", c("g.int", "g.slp","g.var")]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2 <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+geom_line(aes(col=spp))+scale_x_log10()+scale_colour_manual(values=cols)+coord_cartesian(ylim=c(0.6,2))+guides(col="none")#
#
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
agg.rec <- aggregate(log10(rec.tran)~family, params, mean)#
params$rec.mean <- 10^agg.rec[match(params$family, agg.rec$family),2]#
params$rec <- params$rec.mean#
#
lam.est <- NULL#
R0 <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))#
R0 <- rbind(R0, data.frame(sp, R0=bigmatrix()$R0))#
}#
#
params$lam.est <- lam.est$lam#
params$R0 <- R0$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]#
#
# source("figs/supp/supp.fig2.R") # abundances#
# source("figs/supp/supp.fig3.R") # plot IPMs#
#
########################################
# BOOTSTRAP LAM#
#######################################	#
#
# source("R/bootstap.R")#
boot <- read.csv("data/lam.range.csv")#
boot$GT <- log(boot$r)/log(boot$lam)#
#
ggplot(boot, aes(GT, log(lam)))+#
geom_hline(yintercept=0)+#
geom_point(shape=21, aes(col=spp), alpha=0.2)+#
coord_cartesian(xlim=c(min(boot$GT),100))+#
scale_colour_manual(values=cols)+scale_x_log10()+#
geom_point(data=params, aes(GT, log(lam.est)))+#
guides(col="none")+#
theme_classic()#
#
########################################
# FIG 2#
#######################################	#
source("figs/fig.2.R") #
fig.2#
#ggsave("figs/fig.2.jpeg", fig.2, width=15, height=12.7, units="cm", dpi = 600)#
#
########################################
# COMPARE LAMS#
########################################
#
params2$lam.est <- params$lam.est[match(params2$spp, params$spp)]#
#
morph.diff <- function(x){#
	params2$x.temp <-params[match(params2$spp, params$spp), x]#
	comp$x.common <- params2$x.temp[match(comp$Common, params2$spp)]#
	comp$x.rare <- params2$x.temp[match(comp$Rare, params2$spp)]#
	comp$x.diff <- comp$x.common-comp$x.rare#
	comp$x.div <- comp$x.common/comp$x.rare#
	comp#
	}#
#
comp$AC<-morph.diff("abundance_05")$x.common#
comp$AR<-morph.diff("abundance_05")$x.rare#
comp$abundiff <- morph.diff("abundance_05")$x.div#
comp$lamC <- morph.diff("lam.est")$x.common#
comp$lamR <- morph.diff("lam.est")$x.rare#
comp$lamdiff <- morph.diff("lam.est")$x.diff#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")#
#
########################################
# TIME NEEDED TO GET DIFFERENCES#
########################################
#
# projecting lamda from basic size dist.. #
#
proj.size <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] #
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam=bigmatrix()$lam#
	v=bigmatrix()$v#
	w=bigmatrix()$w#
	ngen <- 200#
	npop <- 100#
	v <- matrix(c(1, rep(0,99)))#
pop  <- matrix(nrow=npop, ncol=ngen) # sizes/gens.#
pop[,1] <- round(v * npop) # inital pop. size#
for(j in 2:ngen){ pop[,j] <- bigmatrix()$K %*% as.matrix(pop[,j-1]) }#
pop.long <- melt(pop, value.name = "NperSize")#
colnames(pop.long)[1]<-"Size"#
colnames(pop.long)[2]<-"gen"#
psize<-	aggregate(NperSize~gen, data=pop.long, sum)#
psize$n <- npop*lam^psize$gen # simpler method#
proj.size <- rbind(proj.size, cbind(psize, spp=sp, abun=params$abundance_pair[params$spp==sp], morph=params$morph[params$spp==sp]))#
}#
#
proj.size <- proj.size[!proj.size$spp=="Ana",]	#
#
proj <- dcast(morph+gen~abun, data=proj.size, value.var="NperSize")#
proj$diff <- proj$Common/proj$Rare#
proj$real <- comp$abundiff[match(proj$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj[proj$diff<proj$real,], max)#
proj$maxgen <- gens$gen[match(proj$morph, gens$morph)] +1 #
#
projdat <- proj3[proj3$gen==proj3$maxgen,]#
projdat#
ggplot(proj, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
geom_line(data=proj3[proj3$gen<=proj3$maxgen,])+#
geom_point(data=proj3[proj3$gen==proj3$maxgen,])+ #
scale_y_sqrt()+scale_x_sqrt()+#
coord_cartesian(ylim=c(0,60), xlim=c(0,100))#
#
########################################
# WITHIN VS BETWEEN#
########################################
#
Gen5 <- subset(proj.size, gen==5 )#
params$Gen5<-Gen5$NperSize[match(params$spp, Gen5$spp)]#
#
Gen10 <- subset(proj.size, gen==10)#
params$Gen10<-Gen10$NperSize[match(params$spp, Gen10$spp)]#
#
dems <- c("lam.est", "Gen5",  "Gen10", "abundance_05", "rec")#
#
vars <- NULL#
for (t in c(traits, "eggC",dems)){#
	#t <- "Gen15"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")#
#
########################################
# DRIVERS OF FITNESS DIFFS (within morphs)#
########################################
#
params_orig <- params # CAREFUL set original #
#source("R/7_morphology.R")#
p.morph <- read.csv("data/params_morph.csv") #skip 7#
head(p.morph)#
#
pars <- c("m.int", "m.slp","f.int","f.slp","g.int","g.slp","g.var", "s.int", "s.slp", "s.slp.2")#
#
p.types <- data.frame(pars, type = c("reproduction","reproduction","reproduction","reproduction","growth","growth","growth", "survival","survival","survival"))#
#
types <- unique(p.types$type)#
#
test <- NULL#
test2 <- NULL#
for (i in types) {#
#i <- "m.int"#
#i = "maturity"#
params <- params_orig #
params[,pars] <- p.morph[match(params$morphology, p.morph$morph), pars]#
pars2 <- p.types$pars[p.types$type==i]#
params[,pars2] <- params_orig[match(params$spp, params_orig$spp), pars2]#
params#
for (sp in spp) {#
	#sp <- "Ahy"#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
test<-rbind(test, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="normal"))#
rec <- params$rec.mean[params$spp==sp] * 2#
test2<-rbind(test2, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="double"))#
 } #
}#
#
diffs <- NULL#
diffs2 <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	diffs <- rbind(diffs, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	sub2 <- test2[test2$param==i, ]#
	params$x <- sub2$lam[match(params$spp, sub2$spp)]#
	diffs2 <- rbind(diffs2, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="double"))#
	}#
head(diffs)#
#
sums <- aggregate(d~morph+rec, diffs, sum)#
sums$lamdiff <- comp$lamdiff[match(sums$morph, comp$morp)]#
sums # compare d with the real lamdiff#
#
ggplot()+#
geom_bar(data=diffs, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+geom_vline(xintercept=0)#
#
########################################
# FIGURE 3#
########################################
#
source("figs/fig.3.R")#
fig.3#
#ggsave("figs/fig.3.jpeg", fig.3, width=14, height=12, units="cm", dpi = 600)#
#
########################################
# REPRODUCTIVE TRADEOFF#
########################################
#
params <- params_orig #
#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae",], method="lm")
reproplot<-ggplot()+#
#geom_path(data=params2, aes(f.int, eggC, group=morph, col=morphology), linetype="dotted", size=0.2)+#
#geom_path(data=params2, aes(f.int, eggC, col=morph), arrow=arrow(type="closed", length=unit(3,"mm")),linetype="dotted", size=0.2)+#
#geom_point(col="white", stroke=0.1, size=6)+#
geom_smooth(data=params[params$family=="Acroporidae",], aes(fec1cm, eggC), method="lm", formula=y~poly(x,1), se=F, size=0.2, col="black")+#
geom_segment(data=params,aes(x=fec1cm, xend=fec1cm, y=eggC-eggC.se, yend=eggC+eggC.se), size=0.2)+#
geom_point(data=params,aes(fec1cm, eggC, fill=spp), shape=21, stroke=0.2, size=3)+#
#geom_point(data=params[params$spp %in% c("Aro","Acy","Ahu","Ami","Gpe"),], aes(f.int, eggC, fill=spp), shape=21, stroke=0.1, size=3.5)+#
geom_text(data=params, aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text(data=params[params$AB=="R",], aes(fec1cm, eggC, label=AB), size=1.8)+#
#geom_text_repel(data=params, aes(f.int+0, eggC+0,label=spp), size=2, force=0.1)+#
geom_segment(aes(x=335, xend=350, y=47, yend=43),col="grey",#colsC[3], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=405, xend=435, y=41.5, yend=40),col="grey",#colsC[2], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=700, xend=800, y=38, yend=36),col="grey",#colsC[1], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=900, xend=1000, y=28, yend=33),col="grey",#colsC[4], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=920, xend=1020, y=27, yend=27.5),col="grey",#colsC[5], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
geom_segment(aes(x=880, xend=930, y=10, yend=10.5),col="grey",#colsC[6], #
arrow=arrow(type="closed", length=unit(0.8,"mm")), size=0.2)+#
ggtitle("Reproductive investments")+#
scale_x_log10(breaks=c(400, 600, 900, 1200))+#
geom_text(data=NULL, aes(330, 10, label='C = Common'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 8, label='R = Rare'), size=1.8, hjust=0)+#
geom_text(data=NULL, aes(330, 6, label='D = Declined'), size=1.8, hjust=0)+#
#ylim(3,55)+#
labs(x=expression(Egg~number~(eggs~cm^-2)), y= "Egg mass (g of Carbon)")+#
scale_fill_manual(values=cols)+guides(fill="none", col="none")+#
scale_colour_manual(values=colsC)+#
theme_classic()+#
theme(plot.title=element_text(size=8, hjust=0.5, face="bold"), axis.title=element_text(size=10))#
reproplot
GTplot<- ggplot()+geom_hline(yintercept=1, size=0.1)+#
geom_segment(data=params, aes(x=GT, xend=GT, y=lam.sd1, yend=lam.sd2), size=0.2)+#
#geom_segment(data=arrows3, aes(x=GT.R2, xend=GT.C2, y=Rare2, yend=Common2), col="grey", arrow=arrow(type="closed", length=unit(0.8,"mm")))+#
geom_point(data=params,aes(GT, lam.mn, fill=spp), shape=21, stroke=0.2, size=3)+#
geom_text(data=params, aes(GT, lam.mn, label=AB), size=1.8)+#
#scale_x_log10()+#
#scale_y_log10()+#
scale_fill_manual(values=cols)+guides(fill="none")+#
theme_classic()+#
ggtitle("Generation times")+#
labs(x="Generation Time (years)", y=expression(Fitness~(lambda)))+theme(plot.title=element_text(size=8, hjust=0.5, face="bold"), axis.title=element_text(size=10))
GTplot
dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="lam.mn")#
arrows3$GT.C <- dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="GT")$Common#
arrows3$GT.R <- dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="GT")$Rare#
arrows3$Common2 <- ifelse(arrows3$GT.R > 20, arrows3$Common * 0.98, arrows3$Common * 0.95)#
arrows3$Rare2 <- ifelse(arrows3$GT.R > 20, arrows3$Rare * 1.02, arrows3$Rare * 1.1)#
arrows3$GT.C2 <- ifelse(arrows3$GT.C > 20, arrows3$GT.C *1.1, arrows3$GT.C * 1)#
arrows3$GT.R2 <- ifelse(arrows3$GT.R > 20, arrows3$GT.R *0.9, arrows3$GT.R * 1)
source("figs/fig.4.R")#
fig.4
diffs <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	diffs <- rbind(diffs, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	}#
head(diffs)
params_orig <- params # CAREFUL set original #
#source("R/7_morphology.R")#
p.morph <- read.csv("data/params_morph.csv") #skip 7#
head(p.morph)#
#
pars <- c("m.int", "m.slp","f.int","f.slp","g.int","g.slp","g.var", "s.int", "s.slp", "s.slp.2")#
#
p.types <- data.frame(pars, type = c("reproduction","reproduction","reproduction","reproduction","growth","growth","growth", "survival","survival","survival"))#
#
types <- unique(p.types$type)#
#
test <- NULL#
for (i in types) {#
params <- params_orig #
params[,pars] <- p.morph[match(params$morphology, p.morph$morph), pars]#
pars2 <- p.types$pars[p.types$type==i]#
params[,pars2] <- params_orig[match(params$spp, params_orig$spp), pars2]#
for (sp in spp) {#
	#sp <- "Ahy"#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
test<-rbind(test, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="normal"))#
 } #
}#
#
diffs <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	diffs <- rbind(diffs, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	}#
head(diffs)
sums <- aggregate(d~morph+rec, diffs, sum)#
sums$lamdiff <- comp$lamdiff[match(sums$morph, comp$morp)]#
sums # compare d with the real lamdiff
ggplot()+#
geom_bar(data=diffs, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+geom_vline(xintercept=0)
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")
########################################
# WITHIN VS BETWEEN#
########################################
#
Gen5 <- subset(proj.size, gen==5 )#
params$Gen5<-Gen5$NperSize[match(params$spp, Gen5$spp)]#
#
Gen10 <- subset(proj.size, gen==10)#
params$Gen10<-Gen10$NperSize[match(params$spp, Gen10$spp)]#
#
dems <- c("lam.est", "Gen5",  "Gen10", "abundance_05", "rec")#
#
vars <- NULL#
for (t in c(traits, "eggC",dems)){#
	#t <- "Gen15"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
summary(mod)#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}
########################################
# RECRUITMENT SENSITIVITY II#
#######################################	#
# lambda at different rec/recsize combinations#
rec.x <- 10^(seq(-6,-2,0.5))#
recsize.x <- seq(min(params$rec.size)-0.1, max(params$rec.size)+0.1,0.1)#
3#
store3 <- list()#
for (sp in spp) {#
	temp<-matrix(NA,length(rec.x), length(recsize.x))#
	for (i in 1:length(rec.x)){#
		rec <- rec.x[i]#
		for(j in 1:length(recsize.x)){#
			rec.size <- recsize.x[j]#
		h <- mesh()$h#
		y <- mesh()$y	#
   mod <- bigmatrix()#
   temp[i,j] <- mod$lam#
  }#
 } #
 store3[[sp]] <- temp  #
  }#
#
minlam <- min(log(do.call("rbind", store3)))#
maxlam <- max(log(do.call("rbind", store3)))#
#
par(mfrow=c(3,4))#
sp.conts <- NULL#
for(sp in spp){#
	#sp<-"Ahy"#
  image(log10(rec.x), recsize.x, log(store3[[sp]]), main=sp, zlim=c(minlam, maxlam))#
  abline(h=params[params$spp==sp, "rec.size"], lty=2)#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0)#
  }#
   contour(log10(rec.x), recsize.x, log(store3[[spp[1]]]), levels=0, col=cols[1], lwd=3)#
 for(i in 1:length(spp)){#
 	sp <- spp[i]#
  contour(log10(rec.x), recsize.x, log(store3[[sp]]), add=TRUE, levels=0, col=cols[i], lwd=3)#
  conts <- melt(store3[[spp[i]]])#
  sp.conts <- rbind(sp.conts, cbind(conts,rec = rep(rec.x, length(recsize.x)), recsize = rep(recsize.x, each=length(rec.x)), spp=sp))#
  }#
head(sp.conts)#
#
##### PLOT#
#
params2$rec <- params$rec[match(params2$spp, params$spp)]#
params2$rec.size <- params$rec.size[match(params2$spp, params$spp)]#
#
comp$rec <- params2$rec[match(comp$morph, params2$morph)] #
comp$rec.size <- params2$rec.size[match(comp$morph, params2$morph)] #
comp$rec.size.cm <- sqrt(((10^comp$rec.size)*10000)/pi)*2
# difference in lambda across rec/recsize combinations#
pairs3 <- NULL#
for(m in comp$morph){#
	#m <- "tabular"#
	spC <- comp$Common[comp$morph==m]#
	spR <- comp$Rare[comp$morph==m]#
	logdiff <- log(store3[[spC]]) - log(store3[[spR]])#
	temp <- melt(logdiff)#
	temp$rec <- rep(rec.x, length(recsize.x))#
	temp$recsize <- rep(recsize.x, each=length(rec.x))#
    pairs3 <- rbind(pairs3, cbind(temp, morph=m))#
}#
head(pairs3)#
#
pairs3$lam2 <- ifelse(pairs3$value < 0, NA, pairs3$value)#
#
ggplot()+#
geom_raster(data=pairs3, aes(x=rec, y=recsize, fill=lam2))+#
#geom_point(data=params2, aes(rec.const, rec.size.const ), col="white", shape=3, stroke=1, size=0.3)+#
geom_point(data=params2, aes(rec, rec.size ), col="white", shape=3)+#
	scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(expand=c(0,0))+#
	scale_fill_distiller(palette="Spectral")+#
	facet_wrap(~morph, scales="free")+#
	labs(x="rec rate", y="rec size")+#
	theme(strip.background=element_blank())
lsize <- 0.5#
########################################
# CONTOURS#
########################################
#
scapes <- pairs3#
head(pairs3)#
scapes$posi <- ifelse(scapes$X1 > 0, "common > rare", "rare > common")#
scapes$morph <- factor(scapes$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))#
#
sp.points <- params2[,c("morph","rec.size", "spp")]#
sp.points$rec <- params$rec[match(sp.points$morph, params2$morph)]#
sp.points$morph <- factor(sp.points$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))#
#
blueish <- colsC[2]#
#
legend <- ggplot()+#
geom_point(data=scapes, aes(x=id, y=sqrt(((10^time)*10000)), fill=posi), shape=22)+#
theme_classic()+#
scale_fill_manual(values=c(blueish, "white"))+#
guides(col="none",  fill=guide_legend(direction="vertical", title=expression(Delta~log*(lambda)), title.hjust=0.5, title.vjust=-1, label.hjust=100))+#
theme(legend.text=element_text(size=6),#
	#legend.title=element_text(size=6, face="bold"),#
	legend.title=element_blank(),#
	plot.margin=unit(c(1, 4, 1, 1), "cm"),#
	legend.key.height=unit(1,"mm"),#
	legend.position=c(0.9,0 ),#
	legend.background=element_blank(),#
	legend.key.width=unit(5,"mm"))#
	sp.points$eggC <- params$eggC[match(sp.points$spp, params$spp)]#
	sp.points$recEn <- sp.points$rec * (10^(scale(sp.points$eggC)/max(abs(scale(sp.points$eggC))))) #
sp.points$rec.const <- params$rec.const[match(sp.points$spp, params$spp)]#
library("metR")#
#
sp.points<-aggregate(.~morph, subset(sp.points, select=-spp), mean)#
#
fig.s5 <- ggplot(data=scapes, aes(x=rec, y=sqrt(((10^recsize)*10000)), z=value))+#
geom_contour_filled(aes(fill=morph, alpha=..level..),breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8), col="grey", size=lsize)+#
geom_contour(aes(col=morph), breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8,1.6),size=lsize)+#
geom_text_contour(breaks = c(0,0.05, 0.1, 0.2, 0.4), size=1.5, skip=0, stroke=0.15)+#
#geom_segment(data=sp.points, inherit.aes=F, aes(x=5*10^-4, xend=rec, y=5, yend=sqrt(((10^rec.size)*10000))), col="black", arrow=arrow(length=unit(1, "mm")))+#
#geom_point(data=sp.points, inherit.aes=F, aes(x=5*10^-4,y=5), shape=21, col="black", size=0.5)+#
geom_point(data=sp.points, inherit.aes=F, aes(x=rec,y=sqrt(((10^rec.size)*10000))), shape=3, stroke=1, size=0.25, col="black")+#
facet_wrap(~morph, nrow=2)+#
labs(x="Probability of larval settlement", y="Recruit diameter")+#
scale_fill_manual(values=colsC)+#
scale_colour_manual(values=colsC)+#
guides(fill="none", alpha="none", col="none")+#
ggtitle(expression(bold(Delta*fitness~landscapes)))+#
	scale_y_log10(expand=c(0,0))+#
	#scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(breaks=c(10^-5, 10^-4,10^-3), labels=c(#
		expression(10^-5),#
		expression(10^-4),#
		expression(10^-3)), expand=c(0,0))+#
	theme_bw()+#
	theme(strip.background=element_blank(),  #
	strip.text=element_text(size=7, vjust=-2),#
	panel.background=element_rect(fill="white"),#
	panel.grid.major=element_blank(),#
	panel.grid.minor=element_blank(),#
	plot.title=element_text(size=8, hjust=0.5, vjust=-7, face="bold"),#
	axis.text.x=element_text(size=5), #
	axis.text.y=element_text(size=5, angle=90, hjust=0.5), #
	axis.title=element_text(size=7))#+coord_flip()#
fig.s5
fig.s5
source("figs/SUPPLEMENT/supp.fig6.R")
lsize <- 0.5#
########################################
# CONTOURS#
########################################
#
scapes <- pairs3#
head(pairs3)#
scapes$posi <- ifelse(scapes$X1 > 0, "common > rare", "rare > common")#
scapes$morph <- factor(scapes$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))#
#
sp.points <- params2[,c("morph","rec.size", "spp")]#
sp.points$rec <- params$rec[match(sp.points$morph, params2$morph)]#
sp.points$morph <- factor(sp.points$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))
blueish <- colsC[2]#
#
legend <- ggplot()+#
geom_point(data=scapes, aes(x=id, y=sqrt(((10^time)*10000)), fill=posi), shape=22)+#
theme_classic()+#
scale_fill_manual(values=c(blueish, "white"))+#
guides(col="none",  fill=guide_legend(direction="vertical", title=expression(Delta~log*(lambda)), title.hjust=0.5, title.vjust=-1, label.hjust=100))+#
theme(legend.text=element_text(size=6),#
	#legend.title=element_text(size=6, face="bold"),#
	legend.title=element_blank(),#
	plot.margin=unit(c(1, 4, 1, 1), "cm"),#
	legend.key.height=unit(1,"mm"),#
	legend.position=c(0.9,0 ),#
	legend.background=element_blank(),#
	legend.key.width=unit(5,"mm"))
sp.points$eggC <- params$eggC[match(sp.points$spp, params$spp)]#
	sp.points$recEn <- sp.points$rec * (10^(scale(sp.points$eggC)/max(abs(scale(sp.points$eggC))))) #
sp.points$rec.const <- params$rec.const[match(sp.points$spp, params$spp)]
library("metR")
sp.points<-aggregate(.~morph, subset(sp.points, select=-spp), mean)
fig.s5 <- ggplot(data=scapes, aes(x=rec, y=sqrt(((10^recsize)*10000)), z=value))+#
geom_contour_filled(aes(fill=morph, alpha=..level..),breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8), col="grey", size=lsize)+#
geom_contour(aes(col=morph), breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8,1.6),size=lsize)+#
geom_text_contour(breaks = c(0,0.05, 0.1, 0.2, 0.4), size=1.5, skip=0, stroke=0.15)+#
geom_point(data=sp.points, inherit.aes=F, aes(x=rec,y=sqrt(((10^rec.size)*10000))), shape=3, stroke=1, size=0.25, col="black")+#
facet_wrap(~morph, nrow=2)+#
labs(x="Probability of larval settlement", y="Recruit diameter")+#
scale_fill_manual(values=colsC)+#
scale_colour_manual(values=colsC)+#
guides(fill="none", alpha="none", col="none")+#
ggtitle(expression(bold(Delta*fitness~landscapes)))+#
	scale_y_log10(expand=c(0,0))+#
	#scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(breaks=c(10^-5, 10^-4,10^-3), labels=c(#
		expression(10^-5),#
		expression(10^-4),#
		expression(10^-3)), expand=c(0,0))+#
	theme_bw()+#
	theme(strip.background=element_blank(),  #
	strip.text=element_text(size=7, vjust=-2),#
	panel.background=element_rect(fill="white"),#
	panel.grid.major=element_blank(),#
	panel.grid.minor=element_blank(),#
	plot.title=element_text(size=8, hjust=0.5, vjust=-7, face="bold"),#
	axis.text.x=element_text(size=5), #
	axis.text.y=element_text(size=5, angle=90, hjust=0.5), #
	axis.title=element_text(size=7))#+coord_flip()#
fig.s5
source("figs/SUPPLEMENT/supp.fig6.R")
lsize <- 0.5#
########################################
# CONTOURS#
########################################
#
scapes <- pairs3#
head(pairs3)#
scapes$posi <- ifelse(scapes$X1 > 0, "common > rare", "rare > common")#
scapes$morph <- factor(scapes$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))#
#
sp.points <- params2[,c("morph","rec.size", "spp")]#
sp.points$rec <- params$rec[match(sp.points$morph, params2$morph)]#
sp.points$morph <- factor(sp.points$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))
scapes <- pairs3#
head(pairs3)#
#scapes$posi <- ifelse(scapes$X1 > 0, "common > rare", "rare > common")#
scapes$morph <- factor(scapes$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))#
#
sp.points <- params2[,c("morph","rec.size", "spp")]#
sp.points$rec <- params$rec[match(sp.points$morph, params2$morph)]#
sp.points$morph <- factor(sp.points$morph, levels=rev(c("tabular", "staghorn", "corymbose","corymbose_2","digitate", "massive")))#
#
blueish <- colsC[2]#
#
legend <- ggplot()+#
geom_point(data=scapes, aes(x=id, y=sqrt(((10^time)*10000)), fill=posi), shape=22)+#
theme_classic()+#
scale_fill_manual(values=c(blueish, "white"))+#
guides(col="none",  fill=guide_legend(direction="vertical", title=expression(Delta~log*(lambda)), title.hjust=0.5, title.vjust=-1, label.hjust=100))+#
theme(legend.text=element_text(size=6),#
	#legend.title=element_text(size=6, face="bold"),#
	legend.title=element_blank(),#
	plot.margin=unit(c(1, 4, 1, 1), "cm"),#
	legend.key.height=unit(1,"mm"),#
	legend.position=c(0.9,0 ),#
	legend.background=element_blank(),#
	legend.key.width=unit(5,"mm"))#
	sp.points$eggC <- params$eggC[match(sp.points$spp, params$spp)]#
	sp.points$recEn <- sp.points$rec * (10^(scale(sp.points$eggC)/max(abs(scale(sp.points$eggC))))) #
sp.points$rec.const <- params$rec.const[match(sp.points$spp, params$spp)]#
library("metR")#
#
sp.points<-aggregate(.~morph, subset(sp.points, select=-spp), mean)#
#
fig.s5 <- ggplot(data=scapes, aes(x=rec, y=sqrt(((10^recsize)*10000)), z=value))+#
geom_contour_filled(aes(fill=morph, alpha=..level..),breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8), col="grey", size=lsize)+#
geom_contour(aes(col=morph), breaks=c(0,0.05,0.1, 0.2, 0.4, 0.8,1.6),size=lsize)+#
geom_text_contour(breaks = c(0,0.05, 0.1, 0.2, 0.4), size=1.5, skip=0, stroke=0.15)+#
geom_point(data=sp.points, inherit.aes=F, aes(x=rec,y=sqrt(((10^rec.size)*10000))), shape=3, stroke=1, size=0.25, col="black")+#
facet_wrap(~morph, nrow=2)+#
labs(x="Probability of larval settlement", y="Recruit diameter")+#
scale_fill_manual(values=colsC)+#
scale_colour_manual(values=colsC)+#
guides(fill="none", alpha="none", col="none")+#
ggtitle(expression(bold(Delta*fitness~landscapes)))+#
	scale_y_log10(expand=c(0,0))+#
	#scale_y_continuous(expand=c(0,0))+#
	scale_x_log10(breaks=c(10^-5, 10^-4,10^-3), labels=c(#
		expression(10^-5),#
		expression(10^-4),#
		expression(10^-3)), expand=c(0,0))+#
	theme_bw()+#
	theme(strip.background=element_blank(),  #
	strip.text=element_text(size=7, vjust=-2),#
	panel.background=element_rect(fill="white"),#
	panel.grid.major=element_blank(),#
	panel.grid.minor=element_blank(),#
	plot.title=element_text(size=8, hjust=0.5, vjust=-7, face="bold"),#
	axis.text.x=element_text(size=5), #
	axis.text.y=element_text(size=5, angle=90, hjust=0.5), #
	axis.title=element_text(size=7))#+coord_flip()#
fig.s5
source("figs/SUPPLEMENT/supp.fig6.R")
source("figs/SUPPLEMENT/supp.fig6.R")
source("R/8_sensitivity.R")
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}
########################################
# LOAD DEMOGRAPHIC DATA
source("R/1_data_prep.R")
source("R/2_params.R")
source("R/3_traits.R")
write.csv(params, "data/params.csv")
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2 <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+geom_line(aes(col=spp))+scale_x_log10()+scale_colour_manual(values=cols)+coord_cartesian(ylim=c(0.6,2))+guides(col="none")
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
agg.rec <- aggregate(log10(rec.tran)~family, params, mean)#
params$rec <- 10^agg.rec[match(params$family, agg.rec$family),2]#
#
lam.est <- NULL#
R0 <- NULL#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam))#
R0 <- rbind(R0, data.frame(sp, R0=bigmatrix()$R0))#
}#
#
params$lam.est <- lam.est$lam#
params$R0 <- R0$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]
source("figs/supp/supp.fig2.R")
aggregate(r.int~morphology, params, mean)
params$r.int3  <- merge(params, agg)
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2 <- agg$r.int[match(params$morphology, agg$morphology)]#
params$r.int3  <- merge(params, agg)
agg
merge(agg, params)
merge(params, agg)
merge(params, agg, by="morphology")
params
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2 <- agg$r.int[match(params$morphology, agg$morphology)]#
params  <- merge(params, agg, by="morphology")
params
params$r.int2==params$r.int.y
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))+guides(col="none")
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params  <- merge(params, agg, by="morphology")#
params$rec.size <- log10(pi*(params$r.int.y*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))
aggregate(log10(rec.tran)~family, params, mean)
source("R/5_recruitment.R")#
agg <- aggregate(log10(rec.tran)~family, params, mean)
aggregate(log10(rec.tran)~family, params, mean)
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam), R0=bigmatrix()$R0))#
 }
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }
lam.est
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
lam.est
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(spp=sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
lam.est
merge(params, lam.est, by="spp")
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params  <- merge(params, agg, by="morphology")#
params$rec.size <- log10(pi*(params$r.int.y*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))#
#
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(spp=sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
lam.est#
#
params <- merge(params, lam.est, by="spp")
params
?merge
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params  <- merge(params, agg, by="morphology")#
params$rec.size <- log10(pi*(params$r.int.y*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))#
#
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(spp=sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
#
params <- merge(params, lam.est, by="spp", all=F)
params
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params  <- merge(params, agg, by="morphology")#
params$rec.size <- log10(pi*(params$r.int.y*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))#
#
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(spp=sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
#
params$lam.est <- lam.est$lam.est#
params$RO <- lam.est$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]
lam.est$R0
params$lam.est
params$lam.est <- lam.est$lam.est#
params$RO <- lam.est$R0#
params$GT <- log(params$R0)/log(params$lam.est)
params$lam.est
params
params$lam.est <- lam.est$lam.est#
params$R0 <- lam.est$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]
source("figs/SUPPLEMENT/supp.fig2.R")
##### FIGURE S2#
#
head(abun.BT)#
#
FigS2A<-plot_grid(#
ggplot(abun.BT, aes(reorder(spp, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
guides(fill="none")+#
labs(y=expression(Colonies~per~m^2))+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
labs(title="N colonies (27 x BTs)",subtitle="2005")+#
theme(axis.title.x=element_blank(), #
axis.text.x=element_blank(),#
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
plot.subtitle=element_text(size=9, hjust=0.5),strip.background=element_blank())#
,#
ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(title="N colonies (6 x LITs)",y="Colonies per m")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank()),#
ncol=1, rel_heights=c(1,3))#
FigS2A
figS2B <- ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), cover, fill=spp))+#
#geom_bar(data=tri2.av, aes(reorder(species, -abun05), N/10, fill=species),stat="identity")+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(y="% cover")+#
ggtitle("Coral Cover")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank())#
figS2B
########################################
# SADs#
########################################
#
sad <- read.csv("data/raw_data/abundance/BT_counts_2005.csv")#
sad <- aggregate(Abundance~Species, sad, sum)#
#
sad$Species[sad$Species=="Acropora fat dig"] <- "Acropora cf. digitifera"#
sad$spp <- params$spp[match(sad$Species, params$species)]#
sad$spp <- as.character(sad$spp)#
sad$spp[is.na(sad$spp)]<-"Other"#
cols2 <- c(cols, "Other"="Grey")#
sad <- sad[order(sad$Abundance),]#
sad$rank <- c(nrow(sad):1)#
sad$morphology<-params$morph[match(sad$spp, params$spp)]
sadplot <- plot_grid(#
ggplot(sad[!is.na(sad$morphology),], aes(y=morphology, x=rank))+#
geom_line(aes(col=morphology), arrow=arrow(length=unit(1,"mm")))+#
ggtitle("Abundance distribution")+#
xlim(c(0,70))+#
geom_text(data=sad[sad$spp %in% c("Ahy","Adi","Ana","Ain","Gre"),], aes(label=morphology), size=1.8, hjust=1)+#
scale_colour_manual(values=colsC)+#
theme_void()+#
theme(plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
guides(col="none"),#
ggplot(subset(sad, Abundance>50), aes(rank, Abundance/2700))+geom_segment(aes(rank, xend=rank, y=0, yend=Abundance/2700, col=spp), size=1)+#
scale_colour_manual(values=cols2)+#
labs(x="Rank", y="Colony density (2005)")+#
geom_text_repel(data=sad[!sad$spp=="Other",], aes(rank, y=(Abundance/2700)+0.2, label=spp), angle=45, size=2, force=0.001, hjust=0)+#
xlim(c(0,70))+#
theme_classic()+#
guides(colour="none"),#
ncol=1, align="v", axis="lr", rel_heights=c(0.3,1))#
#
sadplot
diffs$diff2 <- ((diffs$X2014+0.05)/(diffs$X2011+0.05))^(1/3)#
fig.s2D <- ggplot(diffs, aes(reorder(spp, -lam), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")#
#
fig.s2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E
FigS2new <- plot_grid(fig.s2D, ggplot()+theme_void(), fig.s2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new
fig.s2 <- plot_grid(triplot, plot_grid(sadplot, plot_grid(covplot,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
fig.s2E
lam.est
params$spp
params
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
#library("psych")#
#pairs.panels(log(params[,traits]), scale=T, cex.cor=2)#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1#
# ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2  <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2  <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)
params
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(spp=sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
#
params$lam.est <- lam.est$lam.est#
params$R0 <- lam.est$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]
source("figs/SUPPLEMENT/supp.fig2.R")
FigS2new <- plot_grid(fig.s2D, ggplot()+theme_void(), fig.s2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new
fig.s2D
figS2B
sadplot
fig.s2D <- ggplot(diffs, aes(reorder(spp, -lam), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")
fig.s2D
fig.s2D <- ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")
fig.s2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E#
#
FigS2new <- plot_grid(fig.s2D, ggplot()+theme_void(), fig.s2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new
FigS2new <- plot_grid(fig.s2D, ggplot()+theme_void(), fig.s2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new
fig.s2 <- plot_grid(triplot, plot_grid(sadplot, plot_grid(covplot,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
fig.s2D
FigS2A
FigS2new <- plot_grid(fig.s2D, ggplot()+theme_void(), fig.s2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new
fig.s2D
ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")
diffs
diffs$diff2 <- ((diffs$X2014+0.05)/(diffs$X2011+0.05))^(1/3)#
diffs$lam.est <- params$lam.est[match(diffs$species, params$species)]#
fig.s2D <- ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")
fig.s2D
fig.s2D <- ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")#
#
fig.s2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E#
#
FigS2new <- plot_grid(fig.s2D, ggplot()+theme_void(), fig.s2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new#
#
fig.s2 <- plot_grid(fig2A, plot_grid(sadplot, plot_grid(fig.S2B,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
FigS2new <- plot_grid(figS2D, ggplot()+theme_void(), figS2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new#
#
fig.s2 <- plot_grid(figS2A, plot_grid(sadplot, plot_grid(figS2B,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
figS2A
FigS2A
FigS2B
head(abun.BT)#
#
figS2A<-plot_grid(#
ggplot(abun.BT, aes(reorder(spp, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
guides(fill="none")+#
labs(y=expression(Colonies~per~m^2))+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
labs(title="N colonies (27 x BTs)",subtitle="2005")+#
theme(axis.title.x=element_blank(), #
axis.text.x=element_blank(),#
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
plot.subtitle=element_text(size=9, hjust=0.5),strip.background=element_blank())#
,#
ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(title="N colonies (6 x LITs)",y="Colonies per m")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank()),#
ncol=1, rel_heights=c(1,3))#
figS2A#
figS2B <- ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), cover, fill=spp))+#
#geom_bar(data=tri2.av, aes(reorder(species, -abun05), N/10, fill=species),stat="identity")+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(y="% cover")+#
ggtitle("Coral Cover")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank())#
figS2B#
#
########################################
# SADs#
########################################
#
sad <- read.csv("data/raw_data/abundance/BT_counts_2005.csv")#
sad <- aggregate(Abundance~Species, sad, sum)#
#
sad$Species[sad$Species=="Acropora fat dig"] <- "Acropora cf. digitifera"#
sad$spp <- params$spp[match(sad$Species, params$species)]#
sad$spp <- as.character(sad$spp)#
sad$spp[is.na(sad$spp)]<-"Other"#
cols2 <- c(cols, "Other"="Grey")#
sad <- sad[order(sad$Abundance),]#
sad$rank <- c(nrow(sad):1)#
sad$morphology<-params$morph[match(sad$spp, params$spp)]#
#
sadplot <- plot_grid(#
ggplot(sad[!is.na(sad$morphology),], aes(y=morphology, x=rank))+#
geom_line(aes(col=morphology), arrow=arrow(length=unit(1,"mm")))+#
ggtitle("Abundance distribution")+#
xlim(c(0,70))+#
geom_text(data=sad[sad$spp %in% c("Ahy","Adi","Ana","Ain","Gre"),], aes(label=morphology), size=1.8, hjust=1)+#
scale_colour_manual(values=colsC)+#
theme_void()+#
theme(plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
guides(col="none"),#
ggplot(subset(sad, Abundance>50), aes(rank, Abundance/2700))+geom_segment(aes(rank, xend=rank, y=0, yend=Abundance/2700, col=spp), size=1)+#
scale_colour_manual(values=cols2)+#
labs(x="Rank", y="Colony density (2005)")+#
geom_text_repel(data=sad[!sad$spp=="Other",], aes(rank, y=(Abundance/2700)+0.2, label=spp), angle=45, size=2, force=0.001, hjust=0)+#
xlim(c(0,70))+#
theme_classic()+#
guides(colour="none"),#
ncol=1, align="v", axis="lr", rel_heights=c(0.3,1))#
sadplot#
diffs$diff2 <- ((diffs$X2014+0.05)/(diffs$X2011+0.05))^(1/3)#
diffs$lam.est <- params$lam.est[match(diffs$species, params$species)]#
figS2D <- ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")#
#
figS2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E#
#
FigS2new <- plot_grid(figS2D, ggplot()+theme_void(), figS2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new#
#
fig.s2 <- plot_grid(figS2A, plot_grid(sadplot, plot_grid(figS2B,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
params$species
diffs$species
diffs
diffs$spp <- params$spp[match(diffs$species, params$species)]
diffs$diff2 <- ((diffs$X2014+0.05)/(diffs$X2011+0.05))^(1/3)#
diffs$spp <- params$spp[match(diffs$species, params$species)]#
diffs$lam.est <- params$lam.est[match(diffs$spp, params$spp)]#
figS2D <- ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")#
#
figS2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E#
#
FigS2new <- plot_grid(figS2D, ggplot()+theme_void(), figS2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new#
#
fig.s2 <- plot_grid(figS2A, plot_grid(sadplot, plot_grid(figS2B,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
source("figs/SUPPLEMENT/supp.fig3.R") # plot IPMs
# -------- plot#
#pdf("figs/p1_maturity.pdf" )#
#
p1<-ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp))+#
  scale_colour_manual(values=cols, labels=labs)+#
  theme_classic()
source("R/1_data_prep.R")
source("R/2_params.R")
# -------- plot#
#pdf("figs/p1_maturity.pdf" )#
#
p1<-ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp))+#
  scale_colour_manual(values=cols, labels=labs)+#
  theme_classic()#
#
#show(p1)#
#dev.off()#
#
# -------- plot#
#pdf("figs/p2_fecundity.pdf")#
#
p2<-ggplot()+ #
  geom_point(data=fec[fec$reproductive==1, ], #
    aes(area, fecundity), #
      shape=21, col="grey")+#
  geom_line(data=f.pred, aes(area, pred, col=spp))+#
     #geom_line(data=f.pred2, aes(area, pred, col=spp))+#
  scale_y_log10()+#
  #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
p2#
#show(p2)#
#dev.off()#
#pdf("figs/p3_growth.pdf")#
#
p3<-ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp))+#
  scale_colour_manual(values=cols)+#
  #facet_wrap(~spp)+#
 theme_classic()#
#
#show(p3)#
#dev.off() #
#pdf("figs/p4_survival.pdf")#
#
p4<-ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp))+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)+#
 theme_classic()#
p4#
#show(p4)#
#dev.off() #
#pdf("figs/p5_maxgrowth.pdf", )#
#
p5<-ggplot()+#
 geom_point(data=gdat, aes(x=area, y=g_radius), col="grey", shape=21)+#
     geom_line(data=r.pred, aes(x=area, y=pred, col=spp))+#
   scale_colour_manual(values=c(cols))+#
   #+facet_wrap(~spp)+#
    theme_classic()#
#
#show(p5)#
#dev.off() #
#pdf("figs/p6_partialmort.pdf")#
#
p6<-ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=logit(p_stasis), group=spp), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred, col=spp))+#
     scale_colour_manual(values=c(cols))+#
     #facet_wrap(~spp)+#
     theme_classic()#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=inv.logit(pm_logit)), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis, group=spp, col=spp), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=inv.logit(pred), col=spp))+#
     scale_colour_manual(values=c(cols))+#
     facet_wrap(~spp)+#
     theme_classic()#
#
#show(p6)#
#dev.off() #
########################################
# PLOT PARAMETERS#
########################################
#
partheme <- theme(axis.text=element_text(size=7), axis.title=element_text(size=8),#
plot.title=element_text(size=8, hjust=0.5, face="bold"), legend.title=element_blank(), legend.text=element_text(face="italic"))#
#
xlab <- expression(log[10]*(area[~t]))
fig.s3 <- plot_grid(plot_grid(#
p1+guides(col="none")+partheme+ggtitle("reproductive maturity")+#
labs(x=xlab,y="probability of maturity"), #
p2+guides(col="none")+partheme+ggtitle("fecundity")+#
labs(x=xlab,y=expression("eggs per colony")),#
p3+guides(col="none")+partheme+ggtitle("growth rate")+#
labs(x=xlab, y=expression(log[10]*(area[~t~+1]))),  #
p4+guides(col="none")+partheme+ggtitle("survival rate")+#
labs(x=xlab, y="annual survival rate"), #
p5+guides(col="none")+partheme+ggtitle("maximum growth")+#
labs(x=xlab, y=expression(log[10]*(radial~growth))),#
p6+guides(col="none")+partheme+ggtitle("partial mortality")+#
labs(x=xlab, y="logit(proportion area lost)"), #
nrow=2, align="hv", labels="AUTO", label_size=8),#
get_legend(p1+partheme), rel_widths=c(1,0.2))#
fig.s3
# source("R/bootstap.R")#
boot <- read.csv("data/lam.range.csv")#
boot$GT <- log(boot$r)/log(boot$lam)#
#
ggplot(boot, aes(GT, log(lam)))+#
geom_hline(yintercept=0)+#
geom_point(shape=21, aes(col=spp), alpha=0.2)+#
coord_cartesian(xlim=c(min(boot$GT),100))+#
scale_colour_manual(values=cols)+scale_x_log10()+#
geom_point(data=params, aes(GT, log(lam.est)))+#
guides(col="none")+#
theme_classic()
params$lam.est <- lam.est$lam.est#
params$R0 <- lam.est$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]#
#
# source("figs/SUPPLEMENT/supp.fig2.R") # abundance#
# source("figs/SUPPLEMENT/supp.fig3.R") # plot IPMs#
#
########################################
# BOOTSTRAP LAM#
#######################################	#
#
# source("R/bootstap.R")#
boot <- read.csv("data/lam.range.csv")#
boot$GT <- log(boot$r)/log(boot$lam)#
#
ggplot(boot, aes(GT, log(lam)))+#
geom_hline(yintercept=0)+#
geom_point(shape=21, aes(col=spp), alpha=0.2)+#
coord_cartesian(xlim=c(min(boot$GT),100))+#
scale_colour_manual(values=cols)+scale_x_log10()+#
geom_point(data=params, aes(GT, log(lam.est)))+#
guides(col="none")+#
theme_classic()
########################################
# FIG 2#
#######################################	#
source("figs/fig.2.R") #
fig.2
source("figs/fig.2.R") #
fig.2
source("figs/SUPPLEMENT/supp.fig5.R")
source("figs/SUPPLEMENT/supp.fig5.R")
library("psych")
pairs.panels(log(params[,traits]), scale=T, cex.cor=2)
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1 # ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2  <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(spp=sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
#
params$lam.est <- lam.est$lam.est#
params$R0 <- lam.est$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]
########################################
# BOOTSTRAP LAM#
#######################################	#
#
# source("R/bootstap.R")#
boot <- read.csv("data/lam.range.csv")#
boot$GT <- log(boot$r)/log(boot$lam)#
#
ggplot(boot, aes(GT, log(lam)))+#
geom_hline(yintercept=0)+#
geom_point(shape=21, aes(col=spp), alpha=0.2)+#
coord_cartesian(xlim=c(min(boot$GT),100))+#
scale_colour_manual(values=cols)+scale_x_log10()+#
geom_point(data=params, aes(GT, log(lam.est)))+#
guides(col="none")+#
theme_classic()#
#
########################################
# FIG 2#
#######################################	#
source("figs/fig.2.R") #
fig.2 #ggsave("figs/fig.2.jpeg", fig.2, width=15, height=12.7, units="cm", dpi = 600)
source("figs/fig.2.R") #
fig.2
source("figs/SUPPLEMENT/supp.figS5.R")
source("figs/SUPPLEMENT/supp.fig5.R")
source("figs/fig.2.R") #
fig.2
source("figs/SUPPLEMENT/supp.fig5.R")#
#
examples <- #
plot_grid(NULL,plot_grid(NULL,#
plots[["Ahy"]]+ggtitle("Ahy")+theme(legend.position="right", plot.title=element_blank(),legend.box="vertical",legend.spacing.y=unit(0.5,"mm"), legend.margin=margin(0,0,0,-7)),#
plots[["Ahu"]]+ggtitle("Adi")+theme(legend.position="right", plot.title=element_blank(),legend.box="vertical", legend.spacing.y=unit(0.5,"mm"), legend.margin=margin(0,0,0,-7)),#
nrow=1, rel_widths=c(0.2,1,1))+#
draw_label(expression(size[" "*t]~(m^2)), 0.6, 0.14, size=8, hjust=1)+#
draw_label(expression(size[" "*t+1]~(m^2)), 0.06, 0.65, size=8, angle=90)+#
draw_label(expression(bold(Example~IPMs~(before~bolditalic(P[rec])))), 0.55, 1.05, fontface="bold", size=8), nrow=2, rel_heights=c(0.15,1))#
examples
params$lam.est3 <- aggregate(lam~spp, boot, median)$lam#
params$log.lam3 <- log(params$lam.est)#
arrows2 <- dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="log.lam3")#
arrows2$Common2 <- arrows2$Common-0.03#
arrows2$Rare2 <- arrows2$Rare+0.02#
params$AB <- ifelse(params$abundance_pair=="Rare","R","C")#
params$AB[params$spp=="Ana"]<-"D"#
boot$morphology <- params$morphology[match(boot$spp, params$spp)]#
morph.ord <- c("massive","digitate","corymbose","staghorn","tabular")#
boot$morphology <- factor(boot$morphology, levels=morph.ord)#
arrows2$morphology <- factor(arrows2$morphology, levels=morph.ord)#
params$morphology <- factor(params$morphology, levels=morph.ord)#
#
arrows2$yaxis <- c(38, 30,15,13,13)#
params$yaxis <- arrows2$yaxis[match(params$morphology, arrows2$morphology)]#
arrows2
arrows2$diff <- arrows2$Common - arrows2$Rare#
#
lab.point <- data.frame(morphology="massive", x=c(0.2, 0.2, 0.2), y=c(30, 20, 10), lab = c('C = Common','R = Rare','D = Declined'))#
lab.point$morphology <- factor(lab.point$morphology, levels=morph.ord)#
#
params$log.lam3[params$spp=="Ana"]<-#
params$log.lam3[params$spp=="Ana"]+0.02#
params$log.lam3[params$spp=="Ami"]<-#
params$log.lam3[params$spp=="Ami"]-0.02#
lam.dens <- plot_grid(NULL, ggplot(boot)+#
geom_segment(data=arrows2, aes(x=-Inf, xend=Inf, y=yaxis*1.2, yend=yaxis*1.2), col="white")+#
geom_segment(data=arrows2, aes(y=yaxis, yend=yaxis, x=Rare2, xend=Common2), arrow=arrow(length=unit(1, "mm")))+#
geom_text(data=lab.point, aes(x,y, label=lab), size=1.8, hjust=0, nudge_y=0.3)+#
geom_density(aes(x=log(lam), col=spp, fill=spp), alpha=0.5)+#
geom_vline(xintercept=0, linetype="dotted")+#
geom_point(data=params, aes(log.lam3, yaxis,col=spp), shape=21, size=3, stroke=0.7, fill="white")+#
geom_point(data=params, aes(log.lam3, yaxis, col=spp), size=3, alpha=0.5)+#
geom_text(data=params[!params$spp=="Ana",], aes(log.lam3, yaxis, label=AB), size=1.8, fontface="bold")+#
geom_text(data=params[params$spp=="Ana",], aes(log.lam3, yaxis, label="D"), size=1.8, fontface="bold")+#
#geom_hline(yintercept=0, size=1, col="white")+#
geom_hline(yintercept=-0.1, size=1, col="black")+#
#scale_y_sqrt(expand=c(0,0))+#
scale_y_continuous(expand=c(0,0))+#
#lims(x=c(min(boot$lam), max(boot$lam)))+#
ggtitle(expression(bold(Population~growth)))+#
xlim(c(min(log(boot$lam)), max(log(boot$lam))-0.02))+#
coord_cartesian(xlim=c(-0.5, max(log(boot$lam))))+#
#scale_x_log10(limits=c(min(boot$lam), max(boot$lam)))+#
facet_wrap(~morphology, ncol=1, scales="free_y", strip.position="left")+#
labs(y="Density", x=expression(log(lambda)))+#
scale_colour_manual(values=cols)+scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+#
theme_classic()+theme(strip.text=element_blank(), strip.background=element_blank(), axis.text.y=element_blank(), axis.title.y=element_blank(), axis.line.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_text(size=8), axis.title.x=element_text(size=9),plot.title=element_text(size=8, hjust=0.5, face="bold")), nrow=1, rel_widths=c(0.1,1))#
lam.dens
#r.long$label <-ifelse(r.long$variable=="rec.tran", "Transects","Constant")#
#r.long$label <- factor(r.long$label, levels=c("Fitted","Constant"))#
params$genus <- ifelse(params$family=="Acroporidae", "Acr","Gon")#
arrows <- dcast(params[!params$spp=="Ana", ], morphology~abundance_pair,  value.var="rec.one")#
arrows$Common2 <- 10^(log10(arrows$Common)+0.2)#
arrows$Rare2 <- arrows$Rare#
arrows[arrows$morphology %in% c("staghorn", "tabular"),c("Rare2","Common2")] <- arrows[arrows$morphology %in% c("staghorn", "tabular"),c("Rare","Common")]#
#
arrows$diff <-   arrows$Rare/arrows$Common#
storeDET2 <- storeDET[storeDET$rec>1*10^-5 & storeDET$rec<2*10^-1,]#
#
rechange <- ggplot()+geom_line(data=storeDET2, aes(rec, log(lam), col=spp))+#
scale_x_log10(limits=c(min(storeDET2$rec),max(storeDET2$rec)), breaks=c(10^-5, 10^-4,10^-3,10^-2, 10^-1), labels=c(#
		expression(10^-5), expression(10^-4), expression(10^-3),expression(10^-2), expression(10^-1)))+#
geom_hline(yintercept=0, size=0.1)+#
geom_point(data=params, aes(x=rec.mean, y=log(lam.est)), size=1, col="white")+#
geom_point(data=params, aes(x=rec.mean, y=log(lam.est), col=spp, fill=spp), size=1, alpha=0.5)+#
labs(x=expression(Recruitment~probablity~(P[rec])))+#
geom_segment(data=params[params$family=="Acroporidae",], aes(x=rec.mean, xend=rec.mean,y=-0.52, yend=-0.51), arrow=arrow(length=unit(1, "mm") ))+#
geom_segment(data=params[params$family=="Merulinidae",], aes(x=rec.mean, xend=rec.mean,y=-0.52, yend=-0.51), arrow=arrow(length=unit(1, "mm") ))+#
geom_text(data=NULL, aes(x=params$rec.mean[1], y=-0.46), label="Acr", size=2.5, col="grey")+#
geom_text(data=NULL, aes(x=params$rec.mean[11], y=-0.46), label="Gon", size=2.5,col="grey")+#
guides(col="none", fill="none")+#
theme_classic()+#
labs(x=expression(Recruitment~probablity~(P[rec])), y=expression(log(lambda)))+#
coord_cartesian(ylim=c(-0.55,0.65))+#
scale_colour_manual(values=cols)+scale_fill_manual(values=cols)+#
theme( plot.background=element_blank(), axis.text=element_text(size=8), axis.title=element_text(size=9), plot.title=element_text(size=8, hjust=0.5, face="bold"), panel.background=element_blank())#
rechange
rechange <- ggplot()+geom_line(data=storeDET2, aes(rec, log(lam), col=spp))+#
scale_x_log10(limits=c(min(storeDET2$rec),max(storeDET2$rec)), breaks=c(10^-5, 10^-4,10^-3,10^-2, 10^-1), labels=c(#
		expression(10^-5), expression(10^-4), expression(10^-3),expression(10^-2), expression(10^-1)))+#
geom_hline(yintercept=0, size=0.1)+#
geom_point(data=params, aes(x=rec, y=log(lam.est)), size=1, col="white")+#
geom_point(data=params, aes(x=rec, y=log(lam.est), col=spp, fill=spp), size=1, alpha=0.5)+#
labs(x=expression(Recruitment~probablity~(P[rec])))+#
geom_segment(data=params[params$family=="Acroporidae",], aes(x=rec, xend=rec,y=-0.52, yend=-0.51), arrow=arrow(length=unit(1, "mm") ))+#
geom_segment(data=params[params$family=="Merulinidae",], aes(x=rec, xend=rec,y=-0.52, yend=-0.51), arrow=arrow(length=unit(1, "mm") ))+#
geom_text(data=NULL, aes(x=params$rec[1], y=-0.46), label="Acr", size=2.5, col="grey")+#
geom_text(data=NULL, aes(x=params$rec[11], y=-0.46), label="Gon", size=2.5,col="grey")+#
guides(col="none", fill="none")+#
theme_classic()+#
labs(x=expression(Recruitment~probablity~(P[rec])), y=expression(log(lambda)))+#
coord_cartesian(ylim=c(-0.55,0.65))+#
scale_colour_manual(values=cols)+scale_fill_manual(values=cols)+#
theme( plot.background=element_blank(), axis.text=element_text(size=8), axis.title=element_text(size=9), plot.title=element_text(size=8, hjust=0.5, face="bold"), panel.background=element_blank())#
rechange
source("figs/fig.2.R") #
fig.2
########################################
# COMPARE LAMS#
########################################
#
params2$lam.est <- params$lam.est[match(params2$spp, params$spp)]#
#
morph.diff <- function(x){#
	params2$x.temp <-params[match(params2$spp, params$spp), x]#
	comp$x.common <- params2$x.temp[match(comp$Common, params2$spp)]#
	comp$x.rare <- params2$x.temp[match(comp$Rare, params2$spp)]#
	comp$x.diff <- comp$x.common-comp$x.rare#
	comp$x.div <- comp$x.common/comp$x.rare#
	comp#
	}#
#
comp$AC<-morph.diff("abundance_05")$x.common#
comp$AR<-morph.diff("abundance_05")$x.rare#
comp$abundiff <- morph.diff("abundance_05")$x.div#
comp$lamC <- morph.diff("lam.est")$x.common#
comp$lamR <- morph.diff("lam.est")$x.rare#
comp$lamdiff <- morph.diff("lam.est")$x.diff#
#
ggplot(comp)+#
geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")
# projecting lamda from basic size dist.. #
#
proj.size <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] #
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam=bigmatrix()$lam#
	v=bigmatrix()$v#
	ngen <- 100#
	npop <- 100#
	v <- matrix(c(1, rep(0,99)))#
pop  <- matrix(nrow=npop, ncol=ngen) # sizes/gens.#
pop[,1] <- round(v * npop) # inital pop. size#
for(j in 2:ngen){ pop[,j] <- bigmatrix()$K %*% as.matrix(pop[,j-1]) }#
pop.long <- melt(pop, value.name = "NperSize")#
colnames(pop.long)[1]<-"Size"#
colnames(pop.long)[2]<-"gen"#
psize<-	aggregate(NperSize~gen, data=pop.long, sum)#
psize$n <- npop*lam^psize$gen # simpler method#
proj.size <- rbind(proj.size, cbind(psize, spp=sp, abun=params$abundance_pair[params$spp==sp], morph=params$morph[params$spp==sp]))#
}#
#
proj.size <- proj.size[!proj.size$spp=="Ana",]	#
#
proj <- dcast(morph+gen~abun, data=proj.size, value.var="NperSize")#
proj$diff <- proj$Common/proj$Rare#
proj$real <- comp$abundiff[match(proj$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj[proj$diff<proj$real,], max)#
proj$maxgen <- gens$gen[match(proj$morph, gens$morph)] +1 #
#
projdat <- proj3[proj3$gen==proj3$maxgen,]#
projdat
proj <- dcast(morph+gen~abun, data=proj.size, value.var="NperSize")#
proj$diff <- proj$Common/proj$Rare#
proj$real <- comp$abundiff[match(proj$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj[proj$diff<proj$real,], max)#
proj$maxgen <- gens$gen[match(proj$morph, gens$morph)] +1 #
ggplot(proj, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
geom_line(data=proj3[proj3$gen<=proj3$maxgen,])+#
geom_point(data=proj3[proj3$gen==proj3$maxgen,])+ #
scale_y_sqrt()+scale_x_sqrt()+#
coord_cartesian(ylim=c(0,60), xlim=c(0,100))
ggplot(proj, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
geom_line(data=proj[proj$gen<=proj$maxgen,])+#
geom_point(data=proj[proj$gen==proj$maxgen,])+ #
scale_y_sqrt()+scale_x_sqrt()+#
coord_cartesian(ylim=c(0,60), xlim=c(0,100))
Gen5 <- subset(proj.size, gen==5)#
params$Gen5<-Gen5$NperSize[match(params$spp, Gen5$spp)]#
Gen10 <- subset(proj.size, gen==10)#
params$Gen10<-Gen10$NperSize[match(params$spp, Gen10$spp)]#
#
dems <- c("lam.est", "Gen5",  "Gen10", "abundance_05", "rec")#
vars <- NULL#
for (t in c(traits, "eggC",dems)){#
	#t <- "Gen15"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")
########################################
# DRIVERS OF FITNESS DIFFS (within morphs)#
########################################
#
params_orig <- params # CAREFUL set original #
#source("R/7_morphology.R")#
p.morph <- read.csv("data/params_morph.csv") #skip 7#
head(p.morph)#
#
pars <- c("m.int", "m.slp","f.int","f.slp","g.int","g.slp","g.var", "s.int", "s.slp", "s.slp.2")#
p.types <- data.frame(pars, type = c("reproduction","reproduction","reproduction","reproduction","growth","growth","growth", "survival","survival","survival"))#
types <- unique(p.types$type)#
#
test <- NULL#
for (i in types) {#
params <- params_orig #
params[,pars] <- p.morph[match(params$morphology, p.morph$morph), pars]#
pars2 <- p.types$pars[p.types$type==i]#
params[,pars2] <- params_orig[match(params$spp, params_orig$spp), pars2]#
for (sp in spp) {#
	#sp <- "Ahy"#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
test<-rbind(test, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="normal"))#
 } #
}#
#
diffs <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	diffs <- rbind(diffs, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	}#
head(diffs)#
#
sums <- aggregate(d~morph+rec, diffs, sum)#
sums$lamdiff <- comp$lamdiff[match(sums$morph, comp$morp)]#
sums # compare d with the real lamdiff#
#
ggplot()+#
geom_bar(data=diffs, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+geom_vline(xintercept=0)
source("figs/fig.3.R")#
fig.3 # ggsave("figs/fig.3.jpeg", fig.3, width=14, height=12, units="cm", dpi =
########################################
# REPRODUCTIVE TRADEOFF#
########################################
#
params <- params_orig #
#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae",], method="lm")#
#
source("figs/fig.4.R")#
fig.4 # ggsave("figs/fig.4.jpeg", fig.4, width=5.5, height=8, units="cm", dpi = 600)
# Plot abundance / demographic models#
source("figs/SUPPLEMENT/supp.fig2.R") # abundance#
source("figs/SUPPLEMENT/supp.fig3.R") # models#
#
# PCA matrix library("psych")#
pairs.panels(log(params[,traits]), scale=T, cex.cor=2)
# Plot abundance / demographic models#
source("figs/SUPPLEMENT/supp.fig2.R")
head(abun.BT)#
#
figS2A<-plot_grid(#
ggplot(abun.BT, aes(reorder(spp, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
guides(fill="none")+#
labs(y=expression(Colonies~per~m^2))+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
labs(title="N colonies (27 x BTs)",subtitle="2005")+#
theme(axis.title.x=element_blank(), #
axis.text.x=element_blank(),#
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
plot.subtitle=element_text(size=9, hjust=0.5),strip.background=element_blank())#
,#
ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(title="N colonies (6 x LITs)",y="Colonies per m")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank()),#
ncol=1, rel_heights=c(1,3))#
figS2A
figS2B <- ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), cover, fill=spp))+#
#geom_bar(data=tri2.av, aes(reorder(species, -abun05), N/10, fill=species),stat="identity")+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(y="% cover")+#
ggtitle("Coral Cover")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank())#
figS2B
########################################
# SADs#
########################################
#
sad <- read.csv("data/raw_data/abundance/BT_counts_2005.csv")#
sad <- aggregate(Abundance~Species, sad, sum)#
#
sad$Species[sad$Species=="Acropora fat dig"] <- "Acropora cf. digitifera"#
sad$spp <- params$spp[match(sad$Species, params$species)]#
sad$spp <- as.character(sad$spp)#
sad$spp[is.na(sad$spp)]<-"Other"#
cols2 <- c(cols, "Other"="Grey")#
sad <- sad[order(sad$Abundance),]#
sad$rank <- c(nrow(sad):1)#
sad$morphology<-params$morph[match(sad$spp, params$spp)]#
#
sadplot <- plot_grid(#
ggplot(sad[!is.na(sad$morphology),], aes(y=morphology, x=rank))+#
geom_line(aes(col=morphology), arrow=arrow(length=unit(1,"mm")))+#
ggtitle("Abundance distribution")+#
xlim(c(0,70))+#
geom_text(data=sad[sad$spp %in% c("Ahy","Adi","Ana","Ain","Gre"),], aes(label=morphology), size=1.8, hjust=1)+#
scale_colour_manual(values=colsC)+#
theme_void()+#
theme(plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
guides(col="none"),#
ggplot(subset(sad, Abundance>50), aes(rank, Abundance/2700))+geom_segment(aes(rank, xend=rank, y=0, yend=Abundance/2700, col=spp), size=1)+#
scale_colour_manual(values=cols2)+#
labs(x="Rank", y="Colony density (2005)")+#
geom_text_repel(data=sad[!sad$spp=="Other",], aes(rank, y=(Abundance/2700)+0.2, label=spp), angle=45, size=2, force=0.001, hjust=0)+#
xlim(c(0,70))+#
theme_classic()+#
guides(colour="none"),#
ncol=1, align="v", axis="lr", rel_heights=c(0.3,1))#
sadplot#
diffs$diff2 <- ((diffs$X2014+0.05)/(diffs$X2011+0.05))^(1/3)#
diffs$spp <- params$spp[match(diffs$species, params$species)]#
diffs$lam.est <- params$lam.est[match(diffs$spp, params$spp)]#
figS2D <- ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")#
#
figS2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E#
#
FigS2new <- plot_grid(figS2D, ggplot()+theme_void(), figS2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new#
#
fig.s2 <- plot_grid(figS2A, plot_grid(sadplot, plot_grid(figS2B,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
diffs
m.diff <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	m.diff <- rbind(m.diff, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	}#
head(m.diff)#
#
sums <- aggregate(d~morph+rec, m.diff, sum)#
sums$lamdiff <- comp$lamdiff[match(sums$morph, comp$morp)]#
sums # compare d with the real lamdiff#
#
ggplot()+#
geom_bar(data=m.diff, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+geom_vline(xintercept=0)
library("RColorBrewer")#
#
plotdat <- proj#
#
projplot <- ggplot(plotdat, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
#scale_x_log10()+scale_y_log10()+#
geom_line(data=plotdat[plotdat$gen<=plotdat$maxgen,])+#
geom_point(data=plotdat[plotdat$gen==plotdat$maxgen,])+#
coord_cartesian(ylim=c(0.5,65), xlim=c(0.7,45))+#
scale_y_sqrt(expand=c(0,0))+#
scale_x_sqrt(expand=c(0,0))+#
scale_colour_manual(values=colsC)+#
theme_classic()+theme(legend.position=c(0.75, 0.2), legend.title=element_blank(), legend.background=element_blank(), legend.key.height=unit(1,"mm"), legend.text=element_text(size=7), axis.title=element_text(size=9))#
projplot#
#
####### PANEL B#
#
vars$type <- ifelse(vars$t %in% dems, "Abundance", ifelse(vars$t=="abundance_05", "Abundance", "Demographic traits"))#
#
abunvar <- subset(vars, t=="abundance_05")#
vars2 <- vars[!vars$t=="abundance_05",]#
#
vars2$t[order(vars2$within)]#
group_name <- c(#
expression(italic(P[rec])),#
expression(Survival[juvenile]), #
expression(Partial~mortality),#
expression(Growth[max]),  #
expression(Fecundity[colony]),#
expression(Mature~size),#
expression(Survival[adult]),#
"Egg Mass",#
expression(Fecundity[area]), #
expression(Pop.~growth~(lambda)),#
expression(Abundance["5yrs"]),#
expression(Abundance["10yrs"])#
)#
pal <- brewer.pal(n = 3, name = 'Greys')#
#https://www.schemecolor.com/leather.php#
#
withinplot <- ggplot(vars2, aes(y=reorder(t, -within), x=within))+#
#geom_point(aes(col=type))+#
geom_bar(stat="Identity", col="black", size=0.1, width=0.75, aes(fill=type))+#
geom_bar(stat="Identity", col="black", size=0.1, width=0.75,fill="grey", alpha=0.5)+#
scale_x_continuous(expand=c(0,0), limits=c(0,80))+#
scale_y_discrete(labels=rev(group_name))+#
labs(x="% variation within \nmorphological groups", y="parameter")+#
guides(fill="none")+#
#coord_cartesian(xlim=c(0,55))+#
theme_classic()+#
geom_point(data=abunvar, aes(y="Gen10", x=within), shape=4, stroke=0.7)+#
geom_segment(data=NULL, aes(y="f.cm2", yend="survcm", x=20, xend=20))+#
geom_segment(data=NULL, aes(y="f.cm2", yend="f.cm2", x=20, xend=19))+#
geom_segment(data=NULL, aes(y="survcm", yend="survcm", x=20, xend=19))+#
geom_text(data=NULL, aes(y="min.r", x=22, label="Demographic \ntraits"), size=2.5, hjust=0)+#
geom_text(data=NULL, aes(y="lam.est", x=80, label="Abundances\nin 2005"), size=2.5, hjust=1)+#
geom_segment(data=NULL, aes(y="Gen5", yend=1.5, x=77.3, xend=77.3))+#
scale_fill_manual(values=c("#9F7159","#DF9D6C"))+ #
theme(axis.title.y=element_blank(), legend.title=element_blank(), legend.key.width=unit(2, "mm"), legend.key.height=unit(2, "mm"), legend.position=c(0.6, 0.9), #
legend.background=element_blank(),#
panel.grid.major.x=element_line(),#
panel.grid.minor.x=element_line(),#
axis.line=element_line(size=0.1),#
legend.text=element_text(size=8),#
axis.title.x=element_text(size=8), axis.text.y=element_text(size=8))#
withinplot#
Fig4AB <- plot_grid(projplot+labs(x="Time (years)", y=expression(N[common]/N[rare]))+ggtitle("Projected abundance \ndifferences")+theme(plot.title=element_text(size=8, hjust=0.5, face="bold")), withinplot+ggtitle("Disassociation from \nmorphology")+theme(plot.title=element_text(size=8, hjust=0.5, face="bold")), rel_widths=c(0.8, 1), labels=c("a","b"), label_size=9)#
	Fig4AB#
#
# Panel C-D#
#
pal <- brewer.pal(n = 3, name = 'Greys')#
#
comp$labels <- paste(comp$Common, " - ", comp$Rare, sep="")#
#
mas_x <- comp$lamdiff[comp$morph=="massive"]#
tab_x <- comp$lamdiff[comp$morph=="tabular"]#
brn_x <- comp$lamdiff[comp$morph=="staghorn"]#
dig_x <- comp$lamdiff[comp$morph=="digitate"]#
cor_x <- comp$lamdiff[comp$morph=="corymbose"]#
#
comp$rank<-NA#
comp$rank[order(comp$lamdiff)] <- nrow(comp):1#
mas_y <- comp$rank[comp$morph=="massive"]#
tab_y <- comp$rank[comp$morph=="tabular"]#
brn_y <- comp$rank[comp$morph=="staghorn"]#
dig_y <- comp$rank[comp$morph=="digitate"]#
cor_y <- comp$rank[comp$morph=="corymbose"]#
cor2_y <- comp$rank[comp$morph=="corymbose_2"]#
#
diffs$label <- comp$label[match(diffs$morph, comp$morph)]#
fig4CD <- plot_grid(ggplot(m.diff, aes(d, reorder(label, -d), fill=param))+#
geom_bar(stat="Identity", position="stack", col="black", size=0.2, width=0.6)+#
scale_fill_manual(values=c("white",pal[c(2:3)]))+#
labs(x=expression(lambda~difference~(Common~-~Rare)))+#
xlim(c(-0.02, 0.6))+#
annotation_custom(mas, mas_x+0.01, mas_x+0.13, mas_y-0.4, mas_y+0.4)+#
annotation_custom(brn, brn_x+0.05, brn_x+0.14, brn_y-0.5, brn_y+0.5)+#
annotation_custom(tab, tab_x+0.03, tab_x+0.12, tab_y-0.5, tab_y+0.5)+#
annotation_custom(cor, cor_x+0.01, cor_x+0.15, cor_y-0.5, cor_y+0.5)+#
annotation_custom(dig, dig_x+0.01, dig_x+0.15, dig_y-0.5, dig_y+0.5)+#
geom_vline(xintercept=0)+#
theme_classic()+theme(axis.title.y=element_blank(), legend.title=element_blank(),  legend.key.width=unit(2,"mm"), legend.key.height=unit(1,"mm"), axis.line.y=element_blank(), legend.position=c(0.8,0.8),axis.text.x=element_text(size=9),axis.text.y=element_text(size=7, angle=30), axis.title=element_text(size=9)),#
ggplot(sums, aes(lamdiff, d))+geom_abline(slope=1, size=0.1)+geom_point(aes(col=morph), size=2)+#
labs(x=expression(~Original~lambda~difference), y = "Sum of \ndifferences")+guides(col="none")+scale_colour_manual(values=colsC)+theme_classic()+theme(axis.text=element_text(size=9),axis.title=element_text(size=9)), #
rel_widths=c(1,0.5), labels=c("c","d"), label_size=9)#
#
fig.3<- plot_grid(plot_grid(NULL, Fig4AB, rel_widths=c(0.02,1)), NULL, fig4CD, ncol=1, rel_heights=c(1,0.12, 0.7))+#
draw_label(expression(bold(Source~of~lambda~differences)), 0.55, 0.42, size=8)+#
draw_label(expression(bold(within~groups)), 0.55, 0.39, size=8)+#
draw_label("?", 0.63, 0.9, size=8, fontface="bold")#
fig.3
m.diff$label <- comp$label[match(m.diff$morph, comp$morph)]#
fig4CD <- plot_grid(ggplot(m.diff, aes(d, reorder(label, -d), fill=param))+#
geom_bar(stat="Identity", position="stack", col="black", size=0.2, width=0.6)+#
scale_fill_manual(values=c("white",pal[c(2:3)]))+#
labs(x=expression(lambda~difference~(Common~-~Rare)))+#
xlim(c(-0.02, 0.6))+#
annotation_custom(mas, mas_x+0.01, mas_x+0.13, mas_y-0.4, mas_y+0.4)+#
annotation_custom(brn, brn_x+0.05, brn_x+0.14, brn_y-0.5, brn_y+0.5)+#
annotation_custom(tab, tab_x+0.03, tab_x+0.12, tab_y-0.5, tab_y+0.5)+#
annotation_custom(cor, cor_x+0.01, cor_x+0.15, cor_y-0.5, cor_y+0.5)+#
annotation_custom(dig, dig_x+0.01, dig_x+0.15, dig_y-0.5, dig_y+0.5)+#
geom_vline(xintercept=0)+#
theme_classic()+theme(axis.title.y=element_blank(), legend.title=element_blank(),  legend.key.width=unit(2,"mm"), legend.key.height=unit(1,"mm"), axis.line.y=element_blank(), legend.position=c(0.8,0.8),axis.text.x=element_text(size=9),axis.text.y=element_text(size=7, angle=30), axis.title=element_text(size=9)),#
ggplot(sums, aes(lamdiff, d))+geom_abline(slope=1, size=0.1)+geom_point(aes(col=morph), size=2)+#
labs(x=expression(~Original~lambda~difference), y = "Sum of \ndifferences")+guides(col="none")+scale_colour_manual(values=colsC)+theme_classic()+theme(axis.text=element_text(size=9),axis.title=element_text(size=9)), #
rel_widths=c(1,0.5), labels=c("c","d"), label_size=9)
fig.3<- plot_grid(plot_grid(NULL, Fig4AB, rel_widths=c(0.02,1)), NULL, fig4CD, ncol=1, rel_heights=c(1,0.12, 0.7))+#
draw_label(expression(bold(Source~of~lambda~differences)), 0.55, 0.42, size=8)+#
draw_label(expression(bold(within~groups)), 0.55, 0.39, size=8)+#
draw_label("?", 0.63, 0.9, size=8, fontface="bold")#
fig.3
rm(list = ls())#
library("grid")#
library("png")#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("ggrepel")#
library("cowplot")#
library("stats4")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
########################################
# LOAD DEMOGRAPHIC DATA #
########################################
#
# source("R/1_data_prep.R") # process raw data#
# source("R/2_params.R") # get model parameters#
# source("R/3_traits.R") # demographic traits#
#
params <- read.csv("data/params.csv") #skip 1-2-3#
spp<-params$spp[order(params$spp)]#
#
# ordering#
#################################### #
order <- c("Ahy","Acy","Ain","Aro","Ana", "Asp","Ami","Adi","Ahu", "Gre","Gpe")#
params$spp <- factor(params$spp, levels=order)#
labs <- params$species[order(params$spp)]#
cols<-as.character(params$cols)#
names(cols) <- params$spp#
cols <- cols[order]#
#
########################################
# MORPHOLOGICAL PAIRS#
########################################
#
# Ana declined, do not compare#
params2 <- params[!params$spp=="Ana",]#
params2$morph <- params2$morphology#
comp<-dcast(params2[!params2$spp=="Ana",], morph~abundance_pair, value.var="spp")#
comp#
#
colsC <- cols[names(cols) %in% comp$Common]#
names(colsC)<-comp$morph[match(names(colsC), comp$Common)]#
#
########################################
# SIZE STRUCTURE#
########################################
#
ss<-read.csv("data/raw_data/size_structure.csv") #
ss$area <- log10(ss$area_cm2 / 10000) #
ggplot(ss, aes(x=area))+geom_histogram()+ facet_wrap(~species)#
#
########################################
# DEMOGRAPHIC SPACE (PCA)#
########################################
#
rownames(params) <- params$spp#
traits <- c("r.int","f.cm2","survcm", "av.surv","p_mort", "min.r", "f.colony")#
#
pca<-prcomp(params[,traits], scale=T, center=T)#
biplot(pca)#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100 # explained variation#
#
########################################
# ABUNDANCE#
########################################
#
abun.BT <- read.csv("data/abun.BT.csv")#
abun.LIT <- read.csv("data/abun.LIT.csv")#
#
aggregate(N/10~spp, abun.BT, mean) # N per m2#
aggregate(N/10~spp+year, abun.LIT, mean) # N per m#
#
########################################
# FIGURE 1#
########################################
#
source("figs/fig.1.R")#
fig.1 # ggsave("figs/fig.1.jpeg", fig.1, width=15, height=9.5, units="cm", dpi = 600)#
########################################
# IPMS#
########################################
#
source("R/4_ipms.R") # IPM functions#
max.size <- 0.3 # max(ss$area)#
n <- 100#
#
# recruit size: av max growth within morphs#
agg <- aggregate(r.int~morphology, params, mean)#
params$r.int2  <- agg$r.int[match(params$morphology, agg$morphology)]#
params$rec.size <- log10(pi*(params$r.int2*0.85)^2)#
#
# p_rec placeholder (same within families)#
params$rec <- ifelse(params$family=="Merulinidae",0.000316, 0.00113)#
#
########################################
# RECRUITMENT SENSITIVITY I#
#######################################	#
#
rec.xDET <- 10^(seq(-5,-1, 0.1))#
storeDET<-data.frame()#
for (sp in spp) {#
	for (rec in rec.xDET){#
	  rec.size <- params$rec.size[params$spp==sp]#
	  h <- mesh()$h#
	  y <- mesh()$y#
   mod <- bigmatrix()#
  storeDET<-rbind(storeDET, data.frame(spp=sp, rec=rec, lam=bigmatrix()$lam))#
   } #
  }#
#
ggplot(storeDET, aes(rec, lam))+#
geom_line(aes(col=spp))+scale_x_log10()+#
scale_colour_manual(values=cols)+#
coord_cartesian(ylim=c(0.6,2))#
#
########################################
# ESTIMATE LAM#
########################################
#
# Mean-family recruitment based on transects #
source("R/5_recruitment.R")#
params$log.rec.tran <- log10(params$rec.tran)#
agg <- aggregate(log.rec.tran~family, params, mean)#
params$rec <- 10^agg[match(params$family, agg$family),2]#
#
lam.est <- data.frame()#
for (sp in spp) {#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
lam.est<-rbind(lam.est, data.frame(spp=sp, lam.est=bigmatrix()$lam, R0=bigmatrix()$R0))#
 }#
#
params$lam.est <- lam.est$lam.est#
params$R0 <- lam.est$R0#
params$GT <- log(params$R0)/log(params$lam.est)#
params[,c("spp","lam.est", "R0", "GT")]#
#
########################################
# BOOTSTRAP LAM#
#######################################	#
#
# source("R/bootstap.R")#
boot <- read.csv("data/lam.range.csv")#
boot$GT <- log(boot$r)/log(boot$lam)#
#
ggplot(boot, aes(GT, log(lam)))+#
geom_hline(yintercept=0)+#
geom_point(shape=21, aes(col=spp), alpha=0.2)+#
coord_cartesian(xlim=c(min(boot$GT),100))+#
scale_colour_manual(values=cols)+scale_x_log10()+#
geom_point(data=params, aes(GT, log(lam.est)))+#
guides(col="none")+#
theme_classic()#
#
########################################
# FIG 2#
#######################################	#
source("figs/fig.2.R") #
fig.2 #ggsave("figs/fig.2.jpeg", fig.2, width=15, height=12.7, units="cm", dpi = 600)#
#
########################################
# COMPARE LAMS#
########################################
#
params2$lam.est <- params$lam.est[match(params2$spp, params$spp)]#
#
morph.diff <- function(x){#
	params2$x.temp <-params[match(params2$spp, params$spp), x]#
	comp$x.common <- params2$x.temp[match(comp$Common, params2$spp)]#
	comp$x.rare <- params2$x.temp[match(comp$Rare, params2$spp)]#
	comp$x.diff <- comp$x.common-comp$x.rare#
	comp$x.div <- comp$x.common/comp$x.rare#
	comp#
	}#
#
comp$AC<-morph.diff("abundance_05")$x.common#
comp$AR<-morph.diff("abundance_05")$x.rare#
comp$abundiff <- morph.diff("abundance_05")$x.div#
comp$lamC <- morph.diff("lam.est")$x.common#
comp$lamR <- morph.diff("lam.est")$x.rare#
comp$lamdiff <- morph.diff("lam.est")$x.diff#
#
ggplot(comp)+ geom_bar(aes(y=reorder(morph, -lamdiff), x=lamdiff), stat="identity")#
#
########################################
# TIME NEEDED TO GET DIFFERENCES#
########################################
#
# projecting lamda from basic size dist.. #
#
proj.size <- NULL#
for(sp in spp){#
	rec <- params$rec[params$spp==sp] #
	rec.size <- params$rec.size[params$spp==sp]#
	h <- mesh()$h#
	y <- mesh()$y#
	lam=bigmatrix()$lam#
	v=bigmatrix()$v#
	ngen <- 100#
	npop <- 100#
	v <- matrix(c(1, rep(0,99)))#
pop  <- matrix(nrow=npop, ncol=ngen) # sizes/gens.#
pop[,1] <- round(v * npop) # inital pop. size#
for(j in 2:ngen){ pop[,j] <- bigmatrix()$K %*% as.matrix(pop[,j-1]) }#
pop.long <- melt(pop, value.name = "NperSize")#
colnames(pop.long)[1]<-"Size"#
colnames(pop.long)[2]<-"gen"#
psize<-	aggregate(NperSize~gen, data=pop.long, sum)#
psize$n <- npop*lam^psize$gen # simpler method#
proj.size <- rbind(proj.size, cbind(psize, spp=sp, abun=params$abundance_pair[params$spp==sp], morph=params$morph[params$spp==sp]))#
}#
#
proj.size <- proj.size[!proj.size$spp=="Ana",]	#
#
proj <- dcast(morph+gen~abun, data=proj.size, value.var="NperSize")#
proj$diff <- proj$Common/proj$Rare#
proj$real <- comp$abundiff[match(proj$morph, comp$morph)]#
gens <- aggregate(gen~morph, proj[proj$diff<proj$real,], max)#
proj$maxgen <- gens$gen[match(proj$morph, gens$morph)] +1 #
ggplot(proj, aes(gen, diff, col=morph))+#
geom_line(linetype="dotted")+#
geom_line(data=proj[proj$gen<=proj$maxgen,])+#
geom_point(data=proj[proj$gen==proj$maxgen,])+ #
scale_y_sqrt()+scale_x_sqrt()+#
coord_cartesian(ylim=c(0,60), xlim=c(0,100))#
#
########################################
# WITHIN VS BETWEEN#
########################################
#
Gen5 <- subset(proj.size, gen==5)#
params$Gen5<-Gen5$NperSize[match(params$spp, Gen5$spp)]#
Gen10 <- subset(proj.size, gen==10)#
params$Gen10<-Gen10$NperSize[match(params$spp, Gen10$spp)]#
#
dems <- c("lam.est", "Gen5",  "Gen10", "abundance_05", "rec")#
vars <- NULL#
for (t in c(traits, "eggC",dems)){#
	#t <- "Gen15"#
	params$t <- scale(params[,t])#
mod <- aov(t~morphology, data=params)#
summary(mod)#
within <- summary(mod)[[1]]["Residuals","Sum Sq"]#
between <- summary(mod)[[1]]["morphology","Sum Sq"]#
pval <- summary(mod)[[1]]["morphology","Pr(>F)"]#
vars <- rbind(vars, data.frame(t, within=100*(within/(within+between)), between=100*(between/(within+between)), pval))#
}#
#
ggplot(vars, aes(within,reorder(t, -within)))+geom_bar(stat="identity")#
#
########################################
# DRIVERS OF FITNESS DIFFS (within morphs)#
########################################
#
params_orig <- params # CAREFUL set original #
#source("R/7_morphology.R")#
p.morph <- read.csv("data/params_morph.csv") #skip 7#
head(p.morph)#
#
pars <- c("m.int", "m.slp","f.int","f.slp","g.int","g.slp","g.var", "s.int", "s.slp", "s.slp.2")#
p.types <- data.frame(pars, type = c("reproduction","reproduction","reproduction","reproduction","growth","growth","growth", "survival","survival","survival"))#
types <- unique(p.types$type)#
#
test <- NULL#
for (i in types) {#
params <- params_orig #
params[,pars] <- p.morph[match(params$morphology, p.morph$morph), pars]#
pars2 <- p.types$pars[p.types$type==i]#
params[,pars2] <- params_orig[match(params$spp, params_orig$spp), pars2]#
for (sp in spp) {#
	#sp <- "Ahy"#
rec.size <- params$rec.size[params$spp==sp]#
rec <- params$rec[params$spp==sp]#
h <- mesh()$h#
y <- mesh()$y#
test<-rbind(test, data.frame(spp=sp, param=i, lam=bigmatrix()$lam, morph=params$morphology[params$spp==sp], rec="normal"))#
 } #
}#
#
m.diff <- NULL#
for (i in types) {#
	#i <- "maturity"#
	params <- params_orig #
	sub <- test[test$param==i, ]#
	params$x <- sub$lam[match(params$spp, sub$spp)]#
	m.diff <- rbind(m.diff, data.frame(morph=comp$morph, d=(morph.diff("x")$x.common - morph.diff("x")$x.rare), param=i, rec="normal"))#
	}#
head(m.diff)#
#
sums <- aggregate(d~morph+rec, m.diff, sum)#
sums$lamdiff <- comp$lamdiff[match(sums$morph, comp$morp)]#
sums # compare d with the real lamdiff#
#
ggplot()+#
geom_bar(data=m.diff, aes(d, reorder(morph, -d), fill=param), stat="identity", position="stack", col="black")+geom_vline(xintercept=0)#
#
########################################
# FIGURE 3#
########################################
#
source("figs/fig.3.R")#
fig.3 # ggsave("figs/fig.3.jpeg", fig.3, width=14, height=12, units="cm", dpi = 600)#
#
########################################
# REPRODUCTIVE TRADEOFF#
########################################
#
params <- params_orig #
#
params$fec1cm <- exp(params$f.int +  params$f.slp * log10(1)) /10000#
params2$fec1cm <- params$fec1cm[match(params2$spp, params$spp)]#
#
ggplot(params, aes(fec1cm, eggC))+geom_text(aes(label=spp))+geom_smooth(data=params[params$family=="Acroporidae",], method="lm")#
#
source("figs/fig.4.R")#
fig.4 # ggsave("figs/fig.4.jpeg", fig.4, width=5.5, height=8, units="cm", dpi = 600)#
#
########################################
# SUPPLEMENT#
########################################
#
# Plot abundance / demographic models#
source("figs/SUPPLEMENT/supp.fig2.R") # abundance
##### FIGURE S2#
#
head(abun.BT)#
#
figS2A<-plot_grid(#
ggplot(abun.BT, aes(reorder(spp, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
guides(fill="none")+#
labs(y=expression(Colonies~per~m^2))+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
labs(title="N colonies (27 x BTs)",subtitle="2005")+#
theme(axis.title.x=element_blank(), #
axis.text.x=element_blank(),#
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
plot.subtitle=element_text(size=9, hjust=0.5),strip.background=element_blank())#
,#
ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), N/10, fill=spp))+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(title="N colonies (6 x LITs)",y="Colonies per m")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank()),#
ncol=1, rel_heights=c(1,3))#
figS2A#
figS2B <- ggplot(data=abun.LIT, aes(reorder(species, -abundance_05), cover, fill=spp))+#
#geom_bar(data=tri2.av, aes(reorder(species, -abun05), N/10, fill=species),stat="identity")+#
stat_summary(fun="mean", geom = "bar", width=0.8, col="black", size=0.1)+#
stat_summary(fun.data = mean_se, geom = "errorbar", width=0)+#
facet_wrap(~year, ncol=1)+#
guides(fill="none")+#
labs(y="% cover")+#
ggtitle("Coral Cover")+#
scale_fill_manual(values=cols)+#
scale_y_continuous(expand=c(0,0))+#
geom_hline(yintercept=0)+#
theme_classic()+#
theme(axis.title.x=element_blank(), #
plot.title=element_text(size=8, hjust=0.5, face="bold"),#
axis.text.x=element_text(angle=55, hjust=1, face="italic"), strip.background=element_blank())#
figS2B#
#
########################################
# SADs#
########################################
#
sad <- read.csv("data/raw_data/abundance/BT_counts_2005.csv")#
sad <- aggregate(Abundance~Species, sad, sum)#
#
sad$Species[sad$Species=="Acropora fat dig"] <- "Acropora cf. digitifera"#
sad$spp <- params$spp[match(sad$Species, params$species)]#
sad$spp <- as.character(sad$spp)#
sad$spp[is.na(sad$spp)]<-"Other"#
cols2 <- c(cols, "Other"="Grey")#
sad <- sad[order(sad$Abundance),]#
sad$rank <- c(nrow(sad):1)#
sad$morphology<-params$morph[match(sad$spp, params$spp)]#
#
sadplot <- plot_grid(#
ggplot(sad[!is.na(sad$morphology),], aes(y=morphology, x=rank))+#
geom_line(aes(col=morphology), arrow=arrow(length=unit(1,"mm")))+#
ggtitle("Abundance distribution")+#
xlim(c(0,70))+#
geom_text(data=sad[sad$spp %in% c("Ahy","Adi","Ana","Ain","Gre"),], aes(label=morphology), size=1.8, hjust=1)+#
scale_colour_manual(values=colsC)+#
theme_void()+#
theme(plot.title=element_text(size=8, hjust=0.5, face="bold"))+#
guides(col="none"),#
ggplot(subset(sad, Abundance>50), aes(rank, Abundance/2700))+geom_segment(aes(rank, xend=rank, y=0, yend=Abundance/2700, col=spp), size=1)+#
scale_colour_manual(values=cols2)+#
labs(x="Rank", y="Colony density (2005)")+#
geom_text_repel(data=sad[!sad$spp=="Other",], aes(rank, y=(Abundance/2700)+0.2, label=spp), angle=45, size=2, force=0.001, hjust=0)+#
xlim(c(0,70))+#
theme_classic()+#
guides(colour="none"),#
ncol=1, align="v", axis="lr", rel_heights=c(0.3,1))#
sadplot#
diffs$diff2 <- ((diffs$X2014+0.05)/(diffs$X2011+0.05))^(1/3)#
diffs$spp <- params$spp[match(diffs$species, params$species)]#
diffs$lam.est <- params$lam.est[match(diffs$spp, params$spp)]#
figS2D <- ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")#
#
figS2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E
ggplot(diffs, aes(reorder(spp, -lam.est), diff, fill=spp))+#
stat_summary(geom="bar", fun="mean", col="black", size=0.1)+#
scale_fill_manual(values=cols)+guides(fill="none")+theme_classic()+theme(axis.text.x=element_blank(), axis.title.x=element_blank(), axis.title.y=element_text(size=10),plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(Delta*N))+#
ggtitle("Change in abundance on \ntransects (2011-2014)")
figS2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
fig.s2E
figS2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
figs2E
figS2E <-ggplot(params, aes(reorder(species, -lam.est), log(lam.est), fill=spp))+#
geom_hline(yintercept=0)+#
geom_bar(stat="identity", size=0.1, col="black")+#
#geom_point(size=2, shape=21, stroke=0.1)+#
scale_fill_manual(values=cols)+#
guides(fill="none", col="none")+theme_classic()+theme(axis.title.x=element_blank(), axis.text.x=element_text(angle=55, hjust=1, face="italic"), axis.title.y=element_text(size=10), plot.title=element_text(size=8, hjust=0.5, face="bold"))+labs(y=expression(log(lambda)[~IPMs]))+ggtitle("Fitness from IPMs")#
figS2E
FigS2new <- plot_grid(figS2D, ggplot()+theme_void(), figS2E, align="v", axis="lr", ncol=1, rel_heights=c(1,0.2,1.4), labels=c("D","","E"), label_size=12)#
FigS2new#
#
fig.s2 <- plot_grid(figS2A, plot_grid(sadplot, plot_grid(figS2B,NULL, rel_widths=c(1,0.2)), ncol=1, rel_heights=c(0.7,1), labels=c("B","C"), label_size=12),FigS2new, nrow=1, rel_widths=c(1,1.2,1), labels=c("A","", ""), label_size=12)#
fig.s2
source("figs/SUPPLEMENT/supp.fig3.R") # models
# PCA matrix library("psych")#
pairs.panels(log(params[,traits]), scale=T, cex.cor=2)
# Plot IPMs#
source("figs/SUPPLEMENT/supp.fig5.R")
fig.s3
source("R/8_sensitivity.R")
source("figs/SUPPLEMENT/supp.fig6.R")
