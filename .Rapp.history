params<-read.csv("data/info.csv")#
gdat<-read.csv("data/growth.csv")#
sdat<-read.csv("data/survival.csv")#
fec<-read.csv("data/fecundity.csv")#
ss<-read.csv("data/size_structure.csv")
spp<-params$spp[order(params$spp)]#
params$abun<-factor(params$abun, levels=c("Rare", "Common", "Dominant"))#
cols<-as.character(params$cols)
params<-read.csv("data/info.csv")#
gdat<-read.csv("data/growth.csv")#
sdat<-read.csv("data/survival.csv")#
fec<-read.csv("data/fecundity.csv")#
ss<-read.csv("data/size_structure.csv")#
spp<-params$spp[order(params$spp)]#
params$abun<-ifelse(params$abun_05<500, "Rare", ifelse(params$abun_05>1500, "Dominant","Common"))#
params$abun<-factor(params$abun, levels=c("Rare", "Common", "Dominant"))#
cols<-as.character(params$cols)#
######
# ----------------------------# mean polyp density#
pd <- read.csv("data/polyp_density.csv")#
pd.mean <- aggregate(list(polyps_cm2=pd$polyps_cm2),list(spp=pd$spp),mean)#
pd.mean <- rbind(pd.mean, data.frame(spp="AM", polyps_cm2=pd.mean$polyps_cm2[pd.mean$spp=="AL"]))#
params<-merge(params, pd.mean)#
#
# ---------------------------# mean energetics#
ec <- read.csv("data/egg_energy.csv")#
ec.mean <- aggregate(list(eggC=ec$Carbon_ug_corrected, eggN=ec$Nitrogen_ug) ,list(spp=ec$spp), mean)#
params<-merge(params, ec.mean)
params
fec<-aggregate(.~id+spp_code+morphology, fec[,c("id","area_cm2","eggs","spp_code", "polyps_cm2","eggC","morphology")], mean)#
head(fec)
fec<-aggregate(.~id+spp_code+morphology, fec[,c("id","area_cm2","eggs","spp", "polyps_cm2","eggC","morphology")], mean)#
head(fec)
# Aggregate fecundity#
fec$eggC <- params$eggC[match(fec$spp, params$spp)]#
fec$polyps_cm2 <- params$polyps_cm2[match(fec$spp, params$spp)]
# Aggregate fecundity#
fec$eggC <- params$eggC[match(fec$spp, params$spp)]#
fec$polyps_cm2 <- params$polyps_cm2[match(fec$spp, params$spp)]#
fec<-aggregate(.~id+spp_code+morphology, fec[,c("id","area_cm2","eggs","spp", "polyps_cm2","eggC","morphology")], mean)#
head(fec)
head(fec)
fec$eggC <- params$eggC[match(fec$spp, params$spp)]#
fec$polyps_cm2 <- params$polyps_cm2[match(fec$spp, params$spp)]#
fec$morphology <- params$morphology[match(fec$spp, params$spp)]
fec<-aggregate(.~id+spp_code+morphology, fec[,c("id","area_cm2","eggs","spp", "polyps_cm2","eggC","morphology")], mean)#
head(fec)
fec$morphology
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#source("data/data_prep.R")#
#
########################################
# DATA#
########################################
#
params<-read.csv("data/info.csv")#
gdat<-read.csv("data/growth.csv")#
sdat<-read.csv("data/survival.csv")#
fec<-read.csv("data/fecundity.csv")#
ss<-read.csv("data/size_structure.csv")#
spp<-params$spp[order(params$spp)]#
params$abun<-ifelse(params$abun_05<500, "Rare", ifelse(params$abun_05>1500, "Dominant","Common"))#
params$abun<-factor(params$abun, levels=c("Rare", "Common", "Dominant"))#
cols<-as.character(params$cols)#
#####################################
# Data prep #
# ----------------------------# mean polyp density#
pd <- read.csv("data/polyp_density.csv")#
pd.mean <- aggregate(list(polyps_cm2=pd$polyps_cm2),list(spp=pd$spp),mean)#
pd.mean <- rbind(pd.mean, data.frame(spp="AM", polyps_cm2=pd.mean$polyps_cm2[pd.mean$spp=="AL"]))#
params<-merge(params, pd.mean)#
#
# ---------------------------# mean energetics#
ec <- read.csv("data/egg_energy.csv")#
ec.mean <- aggregate(list(eggC=ec$Carbon_ug_corrected, eggN=ec$Nitrogen_ug) ,list(spp=ec$spp), mean)#
params<-merge(params, ec.mean)#
# fec#
fec$eggC <- params$eggC[match(fec$spp, params$spp)]#
fec$polyps_cm2 <- params$polyps_cm2[match(fec$spp, params$spp)]#
fec$morphology <- params$morphology[match(fec$spp, params$spp)]
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
library("viridis")#
library("png")#
theme_set(theme_cowplot())#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#source("data/data_prep.R")#
#
########################################
# DATA#
########################################
#
params<-read.csv("data/info.csv")#
gdat<-read.csv("data/growth.csv")#
sdat<-read.csv("data/survival.csv")#
fec<-read.csv("data/fecundity.csv")#
ss<-read.csv("data/size_structure.csv")#
spp<-params$spp[order(params$spp)]#
params$abun<-ifelse(params$abun_05<500, "Rare", ifelse(params$abun_05>1500, "Dominant","Common"))#
params$abun<-factor(params$abun, levels=c("Rare", "Common", "Dominant"))#
cols<-as.character(params$cols)#
#####################################
# Data prep #
# ----------------------------# mean polyp density#
pd <- read.csv("data/polyp_density.csv")#
pd.mean <- aggregate(list(polyps_cm2=pd$polyps_cm2),list(spp=pd$spp),mean)#
pd.mean <- rbind(pd.mean, data.frame(spp="AM", polyps_cm2=pd.mean$polyps_cm2[pd.mean$spp=="AL"]))#
params<-merge(params, pd.mean)#
#
# ---------------------------# mean energetics#
ec <- read.csv("data/egg_energy.csv")#
ec.mean <- aggregate(list(eggC=ec$Carbon_ug_corrected, eggN=ec$Nitrogen_ug) ,list(spp=ec$spp), mean)#
params<-merge(params, ec.mean)#
# fec#
fec$eggC <- params$eggC[match(fec$spp, params$spp)]#
fec$polyps_cm2 <- params$polyps_cm2[match(fec$spp, params$spp)]#
fec$morphology <- params$morphology[match(fec$spp, params$spp)]
params<-read.csv("data/info.csv")#
gdat<-read.csv("data/growth.csv")#
sdat<-read.csv("data/survival.csv")#
fec<-read.csv("data/fecundity.csv")#
ss<-read.csv("data/size_structure.csv")#
spp<-params$spp[order(params$spp)]#
params$abundance<-ifelse(params$abundance_05<500, "Rare", ifelse(params$abundance_05>1500, "Dominant","Common"))#
params$abundance<-factor(params$abundance, levels=c("Rare", "Common", "Dominant"))#
cols<-as.character(params$cols)
#####################################
# Data prep #
# ----------------------------# mean polyp density#
pd <- read.csv("data/polyp_density.csv")#
pd.mean <- aggregate(list(polyps_cm2=pd$polyps_cm2),list(spp=pd$spp),mean)#
pd.mean <- rbind(pd.mean, data.frame(spp="AM", polyps_cm2=pd.mean$polyps_cm2[pd.mean$spp=="AL"]))#
params<-merge(params, pd.mean)#
# ---------------------------# mean energetics#
ec <- read.csv("data/egg_energy.csv")#
ec.mean <- aggregate(list(eggC=ec$Carbon_ug_corrected, eggN=ec$Nitrogen_ug) ,list(spp=ec$spp), mean)#
params<-merge(params, ec.mean)#
# fec#
fec$eggC <- params$eggC[match(fec$spp, params$spp)]#
fec$polyps_cm2 <- params$polyps_cm2[match(fec$spp, params$spp)]#
fec$morphology <- params$morphology[match(fec$spp, params$spp)]
########################################
# FECUNDITY - PREP#
########################################
# Aggregate fecundity#
fec<-aggregate(.~id+spp_code+morphology, fec[,c("id","area_cm2","eggs","spp", "polyps_cm2","eggC","morphology")], mean)#
head(fec)
########################################
# FECUNDITY - PREP#
########################################
# Aggregate fecundity#
fec<-aggregate(.~id+spp+morphology, fec[,c("id","area_cm2","eggs","spp", "polyps_cm2","eggC","morphology")], mean)#
head(fec)#
# --------
########################################
# FECUNDITY - PREP#
########################################
# Aggregate fecundity#
fec<-aggregate(.~id+spp+morphology, fec[,c("id","area_cm2","eggs","spp", "polyps_cm2","eggC","morphology")], mean)#
head(fec)#
# --------#
fec$reproductive <- ifelse(fec$eggs>0, 1, 0) # reproductive status#
fec$area <- log10(fec$area_cm2 /10000) #
# --------#
fec$f.cm2<-fec$polyps_cm2*fec$eggs#
fec$f.colony<-fec$f.cm2*fec$area_cm2 *fec$eggC # original#
fec$f.colonyP<-round(fec$f.cm2*fec$area_cm2 * (fec$eggC/max(fec$eggC)) ,0) #
# make energy a survival proportion, and round to 0#
fec$fecundity<-fec$f.colonyP # select here
########################################
# MATURITY #
########################################
m.int<-NULL#
m.slp<-NULL#
m.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp,]#
	m.mod<-glm(reproductive ~ area, family="binomial", data=sub) #
	m.int<-c(m.int, coef(m.mod)[1])#
	m.slp<-c(m.slp, coef(m.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(m.mod, new, type="response")#
	m.pred<-rbind(m.pred, new)#
}#
params$m.int<-m.int#
params$m.slp<-m.slp#
# -------- plot#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)
########################################
# FECUNDITY  #
########################################
f.int<-NULL#
f.slp<-NULL#
f.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp & fec$reproductive==1,]#
	f.mod<-glm.nb(fecundity ~ area, sub)#
	f.int<-c(f.int, coef(f.mod)[1])#
	f.slp<-c(f.slp, coef(f.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(f.mod, new, type="response")#
	f.pred<-rbind(f.pred, new)#
	}#
params$f.int<-f.int#
params$f.slp<-f.slp#
# -------- plot#
ggplot()+ #
  geom_point(data=fec[fec$reproductive==1, ], #
    aes(area, fecundity), #
      shape=21, col="grey")+#
  geom_line(data=f.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_y_log10()+#
  scale_colour_manual(values=cols)
head(gdat)
gdat$area <- log10(gdat$area_cm2 / 10000) #
gdat$area_next <- log10(gdat$area_cm2_next / 10000)
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var#
#
ggplot()+
head(gdat)#
gdat$area <- log10(gdat$area_cm2 / 10000) #
gdat$area_next <- log10(gdat$area_cm2_next / 10000) #
gdat$morphology <- params$morphology[match(gdat$spp, params$spp)]#
#
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)
dorn<-read.csv("data/dornelas2017/dornelas2017.csv")#
trysp<-"GR"#
ggplot()+#
  geom_text(data=gdat[gdat$spp==trysp ,], #
    aes(x=log(10^area*10000), y=log(10^area_next*10000), label=colony_id))+#
  geom_text(data=dorn[dorn$species_code==trysp ,], #
    aes(x=log(area_timestep), y=log(area_nexttimestep), label=colony_id), #
      col="red")+#
  geom_smooth(data=dorn[dorn$species_code==trysp ,], #
    aes(x=log(area_timestep), y=log(area_nexttimestep)),#
       col="red", se=F, method="lm", formula=y~x)+#
  geom_smooth(data=gdat[gdat$spp==trysp ,], #
    aes(x=log(10^area*10000), y=log(10^area_next*10000)), #
      se=F, method="lm", formula=y~x)+#
  geom_abline(slope=1)
head(sdat)
sdat$area<-log10(sdat$area_cm2/10000)#
sdat$area_sq<-sdat$area^2
########################################
# SURVIVAL #
########################################
head(sdat)#
sdat$area<-log10(sdat$area_cm2/10000)#
sdat$area_sq<-sdat$area^2#
#sdat<-sdat[sdat$area>-3,]#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[!sdat$year==2012,]#
#d.cm2(-3)
########################################
# SURVIVAL #
########################################
head(sdat)#
sdat$area<-log10(sdat$area_cm2/10000)#
sdat$area_sq<-sdat$area^2#
sdat$morphology <- params$morphology[match(sdat$spp, params$spp)]#
#sdat<-sdat[sdat$area>-3,]#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[!sdat$year==2012,]#
#d.cm2(-3)#
#
#sdat<-sdat[sdat$area<quantile(sdat$area, 0.995) & sdat$area>quantile(sdat$area, 0.005),]#
#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2#
#
ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp), #
      size=0.75)+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)
# JM Survival:#
# lots of 2012 data missing, especially deaths:#
# counted F6 (final timepoint) as 1, not NA #
# areas are associated with "Previous year" not current year#
# some wrong survivals ("photographed"):#
  # -   287 F5 - small AS#
  # -   115 F5 - small AI#
# some wrong deaths e.g. huge AC 29 in F5#
madin<-read.csv("data/madin2014/madin2014.csv")#
madin$area<-log10(exp(madin$log_area_cm2))#
madin$area_sq<-madin$area^2#
madin$surv<-ifelse(madin$mortality==1, 0, 1)#
mad.p<-NULL#
s2.int<-NULL#
s2.slp<-NULL#
s2.slp2<-NULL#
for(sp in spp){#
	sub<-madin[madin$spp==sp,]#
	#s.mod2<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s2.int<-c(s2.int, coef(s.mod2)[1])#
	s2.slp<-c(s2.slp, coef(s.mod2)[2])#
	s2.slp2<-c(s2.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), spp=sp)#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	mad.p<-rbind(mad.p, new)#
}#
 # USE MADIN PARAMS
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2#
#
ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp), #
      size=0.75)+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)
# JM Survival:#
# lots of 2012 data missing, especially deaths:#
# counted F6 (final timepoint) as 1, not NA #
# areas are associated with "Previous year" not current year#
# some wrong survivals ("photographed"):#
  # -   287 F5 - small AS#
  # -   115 F5 - small AI#
# some wrong deaths e.g. huge AC 29 in F5#
madin<-read.csv("data/madin2014/madin2014.csv")#
madin$area<-log10(exp(madin$log_area_cm2))#
madin$area_sq<-madin$area^2#
madin$surv<-ifelse(madin$mortality==1, 0, 1)#
mad.p<-NULL#
s2.int<-NULL#
s2.slp<-NULL#
s2.slp2<-NULL#
for(sp in spp){#
	sub<-madin[madin$spp==sp,]#
	#s.mod2<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s2.int<-c(s2.int, coef(s.mod2)[1])#
	s2.slp<-c(s2.slp, coef(s.mod2)[2])#
	s2.slp2<-c(s2.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), spp=sp)#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	mad.p<-rbind(mad.p, new)#
}#
 # USE MADIN PARAMS#
#params$s.int<-s2.int#
#params$s.slp<-s2.slp#
#params$s.slp.2<-s2.slp2
ggplot()+#
geom_vline(xintercept=-3)+#
  geom_jitter(data=madin, aes(area, surv), shape=21, col="grey", height=0.02)+#
    #geom_text(data=madin2, aes(area, surv, label=colony_id),  size=2, position=position_jitter(height=0.03))+#
  geom_text(data=sdat, aes(area, surv, label=colony_id), #
      col="red",  size=2, position=position_jitter(height=0.03))+#
  geom_line(data=mad.p, aes(area, pred))+#
  #geom_line(data=mad2.p, aes(area, pred), linetype="dotted")+#
  geom_line(data=s.pred, aes(area, pred), col="red")+#
  facet_wrap(~spp)
spx<-"GR"#
ggplot()+#
geom_vline(xintercept=-3)+#
  geom_jitter(data=madin[madin$spp==spx,], aes(area, surv), shape=21, col="grey", height=0.01)+#
  geom_text(data=madin[madin$spp==spx,], aes(area, surv, label=colony_id),  size=2, position=position_jitter(height=0.03))+#
  geom_text(data=sdat[sdat$spp==spx,], aes(area, surv, label=colony_id), col="red",  size=2, position=position_jitter(height=0.01))+#
    geom_point(data=sdat[sdat$spp==spx & sdat$year==2012,], aes(area, surv),  size=2, shape=21)+#
  geom_line(data=mad.p[mad.p$spp==spx,], aes(area, pred))+#
  geom_line(data=s.pred[s.pred$spp==spx,], aes(area, pred), col="red")#
# numbers: #
nrow(madin[madin$spp==spx & madin$surv==1,])#
nrow(sdat[sdat$spp==spx & sdat$surv==1,])#
nrow(madin[madin$spp==spx & madin$surv==0,])#
nrow(sdat[sdat$spp==spx & sdat$surv==0,])
########################################
# MAXIMUM GROWTH  - look into AD#
########################################
library("quantreg")#
gdat$radius1<-sqrt(gdat$area1/pi)/100#
gdat$radius2<-sqrt(gdat$area2/pi)/100#
gdat$g_radius<-gdat$radius2-gdat$radius1#
#
r.int<-NULL#
r.slp<-NULL#
r.err<-NULL#
r.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	r.mod <-rq(g_radius ~ 1 , data=sub, tau=0.98) # no slope#
	#r.mod <-rq(g_radius ~ area , data=sub, tau=0.99)# slope#
	r.int<-c(r.int, coef(r.mod)[1])#
	#r.slp<-c(r.slp, coef(r.mod)[2])#
	r.err <- c(r.err, summary(r.mod, se='boot')$coef[[2]])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(r.mod, new, type="response")#
	r.pred<-rbind(r.pred, new)#
	}#
params$r.int<-r.int#
params$r.slp<-r.slp#
params$r.err<-r.err
########################################
# MAXIMUM GROWTH  - look into AD#
########################################
library("quantreg")#
gdat$radius1<-sqrt(gdat$area/pi)/100#
gdat$radius2<-sqrt(gdat$area_next/pi)/100#
gdat$g_radius<-gdat$radius2-gdat$radius1#
#
r.int<-NULL#
r.slp<-NULL#
r.err<-NULL#
r.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	r.mod <-rq(g_radius ~ 1 , data=sub, tau=0.98) # no slope#
	#r.mod <-rq(g_radius ~ area , data=sub, tau=0.99)# slope#
	r.int<-c(r.int, coef(r.mod)[1])#
	#r.slp<-c(r.slp, coef(r.mod)[2])#
	r.err <- c(r.err, summary(r.mod, se='boot')$coef[[2]])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(r.mod, new, type="response")#
	r.pred<-rbind(r.pred, new)#
	}#
params$r.int<-r.int#
params$r.slp<-r.slp#
params$r.err<-r.err
gdat$radius1<-sqrt(gdat$area/pi)/100#
gdat$radius2<-sqrt(gdat$area_next/pi)/100#
gdat$g_radius<-gdat$radius2-gdat$radius1
gdat$area_next
library("quantreg")#
gdat$radius1<-sqrt(gdat$area_cm2/pi)/100#
gdat$radius2<-sqrt(gdat$area_cm2_next/pi)/100#
gdat$g_radius<-gdat$radius2-gdat$radius1
r.int<-NULL#
r.slp<-NULL#
r.err<-NULL#
r.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	r.mod <-rq(g_radius ~ 1 , data=sub, tau=0.98) # no slope#
	#r.mod <-rq(g_radius ~ area , data=sub, tau=0.99)# slope#
	r.int<-c(r.int, coef(r.mod)[1])#
	#r.slp<-c(r.slp, coef(r.mod)[2])#
	r.err <- c(r.err, summary(r.mod, se='boot')$coef[[2]])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(r.mod, new, type="response")#
	r.pred<-rbind(r.pred, new)#
	}#
params$r.int<-r.int#
params$r.slp<-r.slp#
params$r.err<-r.err
ggplot()+#
 geom_point(data=gdat, aes(x=area, y=g_radius), col="grey", shape=21)+#
     geom_line(data=r.pred, aes(x=area, y=pred, col=spp))+#
   scale_colour_manual(values=c(cols))#+facet_wrap(~spp)
########################################
# PARTIAL MORTALITY  - subset??#
########################################
logit <- function(x) { log(x/(1-x)) }#
inv.logit <- function(x) { exp(x)/(1+exp(x)) }#
#
gdat$max_g<-params$r.int[match(gdat$spp, params$spp)] #
gdat$max_area2<-pi*(gdat$max_g + gdat$radius1)^2 # eq. 2.1 #
gdat$p_mort<-  1 - ((gdat$area2/10000)/gdat$max_area2) # eq. 2.2#
gdat$p_stasis<-  1 - ((gdat$area1/10000)/gdat$max_area2) #
pdat<-subset(gdat, p_mort>0.001) # less than max growth line#
#pdat<-subset(dat, p_mort>0) # zero#
pdat$pm_logit <- logit(pdat$p_mort)
gdat$max_g<-params$r.int[match(gdat$spp, params$spp)] #
gdat$max_area2<-pi*(gdat$max_g + gdat$radius1)^2 # eq. 2.1 #
gdat$p_mort<-  1 - ((gdat$area_cm2_next/10000)/gdat$max_area2) # eq. 2.2#
gdat$p_stasis<-  1 - ((gdat$area_cm2/10000)/gdat$max_area2) #
pdat<-subset(gdat, p_mort>0.001) # less than max growth line#
#pdat<-subset(dat, p_mort>0) # zero#
pdat$pm_logit <- logit(pdat$p_mort)
p.int<-NULL#
p.slp<-NULL#
p.pred<-NULL#
p.sig<-NULL#
for(sp in spp){#
	sub<-pdat[pdat$spp==sp,]#
	p.mod<-lm(pm_logit ~ area , data=sub)#
	p.int <- c(p.int, coef(p.mod)[[1]])#
	p.slp <- c(p.slp, coef(p.mod)[[2]])#
	p.sig <- c(p.sig, sigma(p.mod))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(p.mod, new, type="response")#
	p.pred<-rbind(p.pred, new)#
	}#
params$p.int<-p.int#
params$p.slp<-p.slp#
params$p.sig<-p.sig
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred))+facet_wrap(~spp)
########################################
# MIN/MAX SIZE#
########################################
head(ss)#
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area#
#params$smax<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),max)[,c("a","b")], 1, max)#
#params$smin<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),min)[,c("a","b")], 1, min)
########################################
head(ss)#
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area#
#params$smax<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),max)[,c("a","b")], 1, max)#
#params$smin<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),min)[,c("a","b")], 1, min)
########################################
head(ss)#
dat<-read.csv("data/trimodal.csv")#
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area#
#params$smax<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),max)[,c("a","b")], 1, max)#
#params$smin<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),min)[,c("a","b")], 1, min)
###################################################
#### ######  ##  ##   #####
 ##  ##  ## ## ## ##  ###
 ##  #####  ## ## ##    ###
 ##  ##     ## ## ##     ###
#### ##     ## ## ##  #####
###################################################
options(stringsAsFactors=FALSE)#
#
#------------------------------- growth#
g.yx <- function(y, x) {#
	dnorm(y, mean=params$g.int[params$spp==sp] + #
	  params$g.slp[params$spp==sp]*x,#
	    sd=sqrt(params$g.var[params$spp==sp]))#
	    }#
#-------------------------------survival#
s.x <- function(x) { #
	u <- params$s.int[params$spp==sp] + #
	  params$s.slp[params$spp==sp] * x + #
	    params$s.slp.2[params$spp==sp] * x^2#
  return(inv.logit(u)) #
  }#
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	siz <- dnorm(y,mean=log10(0.6*pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
########################################
# MULTIPLE REC/LAMBDAS#
########################################
#
store<-data.frame()#
recx<-c(1*10^-3, 1*10^-4, 1*10^-5, 1*10^-6, 1*10^-7, 1*10^-8)#
for (sp in spp) {#
	for (rec in recx){#
	smax<-params[params$spp==sp, "smax"]#
  	sub<-dat[dat$spp==sp,]#
  	rec<-rec#
   mod <- bigmatrix()#
  store<-rbind(store, data.frame(sp=sp, rec=rec, lam=bigmatrix()$lam))#
  } }#
recdat<- dcast(store, sp~rec, value.var='lam')#
params$lam_0<-recdat[,"1e-08"]#
params$lam_1<-recdat[,"1e-07"]#
params$lam_2<-recdat[,"1e-06"]#
params$lam_3<-recdat[,"1e-05"]#
params$lam_4<-recdat[,"1e-04"]
########################################
# EXPLORE LAMBDA#
########################################
lam<-expression(lambda)#
lamlong<-melt(params, measure.vars=c("lam_0","lam_1","lam_2","lam_3", "lam_4"), value.name="lambda")#
#-------------------------------#
params2<-rbind(params, params[6,]) #duplicate millepora(should it be nasuta?) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#
comp<-dcast(params2, morph~abunJM, value.var="spp")#
comp$sp<-apply(comp[,c(2,3)], 1, paste, collapse = ":")#
comp$lam_0<-transform(dcast(params2, morph~abunJM, value.var="lam_0"), x=Common/Rare)$x#
comp$lam_1<-transform(dcast(params2, morph~abunJM, value.var="lam_1"), x=Common/Rare)$x#
comp$lam_2<-transform(dcast(params2, morph~abunJM, value.var="lam_2"), x=Common/Rare)$x#
comp$lam_3<-transform(dcast(params2, morph~abunJM, value.var="lam_3"), x=Common/Rare)$x#
comp$lam_4<-transform(dcast(params2, morph~abunJM, value.var="lam_4"), x=Common/Rare)$x#
comp<-melt(comp, id.vars=c("morph","sp","Common","Rare"))#
#------------------------------- #
comp$morph<-factor(comp$morph, levels=c("tabular","staghorn", "corymbose", "corymbose_2", "digitate","massive"))#
ggplot(comp)+#
geom_bar(aes(x=morph, y=value),stat="identity", col="black", fill="grey")+#
geom_text(aes(x=morph, y=value+0.01, label=sp), size=2, angle=90)+#
coord_flip()+scale_y_log10()+#
theme(axis.line.y=element_blank(), strip.background=element_blank(), axis.title.y=element_blank())+#
ylab("lambda ratio")+#
facet_wrap(~variable, nrow=2)
lam<-expression(lambda)#
lamlong<-melt(params, measure.vars=c("lam_0","lam_1","lam_2","lam_3", "lam_4"), value.name="lambda")#
#-------------------------------#
params2<-rbind(params, params[6,]) #duplicate millepora(should it be nasuta?) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#
comp<-dcast(params2, morph~abundance_pairs, value.var="spp")
params
lamlong<-melt(params, measure.vars=c("lam_0","lam_1","lam_2","lam_3", "lam_4"), value.name="lambda")#
#-------------------------------#
params2<-rbind(params, params[6,]) #duplicate millepora(should it be nasuta?) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
comp$sp<-apply(comp[,c(2,3)], 1, paste, collapse = ":")#
comp$lam_0<-transform(dcast(params2, morph~abunJM, value.var="lam_0"), x=Common/Rare)$x#
comp$lam_1<-transform(dcast(params2, morph~abunJM, value.var="lam_1"), x=Common/Rare)$x#
comp$lam_2<-transform(dcast(params2, morph~abunJM, value.var="lam_2"), x=Common/Rare)$x#
comp$lam_3<-transform(dcast(params2, morph~abunJM, value.var="lam_3"), x=Common/Rare)$x#
comp$lam_4<-transform(dcast(params2, morph~abunJM, value.var="lam_4"), x=Common/Rare)$x#
comp<-melt(comp, id.vars=c("morph","sp","Common","Rare"))
#-------------------------------#
params2<-rbind(params, params[6,]) #duplicate millepora(should it be nasuta?) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
comp$sp<-apply(comp[,c(2,3)], 1, paste, collapse = ":")#
comp$lam_0<-transform(dcast(params2, morph~abundance_pair, value.var="lam_0"), x=Common/Rare)$x#
comp$lam_1<-transform(dcast(params2, morph~abundance_pair, value.var="lam_1"), x=Common/Rare)$x#
comp$lam_2<-transform(dcast(params2, morph~abundance_pair, value.var="lam_2"), x=Common/Rare)$x#
comp$lam_3<-transform(dcast(params2, morph~abundance_pair, value.var="lam_3"), x=Common/Rare)$x#
comp$lam_4<-transform(dcast(params2, morph~abundance_pair, value.var="lam_4"), x=Common/Rare)$x#
comp<-melt(comp, id.vars=c("morph","sp","Common","Rare"))#
#------------------------------- #
comp$morph<-factor(comp$morph, levels=c("tabular","staghorn", "corymbose", "corymbose_2", "digitate","massive"))#
ggplot(comp)+#
geom_bar(aes(x=morph, y=value),stat="identity", col="black", fill="grey")+#
geom_text(aes(x=morph, y=value+0.01, label=sp), size=2, angle=90)+#
coord_flip()+scale_y_log10()+#
theme(axis.line.y=element_blank(), strip.background=element_blank(), axis.title.y=element_blank())+#
ylab("lambda ratio")+#
facet_wrap(~variable, nrow=2)
########################################
# ELASTICITY#
########################################
 # eigen-things can be combined to obtain the sensitivity and elasticity matrices.#
rec<-1*10^-6#
#
analyses<-function(){#
	#sp<-"GR"#
	K<-bigmatrix()$K#
	lam <- Re(eigen(K)$values[1])#
  w.eigen<-Re(eigen(K)$vectors[,1]) # w=right eigen=stable size dist. #
  v.eigen<-Re(eigen(t(K))$vectors[,1]) # v=left, reproductive value=contribution of each size class to pop size. #
stable.size <- w.eigen/sum(w.eigen)#
repro.val <- v.eigen/v.eigen[1] #
v.dot.w<-sum(stable.size*repro.val)*h #
sens<-outer(repro.val,stable.size)/v.dot.w  #
elas<-matrix(as.vector(sens)*(as.vector(K)/h)/lam, nrow=n)#
P.elas<-(bigmatrix()$P/h)*sens/lam#
R.elas<-(bigmatrix()$R/h)*sens/lam#
return(list(st=stable.size, rv=repro.val, sa=sens, eK=elas, eP=P.elas, eR=R.elas))}#
#
sum(analyses()$eK)*h^2
props<-NULL #
for (sp in spp) {#
props<-rbind(props, data.frame(eP=sum(analyses()$eP)*h^2, eR=sum(analyses()$eR)*h^2, sp=sp))#
	}#
props#
params$eP<-props$eP#
params$eR<-props$eR#
rowSums(props[,c(1,2)])
########################################
# R.ELASTICITY VS RECRUITMENT SENSITIVITY#
########################################
#
ggplot(data=params, aes(x=eR, y=lam_4-lam_1))+#
  geom_text(aes(label=spp))+#
  geom_smooth(method="lm", formula=y~x)+#
  scale_x_log10()+#
  scale_y_log10()+#
  labs(x="R.elasticity", y="change in lambda")
########################################
# R.ELASTICITY vs MORPH/ABUNDANCE#
########################################
#
params$R<-ifelse(params$morph=="massive", "S", ifelse(params$morph=="digitate", "R", "R"))#
mod<-lm(eR~log(abun_05), subset(params, R!="S"))#
summary(mod)#
#
plot_grid(#
ggplot(data=params, aes(y=eR, x=abun_05))+#
geom_smooth(method="lm", formula=y~poly(x,2))+geom_text(aes(label=spp))+#
scale_x_log10()+#
scale_y_log10()+#
labs(y="R.elasticity")#+facet_wrap(~R)#
,#
ggplot(data=params, aes(x=reorder(morph, -eR), y=eR))+geom_boxplot()+#
geom_point()+labs(y="R.elasticity")+#
scale_y_log10()+#
geom_text(aes(label=spp), nudge_x=0.15, col="red")#
)
params$R<-ifelse(params$morph=="massive", "S", ifelse(params$morph=="digitate", "R", "R"))#
mod<-lm(eR~log(abundance_05), subset(params, R!="S"))#
summary(mod)#
#
plot_grid(#
ggplot(data=params, aes(y=eR, x=abundance_05))+#
geom_smooth(method="lm", formula=y~poly(x,2))+geom_text(aes(label=spp))+#
scale_x_log10()+#
scale_y_log10()+#
labs(y="R.elasticity")#+facet_wrap(~R)#
,#
ggplot(data=params, aes(x=reorder(morph, -eR), y=eR))+geom_boxplot()+#
geom_point()+labs(y="R.elasticity")+#
scale_y_log10()+#
geom_text(aes(label=spp), nudge_x=0.15, col="red")#
)
params$R<-ifelse(params$morphology=="massive", "S", ifelse(params$morphology=="digitate", "R", "R"))#
mod<-lm(eR~log(abundance_05), subset(params, R!="S"))#
summary(mod)
plot_grid(#
ggplot(data=params, aes(y=eR, x=abundance_05))+#
geom_smooth(method="lm", formula=y~poly(x,2))+geom_text(aes(label=spp))+#
scale_x_log10()+#
scale_y_log10()+#
labs(y="R.elasticity")#+facet_wrap(~R)#
,#
ggplot(data=params, aes(x=reorder(morph, -eR), y=eR))+geom_boxplot()+#
geom_point()+labs(y="R.elasticity")+#
scale_y_log10()+#
geom_text(aes(label=spp), nudge_x=0.15, col="red")#
)
plot_grid(#
ggplot(data=params, aes(y=eR, x=abundance_05))+#
geom_smooth(method="lm", formula=y~poly(x,2))+geom_text(aes(label=spp))+#
scale_x_log10()+#
scale_y_log10()+#
labs(y="R.elasticity")#+facet_wrap(~R)#
,#
ggplot(data=params, aes(x=reorder(morphology, -eR), y=eR))+geom_boxplot()+#
geom_point()+labs(y="R.elasticity")+#
scale_y_log10()+#
geom_text(aes(label=spp), nudge_x=0.15, col="red")#
)
ggplot(params, aes(r.int, eR, col=spp))+#
geom_line(aes(group=morph))+#
geom_point(aes(size=abun_05))+#
  scale_x_log10()+#
  scale_y_log10()+#
scale_colour_manual(values=cols)+scale_x_sqrt()#+facet_wrap(~R)
ggplot(params, aes(r.int, eR, col=spp))+#
geom_line(aes(group=morphology))+#
geom_point(aes(size=abundance_05))+#
  scale_x_log10()+#
  scale_y_log10()+#
scale_colour_manual(values=cols)+scale_x_sqrt()#+facet_wrap(~R)
########################################
# EXPLORE LAMBDA II#
########################################
#
ggplot(data=lamlong)+ #
geom_hline(yintercept=1, linetype="dotted")+#
geom_line(aes(x=abun, y=lambda, col=spp, group=variable))+#
 geom_point(aes(x=abun, y=lambda, fill=spp, size=variable), shape=21)+#
 guides(fill="none", col="none")+labs(y=lam)+ scale_fill_manual(values=as.character(params$cols))+#
 scale_colour_manual(values=as.character(params$cols))+#
 facet_wrap(~morph, scales="free_x")+#
 theme(axis.text.x=element_text(angle=90, size=5))
ggplot(data=lamlong)+ #
geom_hline(yintercept=1, linetype="dotted")+#
geom_line(aes(x=abundance, y=lambda, col=spp, group=variable))+#
 geom_point(aes(x=abundance, y=lambda, fill=spp, size=variable), shape=21)+#
 guides(fill="none", col="none")+labs(y=lam)+ scale_fill_manual(values=as.character(params$cols))+#
 scale_colour_manual(values=as.character(params$cols))+#
 facet_wrap(~morphology, scales="free_x")+#
 theme(axis.text.x=element_text(angle=90, size=5))
# Lamda abundance... #
pdat<-lamlong[lamlong$variable=="lam_3",]#
#pdat<-lamlong[lamlong$variable!="lam_4",]#
#pdat<-lamlong#
plot_grid(ggplot(pdat,aes(x=abundance_05, y=lambda, col=variable, fill=variable))+#
geom_smooth(method="lm", formula=y~poly(x,2), size=0.5)+#
#geom_hline(yintercept=1, linetype="dotted")+#
geom_text(aes(label=spp), size=3)+#
labs(x="abundance", y=lam)+theme(legend.title=element_blank(), axis.text=element_text(size=8))+#
scale_x_log10(),#
ggplot(pdat,aes(x=r.int, y=lambda, col=variable, fill=variable))+#
geom_smooth(method="lm", formula=y~poly(x,2), size=0.5)+#
#geom_hline(yintercept=1, linetype="dotted")+#
geom_text(aes(label=spp), size=3)+#
labs(x="growth", y=lam)+theme(legend.title=element_blank(), axis.text=element_text(size=8))+#
scale_x_log10(),#
nrow=1)
########################################
#-------------------------------  min.size/max.size-lamda relationship#
########################################
#
store<-data.frame()#
minx<-c(-6,-5,-4,-3,-2,-1)#
for (sp in spp) {#
	for(min.size2 in minx){#
		min.size2<-min.size2#
		max.size <- max.size #2#
		rec.size <- rec.size#
		n <- 100#
		b <- min.size2 + c(0:n) * (max.size - min.size2)/n#
		y <- 0.5 * (b[1:n]+b[2:(n+1)])#
		h <- y[2] - y[1]#
		store<-rbind(store, data.frame(sp=sp, min.size=min.size2, lam=bigmatrix()$lam)) }}#
ggplot(data=store, aes(x=min.size, y=lam, colour=sp))+#
geom_line()+geom_hline(yintercept=1)+#
geom_vline(xintercept=min.size, linetype="dotted")+#
ggtitle("relative differences")+#
scale_colour_manual(values=as.character(params$cols))
store<-data.frame()#
maxx <- c( 0,1,2,3, 4,5)#
for (sp in spp) {#
	for(max.size2 in maxx){#
		max.size2<-max.size2#
		min.size <- min.size #2#
rec.size <- -2.7#
n <- 100#
b <- min.size + c(0:n) * (max.size2 - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
		store<-rbind(store, data.frame(sp=sp, max.size=max.size2, lam=bigmatrix()$lam)) }}#
ggplot(data=store, aes(x=max.size, y=lam, colour=sp))+#
geom_line()+geom_hline(yintercept=1)+#
geom_vline(xintercept=max.size, linetype="dotted")+#
#lims(x=c(0, 0.00001), y=c(0,4))+#
ggtitle("relative differences")+#
scale_colour_manual(values=as.character(params$cols))
########################################
# TRADEOFFS #
########################################
head(params)#
#
# survival#
params$p_mort<-inv.logit((params$p.slp*log10(0.01))+params$p.int)#
params$av.surv<-aggregate(pred~spp, s.pred,mean)$pred#
params$survcm<-aggregate(pred~spp, s.pred[s.pred$area<log10(pi*(11/100/2)^2),], FUN=mean)$pred#
max.surv<-do.call(rbind, lapply(split(s.pred,as.factor(s.pred$spp)), function(x) {return(x[which.max(x$pred),])}))#
params$safe.size<-max.surv$area
# growth#
gdat$growth<-gdat$area2-gdat$area1	#
params$av.growth<-aggregate(growth~spp, gdat[gdat$growth>0,], mean)$growth#
#
# reproduction#
params$f.cm2<-aggregate(f.cm2~spp, fec,mean)$f.cm2#
params$en.cm2<-params$f.cm2*params$eggC#
params$min.r<-aggregate(area_cm2~spp, fec[fec$reproductive==1,], min)$area_cm2
# growth#
gdat$growth<-gdat$area_cm2_next-gdat$area_cm2	#
params$av.growth<-aggregate(growth~spp, gdat[gdat$growth>0,], mean)$growth
# reproduction#
params$f.cm2<-aggregate(f.cm2~spp, fec,mean)$f.cm2#
params$en.cm2<-params$f.cm2*params$eggC#
params$min.r<-aggregate(area_cm2~spp, fec[fec$reproductive==1,], min)$area_cm2
colnames(params)#
pca<-prcomp(params[,c("r.int", "f.cm2","survcm","av.surv","p_mort")], scale=T, center=T)#
#pca<-prcomp(params[,c("r.int", "f.cm2","av.surv", "p_mort")], scale=T, center=T)#
pcdat<-data.frame(spp=params$spp, x=pca$x[,1], y=pca$x[,2], abun=params$abundance_05)#
rot<-data.frame(spp=rownames(pca$rotation), x=pca$rotation[,1], y=pca$rotation[,2])#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100
ggplot()+#
geom_segment(data=rot, aes(x=0,y=0, xend=x, yend=y), arrow=arrow(length=unit(1, "mm")))+#
geom_text(data=rot, aes(x*1.2, y*1.2, label=spp))+#
geom_point(data=pcdat, aes(x,y, col=spp, size=abun))+#
geom_text(data=pcdat, aes(x,y, label=spp), size=3)+#
scale_colour_manual(values=c(cols))+#
guides(colour="none", size="none")+scale_radius(range=c(5,12))+#
labs(x=paste("PC1 (",exp[1],"%)", sep=""),y=paste("PC2 (",exp[2],"%)", sep=""))+#
theme_bw()
# linear models..#
#
lm.plot<-function(x, y, n){#
	dat<-params#
	dat$x<-params[,x]#
	dat$y<-params[,y]#
    ggplot(dat, aes(x,y))+	#
    geom_smooth(method="lm", formula=y~poly(x,n))+#
	geom_point(aes(fill=spp), shape=21, size=3.5)+#
	geom_text(aes(label=spp), size=1.5)+#
	labs(x=x, y=y)+#
	scale_fill_manual(values=paste(cols))+guides(fill="none")+#
	theme(axis.text=element_text(size=6),axis.title=element_text(size=10))#
}#
#
# growth#
plot_grid(#
lm.plot("r.int","min.r",1)+scale_x_log10()+scale_y_log10(),#
lm.plot("r.int","p_mort",1)+scale_x_log10(), #
lm.plot("r.int","safe.size",1)+scale_x_log10(),#
lm.plot("r.int","survcm",2)+scale_x_log10(),#
lm.plot("r.int","av.surv",2)+scale_x_log10(),#
lm.plot("r.int","f.cm2",2)+scale_x_log10(),#
lm.plot("r.int","en.cm2",1)+scale_x_log10(),#
align="hv")
head(gdat)
unique(gdat$year)
head(gdat)#
unique(gdat$year)#
nrow(gdat)#
gdat <- gdat[!gdat$year==2014,]#
nrow(gdat)
unique(sdat$year)
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
library("viridis")#
library("png")#
theme_set(theme_cowplot())#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#source("data/data_prep.R")#
#
########################################
# DATA#
########################################
#
params<-read.csv("data/info.csv")#
gdat<-read.csv("data/growth.csv")#
sdat<-read.csv("data/survival.csv")#
fec<-read.csv("data/fecundity.csv")#
ss<-read.csv("data/size_structure.csv")#
spp<-params$spp[order(params$spp)]#
params$abundance<-ifelse(params$abundance_05<500, "Rare", ifelse(params$abundance_05>1500, "Dominant","Common"))#
params$abundance<-factor(params$abundance, levels=c("Rare", "Common", "Dominant"))#
cols<-as.character(params$cols)#
#####################################
# Data prep #
# ---- remove F9 (hurricane)#
unique(gdat$year)#
nrow(gdat)#
gdat <- gdat[!gdat$year==2014,]#
nrow(gdat)#
#
unique(sdat$year)
sdat$surv
sdat$surv <- ifelse(sdat$year==2014, NA, sdat$surv)
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
library("viridis")#
library("png")#
theme_set(theme_cowplot())#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#source("data/data_prep.R")#
#
########################################
# DATA#
########################################
#
params<-read.csv("data/info.csv")#
gdat<-read.csv("data/growth.csv")#
sdat<-read.csv("data/survival.csv")#
fec<-read.csv("data/fecundity.csv")#
ss<-read.csv("data/size_structure.csv")#
spp<-params$spp[order(params$spp)]#
params$abundance<-ifelse(params$abundance_05<500, "Rare", ifelse(params$abundance_05>1500, "Dominant","Common"))#
params$abundance<-factor(params$abundance, levels=c("Rare", "Common", "Dominant"))#
cols<-as.character(params$cols)#
#####################################
# Data prep #
# ---- remove F9 (hurricane)#
unique(gdat$year)#
nrow(gdat)#
gdat <- gdat[!gdat$year==2014,] ##
nrow(gdat)#
#
unique(sdat$year)#
nrow(sdat)#
sdat <- sdat[!sdat$year==2015,]#
nrow(sdat)#
sdat$surv <- ifelse(sdat$year==2014, NA, sdat$surv)
sdat$surv
# ----------------------------# mean polyp density#
pd <- read.csv("data/polyp_density.csv")#
pd.mean <- aggregate(list(polyps_cm2=pd$polyps_cm2),list(spp=pd$spp),mean)#
pd.mean <- rbind(pd.mean, data.frame(spp="AM", polyps_cm2=pd.mean$polyps_cm2[pd.mean$spp=="AL"]))#
params<-merge(params, pd.mean)#
# ---------------------------# mean energetics#
ec <- read.csv("data/egg_energy.csv")#
ec.mean <- aggregate(list(eggC=ec$Carbon_ug_corrected, eggN=ec$Nitrogen_ug) ,list(spp=ec$spp), mean)#
params<-merge(params, ec.mean)#
# fec#
fec$eggC <- params$eggC[match(fec$spp, params$spp)]#
fec$polyps_cm2 <- params$polyps_cm2[match(fec$spp, params$spp)]#
fec$morphology <- params$morphology[match(fec$spp, params$spp)]#
########################################
# FECUNDITY - PREP#
########################################
# Aggregate fecundity#
fec<-aggregate(.~id+spp+morphology, fec[,c("id","area_cm2","eggs","spp", "polyps_cm2","eggC","morphology")], mean)#
head(fec)#
# --------#
fec$reproductive <- ifelse(fec$eggs>0, 1, 0) # reproductive status#
fec$area <- log10(fec$area_cm2 /10000) #
# --------#
fec$f.cm2<-fec$polyps_cm2*fec$eggs#
fec$f.colony<-fec$f.cm2*fec$area_cm2 *fec$eggC # original#
fec$f.colonyP<-round(fec$f.cm2*fec$area_cm2 * (fec$eggC/max(fec$eggC)) ,0) #
# make energy a survival proportion, and round to 0#
fec$fecundity<-fec$f.colonyP # select here#
########################################
# MATURITY #
########################################
m.int<-NULL#
m.slp<-NULL#
m.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp,]#
	m.mod<-glm(reproductive ~ area, family="binomial", data=sub) #
	m.int<-c(m.int, coef(m.mod)[1])#
	m.slp<-c(m.slp, coef(m.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(m.mod, new, type="response")#
	m.pred<-rbind(m.pred, new)#
}#
params$m.int<-m.int#
params$m.slp<-m.slp#
# -------- plot#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)#
########################################
# FECUNDITY  #
########################################
f.int<-NULL#
f.slp<-NULL#
f.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp & fec$reproductive==1,]#
	f.mod<-glm.nb(fecundity ~ area, sub)#
	f.int<-c(f.int, coef(f.mod)[1])#
	f.slp<-c(f.slp, coef(f.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(f.mod, new, type="response")#
	f.pred<-rbind(f.pred, new)#
	}#
params$f.int<-f.int#
params$f.slp<-f.slp#
# -------- plot#
ggplot()+ #
  geom_point(data=fec[fec$reproductive==1, ], #
    aes(area, fecundity), #
      shape=21, col="grey")+#
  geom_line(data=f.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_y_log10()+#
  scale_colour_manual(values=cols)#
########################################
# GROWTH #
########################################
head(gdat)#
gdat$area <- log10(gdat$area_cm2 / 10000) #
gdat$area_next <- log10(gdat$area_cm2_next / 10000) #
gdat$morphology <- params$morphology[match(gdat$spp, params$spp)]#
#
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var#
#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)#
dorn<-read.csv("data/dornelas2017/dornelas2017.csv")#
trysp<-"GR"#
ggplot()+#
  geom_text(data=gdat[gdat$spp==trysp ,], #
    aes(x=log(10^area*10000), y=log(10^area_next*10000), label=colony_id))+#
  geom_text(data=dorn[dorn$species_code==trysp ,], #
    aes(x=log(area_timestep), y=log(area_nexttimestep), label=colony_id), #
      col="red")+#
  geom_smooth(data=dorn[dorn$species_code==trysp ,], #
    aes(x=log(area_timestep), y=log(area_nexttimestep)),#
       col="red", se=F, method="lm", formula=y~x)+#
  geom_smooth(data=gdat[gdat$spp==trysp ,], #
    aes(x=log(10^area*10000), y=log(10^area_next*10000)), #
      se=F, method="lm", formula=y~x)+#
  geom_abline(slope=1)
########################################
# SURVIVAL #
########################################
head(sdat)#
sdat$area<-log10(sdat$area_cm2/10000)#
sdat$area_sq<-sdat$area^2#
sdat$morphology <- params$morphology[match(sdat$spp, params$spp)]#
#sdat<-sdat[sdat$area>-3,]#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[!sdat$year==2012,]#
#d.cm2(-3)#
#
#sdat<-sdat[sdat$area<quantile(sdat$area, 0.995) & sdat$area>quantile(sdat$area, 0.005),]#
#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2#
#
ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp), #
      size=0.75)+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)
# JM Survival:#
# lots of 2012 data missing, especially deaths:#
# counted F6 (final timepoint) as 1, not NA #
# areas are associated with "Previous year" not current year#
# some wrong survivals ("photographed"):#
  # -   287 F5 - small AS#
  # -   115 F5 - small AI#
# some wrong deaths e.g. huge AC 29 in F5#
madin<-read.csv("data/madin2014/madin2014.csv")#
madin$area<-log10(exp(madin$log_area_cm2))#
madin$area_sq<-madin$area^2#
madin$surv<-ifelse(madin$mortality==1, 0, 1)#
mad.p<-NULL#
s2.int<-NULL#
s2.slp<-NULL#
s2.slp2<-NULL#
for(sp in spp){#
	sub<-madin[madin$spp==sp,]#
	#s.mod2<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s2.int<-c(s2.int, coef(s.mod2)[1])#
	s2.slp<-c(s2.slp, coef(s.mod2)[2])#
	s2.slp2<-c(s2.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), spp=sp)#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	mad.p<-rbind(mad.p, new)#
}#
 # USE MADIN PARAMS#
#params$s.int<-s2.int#
#params$s.slp<-s2.slp#
#params$s.slp.2<-s2.slp2#
#
ggplot()+#
geom_vline(xintercept=-3)+#
  geom_jitter(data=madin, aes(area, surv), shape=21, col="grey", height=0.02)+#
    #geom_text(data=madin2, aes(area, surv, label=colony_id),  size=2, position=position_jitter(height=0.03))+#
  geom_text(data=sdat, aes(area, surv, label=colony_id), #
      col="red",  size=2, position=position_jitter(height=0.03))+#
  geom_line(data=mad.p, aes(area, pred))+#
  #geom_line(data=mad2.p, aes(area, pred), linetype="dotted")+#
  geom_line(data=s.pred, aes(area, pred), col="red")+#
  facet_wrap(~spp)
spx<-"GR"#
ggplot()+#
geom_vline(xintercept=-3)+#
  geom_jitter(data=madin[madin$spp==spx,], aes(area, surv), shape=21, col="grey", height=0.01)+#
  geom_text(data=madin[madin$spp==spx,], aes(area, surv, label=colony_id),  size=2, position=position_jitter(height=0.03))+#
  geom_text(data=sdat[sdat$spp==spx,], aes(area, surv, label=colony_id), col="red",  size=2, position=position_jitter(height=0.01))+#
    geom_point(data=sdat[sdat$spp==spx & sdat$year==2012,], aes(area, surv),  size=2, shape=21)+#
  geom_line(data=mad.p[mad.p$spp==spx,], aes(area, pred))+#
  geom_line(data=s.pred[s.pred$spp==spx,], aes(area, pred), col="red")#
# numbers: #
nrow(madin[madin$spp==spx & madin$surv==1,])#
nrow(sdat[sdat$spp==spx & sdat$surv==1,])#
nrow(madin[madin$spp==spx & madin$surv==0,])#
nrow(sdat[sdat$spp==spx & sdat$surv==0,])#
########################################
# MAXIMUM GROWTH  - look into AD#
########################################
library("quantreg")#
gdat$radius1<-sqrt(gdat$area_cm2/pi)/100#
gdat$radius2<-sqrt(gdat$area_cm2_next/pi)/100#
gdat$g_radius<-gdat$radius2-gdat$radius1#
#
r.int<-NULL#
r.slp<-NULL#
r.err<-NULL#
r.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	r.mod <-rq(g_radius ~ 1 , data=sub, tau=0.98) # no slope#
	#r.mod <-rq(g_radius ~ area , data=sub, tau=0.99)# slope#
	r.int<-c(r.int, coef(r.mod)[1])#
	#r.slp<-c(r.slp, coef(r.mod)[2])#
	r.err <- c(r.err, summary(r.mod, se='boot')$coef[[2]])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(r.mod, new, type="response")#
	r.pred<-rbind(r.pred, new)#
	}#
params$r.int<-r.int#
params$r.slp<-r.slp#
params$r.err<-r.err#
ggplot()+#
 geom_point(data=gdat, aes(x=area, y=g_radius), col="grey", shape=21)+#
     geom_line(data=r.pred, aes(x=area, y=pred, col=spp))+#
   scale_colour_manual(values=c(cols))#+facet_wrap(~spp)#
########################################
# PARTIAL MORTALITY  - subset??#
########################################
logit <- function(x) { log(x/(1-x)) }#
inv.logit <- function(x) { exp(x)/(1+exp(x)) }#
#
gdat$max_g<-params$r.int[match(gdat$spp, params$spp)] #
gdat$max_area2<-pi*(gdat$max_g + gdat$radius1)^2 # eq. 2.1 #
gdat$p_mort<-  1 - ((gdat$area_cm2_next/10000)/gdat$max_area2) # eq. 2.2#
gdat$p_stasis<-  1 - ((gdat$area_cm2/10000)/gdat$max_area2) #
pdat<-subset(gdat, p_mort>0.001) # less than max growth line#
#pdat<-subset(dat, p_mort>0) # zero#
pdat$pm_logit <- logit(pdat$p_mort) #
#
p.int<-NULL#
p.slp<-NULL#
p.pred<-NULL#
p.sig<-NULL#
for(sp in spp){#
	sub<-pdat[pdat$spp==sp,]#
	p.mod<-lm(pm_logit ~ area , data=sub)#
	p.int <- c(p.int, coef(p.mod)[[1]])#
	p.slp <- c(p.slp, coef(p.mod)[[2]])#
	p.sig <- c(p.sig, sigma(p.mod))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(p.mod, new, type="response")#
	p.pred<-rbind(p.pred, new)#
	}#
params$p.int<-p.int#
params$p.slp<-p.slp#
params$p.sig<-p.sig#
#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred))+facet_wrap(~spp)#
########################################
# MIN/MAX SIZE#
########################################
head(ss)#
dat<-read.csv("data/trimodal.csv")#
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area#
#params$smax<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),max)[,c("a","b")], 1, max)#
#params$smin<-apply(aggregate(list(a=dat$area, b=dat$area_next), by=list(dat$spp),min)[,c("a","b")], 1, min)#
###################################################
#### ######  ##  ##   #####
 ##  ##  ## ## ## ##  ###
 ##  #####  ## ## ##    ###
 ##  ##     ## ## ##     ###
#### ##     ## ## ##  #####
###################################################
options(stringsAsFactors=FALSE)#
#
#------------------------------- growth#
g.yx <- function(y, x) {#
	dnorm(y, mean=params$g.int[params$spp==sp] + #
	  params$g.slp[params$spp==sp]*x,#
	    sd=sqrt(params$g.var[params$spp==sp]))#
	    }#
#-------------------------------survival#
s.x <- function(x) { #
	u <- params$s.int[params$spp==sp] + #
	  params$s.slp[params$spp==sp] * x + #
	    params$s.slp.2[params$spp==sp] * x^2#
  return(inv.logit(u)) #
  }#
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	siz <- dnorm(y,mean=log10(0.6*pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	size <- pi*params$r.int[params$spp==sp]^2#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- pi*params$r.int[params$spp==sp]^2#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- log10(pi*params$r.int[params$spp==sp]^2)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	#siz <- log10(pi*params$r.int[params$spp==sp]^2)#
 	siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- log10(pi*params$r.int[params$spp==sp]^2)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-100#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.1)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
source("R/data_prep.R")
########################################
# MATURITY #
########################################
fec$reproductive <- ifelse(fec$eggs>0, 1, 0) # reproductive status#
#
m.int<-NULL#
m.slp<-NULL#
m.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp,]#
	m.mod<-glm(reproductive ~ area, family="binomial", data=sub) #
	m.int<-c(m.int, coef(m.mod)[1])#
	m.slp<-c(m.slp, coef(m.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(m.mod, new, type="response")#
	m.pred<-rbind(m.pred, new)#
}#
params$m.int<-m.int#
params$m.slp<-m.slp
pdf("figs/params/1_maturity.pdf", )#
#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)#
#
dev_off()
pdf("figs/params/1_maturity.pdf", )#
#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)#
#
dev.off()
pdf("figs/params/1_maturity.pdf", )#
#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  theme_basic()#
#
dev.off()
pdf("figs/params/1_maturity.pdf", )#
#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
#
dev.off()
########################################
# FECUNDITY  #
########################################
# eggs per cm2#
fec$f.cm2<-fec$polyps_cm2*fec$eggs #
# eggs per colony#
fec$f.colony<-fec$f.cm2*fec$area_cm2 *fec$eggC #
# egg energy per colony#
# make energy a survival proportion, and round to 0#
fec$fecundity<-round(fec$f.cm2*fec$area_cm2 * (fec$eggC/max(fec$eggC)) ,0) #
#
f.int<-NULL#
f.slp<-NULL#
f.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp & fec$reproductive==1,]#
	f.mod<-glm.nb(fecundity ~ area, sub)#
	f.int<-c(f.int, coef(f.mod)[1])#
	f.slp<-c(f.slp, coef(f.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(f.mod, new, type="response")#
	f.pred<-rbind(f.pred, new)#
	}#
params$f.int<-f.int#
params$f.slp<-f.slp#
#
# -------- plot#
#
pdf("figs/params/2_fecundity.pdf", )#
#
ggplot()+ #
  geom_point(data=fec[fec$reproductive==1, ], #
    aes(area, fecundity), #
      shape=21, col="grey")+#
  geom_line(data=f.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_y_log10()+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
#
dev.off()
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var
head(f.pred)
head(fec)
head(gdat)
gdat$morphology <- params$morphology[match(gdat$spp, params$spp)]#
sdat$morphology <- params$morphology[match(sdat$spp, params$spp)]
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var#
#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)
pdf("figs/params/3_growth.pdf", )#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)#
dev.off()
pdf("figs/params/3_growth.pdf", )#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)+#
 theme_classic()#
dev.off()
source("R/data_prep.R")#
source("R/params.R")
########################################
# SURVIVAL #
########################################
sdat$area_sq<-sdat$area^2#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[sdat$area>-3,]#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2#
#
pdf("figs/params/4_survival.pdf", )#
ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp), #
      size=0.75)+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
 theme_classic()#
dev.off()
########################################
sdat$area_sq<-sdat$area^2#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[sdat$area>-3,]#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2
source("R/data_prep.R")
########################################
# SURVIVAL #
########################################
sdat$area_sq<-sdat$area^2#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[sdat$area>-3,]#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2
########################################
# MATURITY #
########################################
fec$reproductive <- ifelse(fec$eggs>0, 1, 0) # reproductive status#
m.int<-NULL#
m.slp<-NULL#
m.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp,]#
	m.mod<-glm(reproductive ~ area, family="binomial", data=sub) #
	m.int<-c(m.int, coef(m.mod)[1])#
	m.slp<-c(m.slp, coef(m.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(m.mod, new, type="response")#
	m.pred<-rbind(m.pred, new)#
}#
params$m.int<-m.int#
params$m.slp<-m.slp#
#
# -------- plot#
pdf("figs/params/1_maturity.pdf", )#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()#
#
########################################
# FECUNDITY  #
########################################
# eggs per cm2#
fec$f.cm2<-fec$polyps_cm2*fec$eggs #
# eggs per colony#
fec$f.colony<-fec$f.cm2*fec$area_cm2 *fec$eggC #
# egg energy per colony#
# make energy a survival proportion, and round to 0#
fec$fecundity<-round(fec$f.cm2*fec$area_cm2 * (fec$eggC/max(fec$eggC)) ,0) #
#
f.int<-NULL#
f.slp<-NULL#
f.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp & fec$reproductive==1,]#
	f.mod<-glm.nb(fecundity ~ area, sub)#
	f.int<-c(f.int, coef(f.mod)[1])#
	f.slp<-c(f.slp, coef(f.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(f.mod, new, type="response")#
	f.pred<-rbind(f.pred, new)#
	}#
params$f.int<-f.int#
params$f.slp<-f.slp#
#
# -------- plot#
pdf("figs/params/2_fecundity.pdf", )#
ggplot()+ #
  geom_point(data=fec[fec$reproductive==1, ], #
    aes(area, fecundity), #
      shape=21, col="grey")+#
  geom_line(data=f.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_y_log10()+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()#
########################################
# GROWTH #
########################################
#
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var#
#
pdf("figs/params/3_growth.pdf", )#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)+#
 theme_classic()#
dev.off() #
########################################
# SURVIVAL #
########################################
sdat$area_sq<-sdat$area^2#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[sdat$area>-3,]#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2
source("R/data_prep.R")
########################################
# MATURITY #
########################################
fec$reproductive <- ifelse(fec$eggs>0, 1, 0) # reproductive status#
m.int<-NULL#
m.slp<-NULL#
m.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp,]#
	m.mod<-glm(reproductive ~ area, family="binomial", data=sub) #
	m.int<-c(m.int, coef(m.mod)[1])#
	m.slp<-c(m.slp, coef(m.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(m.mod, new, type="response")#
	m.pred<-rbind(m.pred, new)#
}#
params$m.int<-m.int#
params$m.slp<-m.slp#
#
# -------- plot#
pdf("figs/params/1_maturity.pdf", )#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()#
#
########################################
# FECUNDITY  #
########################################
# eggs per cm2#
fec$f.cm2<-fec$polyps_cm2*fec$eggs #
# eggs per colony#
fec$f.colony<-fec$f.cm2*fec$area_cm2 *fec$eggC #
# egg energy per colony#
# make energy a survival proportion, and round to 0#
fec$fecundity<-round(fec$f.cm2*fec$area_cm2 * (fec$eggC/max(fec$eggC)) ,0) #
#
f.int<-NULL#
f.slp<-NULL#
f.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp & fec$reproductive==1,]#
	f.mod<-glm.nb(fecundity ~ area, sub)#
	f.int<-c(f.int, coef(f.mod)[1])#
	f.slp<-c(f.slp, coef(f.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(f.mod, new, type="response")#
	f.pred<-rbind(f.pred, new)#
	}#
params$f.int<-f.int#
params$f.slp<-f.slp#
#
# -------- plot#
pdf("figs/params/2_fecundity.pdf", )#
ggplot()+ #
  geom_point(data=fec[fec$reproductive==1, ], #
    aes(area, fecundity), #
      shape=21, col="grey")+#
  geom_line(data=f.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_y_log10()+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()#
########################################
# GROWTH #
########################################
#
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var#
#
pdf("figs/params/3_growth.pdf", )#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)+#
 theme_classic()#
dev.off() #
########################################
# SURVIVAL #
########################################
sdat$area_sq<-sdat$area^2#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[sdat$area>-3,]#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2
########################################
# SURVIVAL #
########################################
sdat$area_sq<-sdat$area^2#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[sdat$area>-3,]#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2#
#
pdf("figs/params/4_survival.pdf", )#
ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp), #
      size=0.75)+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
 theme_classic()#
dev.off()
pdf("figs/params/4_survival.pdf", )#
ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp), #
      size=0.75)+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)+#
 theme_classic()#
dev.off()
########################################
# MATURITY #
########################################
fec$reproductive <- ifelse(fec$eggs>0, 1, 0) # reproductive status#
m.int<-NULL#
m.slp<-NULL#
m.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp,]#
	m.mod<-glm(reproductive ~ area, family="binomial", data=sub) #
	m.int<-c(m.int, coef(m.mod)[1])#
	m.slp<-c(m.slp, coef(m.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(m.mod, new, type="response")#
	m.pred<-rbind(m.pred, new)#
}#
params$m.int<-m.int#
params$m.slp<-m.slp#
#
# -------- plot#
pdf("figs/p1_maturity.pdf", )#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()#
#
########################################
# FECUNDITY  #
########################################
# eggs per cm2#
fec$f.cm2<-fec$polyps_cm2*fec$eggs #
# eggs per colony#
fec$f.colony<-fec$f.cm2*fec$area_cm2 *fec$eggC #
# egg energy per colony#
# make energy a survival proportion, and round to 0#
fec$fecundity<-round(fec$f.cm2*fec$area_cm2 * (fec$eggC/max(fec$eggC)) ,0) #
#
f.int<-NULL#
f.slp<-NULL#
f.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp & fec$reproductive==1,]#
	f.mod<-glm.nb(fecundity ~ area, sub)#
	f.int<-c(f.int, coef(f.mod)[1])#
	f.slp<-c(f.slp, coef(f.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(f.mod, new, type="response")#
	f.pred<-rbind(f.pred, new)#
	}#
params$f.int<-f.int#
params$f.slp<-f.slp#
#
# -------- plot#
pdf("figs/p2_fecundity.pdf", )#
ggplot()+ #
  geom_point(data=fec[fec$reproductive==1, ], #
    aes(area, fecundity), #
      shape=21, col="grey")+#
  geom_line(data=f.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_y_log10()+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()#
########################################
# GROWTH #
########################################
#
g.int<-NULL#
g.slp<-NULL#
g.var<-NULL#
g.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	g.mod<-lm(area_next ~ area, data=sub) #
	g.int<-c(g.int, coef(g.mod)[1])#
	g.slp<-c(g.slp, coef(g.mod)[2])#
	g.var<-c(g.var, var(residuals(g.mod)))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1),#
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(g.mod, new, type="response")#
	g.pred<-rbind(g.pred, new)#
}#
params$g.int<-g.int#
params$g.slp<-g.slp#
params$g.var<-g.var#
#
pdf("figs/p3_growth.pdf", )#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  facet_wrap(~spp)+#
 theme_classic()#
dev.off() #
########################################
# SURVIVAL #
########################################
sdat$area_sq<-sdat$area^2#
sdat<-sdat[!is.na(sdat$surv),]#
#sdat<-sdat[sdat$area>-3,]#
s.int<-NULL#
s.slp<-NULL#
s.slp2<-NULL#
s.pred<-NULL#
for(sp in spp){#
	sub<-sdat[sdat$spp==sp,]#
	#s.mod<-glm(surv ~ area, family="binomial", data=sub) #
	s.mod2<-glm(surv ~ area + area_sq, family="binomial", data=sub) #
	s.int<-c(s.int, coef(s.mod2)[1])#
	s.slp<-c(s.slp, coef(s.mod2)[2])#
	s.slp2<-c(s.slp2, coef(s.mod2)[3])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$area_sq <- new$area^2#
	new$pred<-predict(s.mod2, new, type="response")#
	s.pred<-rbind(s.pred, new)#
	}#
params$s.int<-s.int#
params$s.slp<-s.slp#
params$s.slp.2<-s.slp2#
#
pdf("figs/p4_survival.pdf", )#
ggplot()+ #
  geom_jitter(data=sdat, #
    aes(area, surv), #
      shape=21, col="grey",height=0.02)+#
  geom_line(data=s.pred, #
    aes(area, pred, col=spp), #
      size=0.75)+#
      #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)+#
 theme_classic()#
dev.off()
########################################
# MAXIMUM GROWTH  - look into AD#
########################################
library("quantreg")#
gdat$radius1<-sqrt(gdat$area_cm2/pi)/100#
gdat$radius2<-sqrt(gdat$area_cm2_next/pi)/100#
gdat$g_radius<-gdat$radius2-gdat$radius1
r.int<-NULL#
r.slp<-NULL#
r.err<-NULL#
r.pred<-NULL#
for(sp in spp){#
	sub<-gdat[gdat$spp==sp,]#
	r.mod <-rq(g_radius ~ 1 , data=sub, tau=0.98) # no slope#
	#r.mod <-rq(g_radius ~ area , data=sub, tau=0.99)# slope#
	r.int<-c(r.int, coef(r.mod)[1])#
	#r.slp<-c(r.slp, coef(r.mod)[2])#
	r.err <- c(r.err, summary(r.mod, se='boot')$coef[[2]])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(r.mod, new, type="response")#
	r.pred<-rbind(r.pred, new)#
	}#
params$r.int<-r.int#
params$r.slp<-r.slp#
params$r.err<-r.err
ggplot()+#
 geom_point(data=gdat, aes(x=area, y=g_radius), col="grey", shape=21)+#
     geom_line(data=r.pred, aes(x=area, y=pred, col=spp))+#
   scale_colour_manual(values=c(cols))#+facet_wrap(~spp)
params$r.err<-r.err#
#
pdf("figs/p4_max_growth.pdf", )#
ggplot()+#
 geom_point(data=gdat, aes(x=area, y=g_radius), col="grey", shape=21)+#
     geom_line(data=r.pred, aes(x=area, y=pred, col=spp))+#
   scale_colour_manual(values=c(cols))#
   #+facet_wrap(~spp)+#
    theme_classic()#
dev.off()
pdf("figs/p4_max_growth.pdf", )#
ggplot()+#
 geom_point(data=gdat, aes(x=area, y=g_radius), col="grey", shape=21)+#
     geom_line(data=r.pred, aes(x=area, y=pred, col=spp))+#
   scale_colour_manual(values=c(cols))+#
   #+facet_wrap(~spp)+#
    theme_classic()#
dev.off()
pdf("figs/p5_maxgrowth.pdf", )#
ggplot()+#
 geom_point(data=gdat, aes(x=area, y=g_radius), col="grey", shape=21)+#
     geom_line(data=r.pred, aes(x=area, y=pred, col=spp))+#
   scale_colour_manual(values=c(cols))+#
   #+facet_wrap(~spp)+#
    theme_classic()#
dev.off()
pdf("figs/p3_growth.pdf", )#
ggplot()+ #
  geom_abline(slope=1, linetype="dotted")+#
  geom_point(data=gdat, #
    aes(area, area_next), #
      shape=21, col="grey")+#
  geom_line(data=g.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  #facet_wrap(~spp)+#
 theme_classic()#
dev.off()
logit <- function(x) { log(x/(1-x)) }#
inv.logit <- function(x) { exp(x)/(1+exp(x)) }#
#
gdat$max_g<-params$r.int[match(gdat$spp, params$spp)] #
gdat$max_area2<-pi*(gdat$max_g + gdat$radius1)^2 # eq. 2.1 #
gdat$p_mort<-  1 - ((gdat$area_cm2_next/10000)/gdat$max_area2) # eq. 2.2#
gdat$p_stasis<-  1 - ((gdat$area_cm2/10000)/gdat$max_area2) #
pdat<-subset(gdat, p_mort>0.001) # less than max growth line#
#pdat<-subset(dat, p_mort>0) # zero#
pdat$pm_logit <- logit(pdat$p_mort)
p.int<-NULL#
p.slp<-NULL#
p.pred<-NULL#
p.sig<-NULL#
for(sp in spp){#
	sub<-pdat[pdat$spp==sp,]#
	p.mod<-lm(pm_logit ~ area , data=sub)#
	p.int <- c(p.int, coef(p.mod)[[1]])#
	p.slp <- c(p.slp, coef(p.mod)[[2]])#
	p.sig <- c(p.sig, sigma(p.mod))#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morph[1])#
	new$pred<-predict(p.mod, new, type="response")#
	p.pred<-rbind(p.pred, new)#
	}#
params$p.int<-p.int#
params$p.slp<-p.slp#
params$p.sig<-p.sig#
#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred))+facet_wrap(~spp)
pdf("figs/p6_partialmort.pdf", )#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred))+#
     #facet_wrap(~spp)+#
     theme_classic()#
dev.off()
pdf("figs/p6_partialmort.pdf", )#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred, col=spp))+#
     #facet_wrap(~spp)+#
     theme_classic()#
dev.off()
pdf("figs/p6_partialmort.pdf", )#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred, col=spp))+#
     scale_colour_manual(values=c(cols))+#
     #facet_wrap(~spp)+#
     theme_classic()#
dev.off()
pdf("figs/p6_partialmort.pdf", )#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis))+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred, col=spp))+#
     scale_colour_manual(values=c(cols))+#
     #facet_wrap(~spp)+#
     theme_classic()#
dev.off()
pdf("figs/p6_partialmort.pdf", )#
ggplot()+#
  geom_point(data=pdat, #
    aes(x=area, y=pm_logit), #
       shape=21, col="grey")+#
    geom_line(data=pdat, aes(x=area, y=p_stasis, group=spp), linetype="dotted")+#
   geom_line(data=p.pred, #
     aes(x=area, y=pred, col=spp))+#
     scale_colour_manual(values=c(cols))+#
     #facet_wrap(~spp)+#
     theme_classic()#
dev.off()
library("MASS") #
library("reshape2")#
library("ggplot2")#
#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
source("R/data_prep.R")#
source("R/params.R")
########################################
# IPM FUNCTIONS#
########################################
options(stringsAsFactors=FALSE)#
#
#------------------------------- growth#
g.yx <- function(y, x) {#
	dnorm(y, mean=params$g.int[params$spp==sp] + #
	  params$g.slp[params$spp==sp]*x,#
	    sd=sqrt(params$g.var[params$spp==sp]))#
	    }#
#-------------------------------survival#
s.x <- function(x) { #
	u <- params$s.int[params$spp==sp] + #
	  params$s.slp[params$spp==sp] * x + #
	    params$s.slp.2[params$spp==sp] * x^2#
  return(inv.logit(u)) #
  }#
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.1)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}
source("R/data_prep.R")#
source("R/params.R")
########################################
# IPM FUNCTIONS#
########################################
options(stringsAsFactors=FALSE)#
#
#------------------------------- growth#
g.yx <- function(y, x) {#
	dnorm(y, mean=params$g.int[params$spp==sp] + #
	  params$g.slp[params$spp==sp]*x,#
	    sd=sqrt(params$g.var[params$spp==sp]))#
	    }#
#-------------------------------survival#
s.x <- function(x) { #
	u <- params$s.int[params$spp==sp] + #
	  params$s.slp[params$spp==sp] * x + #
	    params$s.slp.2[params$spp==sp] * x^2#
  return(inv.logit(u)) #
  }#
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.1)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
# growth functions#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
########################################
# MESH AND BOUNDARIES#
########################################
#
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))
########################################
# FECUNDITY VS RECRUITMENT...#
########################################
#
rmat<-NULL#
  for (sp in spp) {#
  	rec<-1#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  facet_wrap(~spp)+#
  scale_colour_manual(values=cols)
recplot
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
recplot
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
    rec <-     1*10^-8#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
#rec<-1#
rec <- 1*10^-8#
#
rmat<-NULL#
  for (sp in spp) {#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
recplot
store<-data.frame()#
recx<-c(1*10^-3, 1*10^-4, 1*10^-5, 1*10^-6, 1*10^-7, 1*10^-8)#
for (sp in spp) {#
	for (rec in recx){#
	smax<-params[params$spp==sp, "smax"]#
  	sub<-dat[dat$spp==sp,]#
  	rec<-rec#
   mod <- bigmatrix()#
  store<-rbind(store, data.frame(sp=sp, rec=rec, lam=bigmatrix()$lam))#
  } }#
recdat<- dcast(store, sp~rec, value.var='lam')#
params$lam_0<-recdat[,"1e-08"]#
params$lam_1<-recdat[,"1e-07"]#
params$lam_2<-recdat[,"1e-06"]#
params$lam_3<-recdat[,"1e-05"]#
params$lam_4<-recdat[,"1e-04"]
lam<-expression(lambda)#
lamlong<-melt(params, measure.vars=c("lam_0","lam_1","lam_2","lam_3", "lam_4"), value.name="lambda")#
#-------------------------------#
params2<-rbind(params, params[6,]) #duplicate millepora(should it be nasuta?) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
comp$sp<-apply(comp[,c(2,3)], 1, paste, collapse = ":")#
comp$lam_0<-transform(dcast(params2, morph~abundance_pair, value.var="lam_0"), x=Common/Rare)$x#
comp$lam_1<-transform(dcast(params2, morph~abundance_pair, value.var="lam_1"), x=Common/Rare)$x#
comp$lam_2<-transform(dcast(params2, morph~abundance_pair, value.var="lam_2"), x=Common/Rare)$x#
comp$lam_3<-transform(dcast(params2, morph~abundance_pair, value.var="lam_3"), x=Common/Rare)$x#
comp$lam_4<-transform(dcast(params2, morph~abundance_pair, value.var="lam_4"), x=Common/Rare)$x#
comp<-melt(comp, id.vars=c("morph","sp","Common","Rare"))#
#------------------------------- #
comp$morph<-factor(comp$morph, levels=c("tabular","staghorn", "corymbose", "corymbose_2", "digitate","massive"))#
ggplot(comp)+#
geom_bar(aes(x=morph, y=value),stat="identity", col="black", fill="grey")+#
geom_text(aes(x=morph, y=value+0.01, label=sp), size=2, angle=90)+#
coord_flip()+scale_y_log10()+#
theme(axis.line.y=element_blank(), strip.background=element_blank(), axis.title.y=element_blank())+#
ylab("lambda ratio")+#
facet_wrap(~variable, nrow=2)
###############################
# ELASTICITY#
########################################
 # eigen-things can be combined to obtain the sensitivity and elasticity matrices.#
rec<-1*10^-6#
#
analyses<-function(){#
	#sp<-"GR"#
	K<-bigmatrix()$K#
	lam <- Re(eigen(K)$values[1])#
  w.eigen<-Re(eigen(K)$vectors[,1]) # w=right eigen=stable size dist. #
  v.eigen<-Re(eigen(t(K))$vectors[,1]) # v=left, reproductive value=contribution of each size class to pop size. #
stable.size <- w.eigen/sum(w.eigen)#
repro.val <- v.eigen/v.eigen[1] #
v.dot.w<-sum(stable.size*repro.val)*h #
sens<-outer(repro.val,stable.size)/v.dot.w  #
elas<-matrix(as.vector(sens)*(as.vector(K)/h)/lam, nrow=n)#
P.elas<-(bigmatrix()$P/h)*sens/lam#
R.elas<-(bigmatrix()$R/h)*sens/lam#
return(list(st=stable.size, rv=repro.val, sa=sens, eK=elas, eP=P.elas, eR=R.elas))}
sum(analyses()$eK)*h^2#
props<-NULL #
for (sp in spp) {#
props<-rbind(props, data.frame(eP=sum(analyses()$eP)*h^2, eR=sum(analyses()$eR)*h^2, sp=sp))#
	}#
props#
params$eP<-props$eP#
params$eR<-props$eR#
rowSums(props[,c(1,2)])
rowSums(props[,c(1,2)])
########################################
# R.ELASTICITY VS RECRUITMENT SENSITIVITY#
########################################
#
ggplot(data=params, aes(x=eR, y=lam_4-lam_1))+#
  geom_text(aes(label=spp))+#
  geom_smooth(method="lm", formula=y~x)+#
  scale_x_log10()+#
  scale_y_log10()+#
  labs(x="R.elasticity", y="change in lambda")
########################################
# R.ELASTICITY vs MORPH/ABUNDANCE#
########################################
#
params$R<-ifelse(params$morphology=="massive", "S", ifelse(params$morphology=="digitate", "R", "R"))#
mod<-lm(eR~log(abundance_05), subset(params, R!="S"))#
summary(mod)#
#
plot_grid(#
ggplot(data=params, aes(y=eR, x=abundance_05))+#
geom_smooth(method="lm", formula=y~poly(x,2))+geom_text(aes(label=spp))+#
scale_x_log10()+#
scale_y_log10()+#
labs(y="R.elasticity")#+facet_wrap(~R)#
,#
ggplot(data=params, aes(x=reorder(morphology, -eR), y=eR))+geom_boxplot()+#
geom_point()+labs(y="R.elasticity")+#
scale_y_log10()+#
geom_text(aes(label=spp), nudge_x=0.15, col="red")#
)
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
source("R/data_prep.R")#
source("R/params.R")#
#
########################################
# IPM FUNCTIONS#
########################################
options(stringsAsFactors=FALSE)#
#
#------------------------------- growth#
g.yx <- function(y, x) {#
	dnorm(y, mean=params$g.int[params$spp==sp] + #
	  params$g.slp[params$spp==sp]*x,#
	    sd=sqrt(params$g.var[params$spp==sp]))#
	    }#
#-------------------------------survival#
s.x <- function(x) { #
	u <- params$s.int[params$spp==sp] + #
	  params$s.slp[params$spp==sp] * x + #
	    params$s.slp.2[params$spp==sp] * x^2#
  return(inv.logit(u)) #
  }#
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.1)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
#------------------------------- growth functions#
#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
# Maximum size windows, constant or vary by species? #
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# RECRUITMENT#
########################################
#
#rec<-1#
rec <- 1*10^-8#
#
rmat<-NULL#
  for (sp in spp) {#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
recplot
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const
########################################
# MULTIPLE REC#
########################################
#
store<-data.frame()#
recx<-c(1*10^-3, 1*10^-4, 1*10^-5, 1*10^-6, 1*10^-7, 1*10^-8)#
for (sp in spp) {#
	for (rec in recx){#
	smax<-params[params$spp==sp, "smax"]#
  	sub<-dat[dat$spp==sp,]#
  	rec<-rec#
   mod <- bigmatrix()#
  store<-rbind(store, data.frame(sp=sp, rec=rec, lam=bigmatrix()$lam))#
  } }#
recdat<- dcast(store, sp~rec, value.var='lam')#
params$lam_0<-recdat[,"1e-08"]#
params$lam_1<-recdat[,"1e-07"]#
params$lam_2<-recdat[,"1e-06"]#
params$lam_3<-recdat[,"1e-05"]#
params$lam_4<-recdat[,"1e-04"]
########################################
# COMPARE SPECIES PAIRS#
########################################
lam<-expression(lambda)#
lamlong<-melt(params, measure.vars=c("lam_0","lam_1","lam_2","lam_3", "lam_4"), value.name="lambda")#
#-------------------------------#
params2<-rbind(params, params[6,]) #duplicate millepora(should it be nasuta?) #
params2$morph<-as.character(params2$morph)#
params2$morph[c(7, 12)]<-c("corymbose_2","corymbose_2")#
comp<-dcast(params2, morph~abundance_pair, value.var="spp")#
comp$sp<-apply(comp[,c(2,3)], 1, paste, collapse = ":")#
comp$lam_0<-transform(dcast(params2, morph~abundance_pair, value.var="lam_0"), x=Common/Rare)$x#
comp$lam_1<-transform(dcast(params2, morph~abundance_pair, value.var="lam_1"), x=Common/Rare)$x#
comp$lam_2<-transform(dcast(params2, morph~abundance_pair, value.var="lam_2"), x=Common/Rare)$x#
comp$lam_3<-transform(dcast(params2, morph~abundance_pair, value.var="lam_3"), x=Common/Rare)$x#
comp$lam_4<-transform(dcast(params2, morph~abundance_pair, value.var="lam_4"), x=Common/Rare)$x#
comp<-melt(comp, id.vars=c("morph","sp","Common","Rare"))#
#------------------------------- #
comp$morph<-factor(comp$morph, levels=c("tabular","staghorn", "corymbose", "corymbose_2", "digitate","massive"))#
ggplot(comp)+#
geom_bar(aes(x=morph, y=value),stat="identity", col="black", fill="grey")+#
geom_text(aes(x=morph, y=value+0.01, label=sp), size=2, angle=90)+#
coord_flip()+scale_y_log10()+#
theme(axis.line.y=element_blank(), strip.background=element_blank(), axis.title.y=element_blank())+#
ylab("lambda ratio")+#
facet_wrap(~variable, nrow=2)
########################################
# ELASTICITY#
########################################
 # eigen-things can be combined to obtain the sensitivity and elasticity matrices.#
rec<-1*10^-6#
#
analyses<-function(){#
	#sp<-"GR"#
	K<-bigmatrix()$K#
	lam <- Re(eigen(K)$values[1])#
  w.eigen<-Re(eigen(K)$vectors[,1]) # w=right eigen=stable size dist. #
  v.eigen<-Re(eigen(t(K))$vectors[,1]) # v=left, reproductive value=contribution of each size class to pop size. #
stable.size <- w.eigen/sum(w.eigen)#
repro.val <- v.eigen/v.eigen[1] #
v.dot.w<-sum(stable.size*repro.val)*h #
sens<-outer(repro.val,stable.size)/v.dot.w  #
elas<-matrix(as.vector(sens)*(as.vector(K)/h)/lam, nrow=n)#
P.elas<-(bigmatrix()$P/h)*sens/lam#
R.elas<-(bigmatrix()$R/h)*sens/lam#
return(list(st=stable.size, rv=repro.val, sa=sens, eK=elas, eP=P.elas, eR=R.elas))}#
#
sum(analyses()$eK)*h^2#
props<-NULL #
for (sp in spp) {#
props<-rbind(props, data.frame(eP=sum(analyses()$eP)*h^2, eR=sum(analyses()$eR)*h^2, sp=sp))#
	}#
props#
params$eP<-props$eP#
params$eR<-props$eR#
rowSums(props[,c(1,2)])
########################################
# R.ELASTICITY VS RECRUITMENT SENSITIVITY#
########################################
#
ggplot(data=params, aes(x=eR, y=lam_4-lam_1))+#
  geom_text(aes(label=spp))+#
  geom_smooth(method="lm", formula=y~x)+#
  scale_x_log10()+#
  scale_y_log10()+#
  labs(x="R.elasticity", y="change in lambda")
########################################
# R.ELASTICITY vs MORPH/ABUNDANCE#
########################################
#
params$R<-ifelse(params$morphology=="massive", "S", ifelse(params$morphology=="digitate", "R", "R"))#
mod<-lm(eR~log(abundance_05), subset(params, R!="S"))#
summary(mod)#
#
plot_grid(#
ggplot(data=params, aes(y=eR, x=abundance_05))+#
geom_smooth(method="lm", formula=y~poly(x,2))+geom_text(aes(label=spp))+#
scale_x_log10()+#
scale_y_log10()+#
labs(y="R.elasticity")#+facet_wrap(~R)#
,#
ggplot(data=params, aes(x=reorder(morphology, -eR), y=eR))+geom_boxplot()+#
geom_point()+labs(y="R.elasticity")+#
scale_y_log10()+#
geom_text(aes(label=spp), nudge_x=0.15, col="red")#
)
#Pvals <- big$P / h#
#P.elas <- Pvals * K.sens / lambda#
#
ggplot(params, aes(r.int, eR, col=spp))+#
geom_line(aes(group=morphology))+#
geom_point(aes(size=abundance_05))+#
  scale_x_log10()+#
  scale_y_log10()+#
scale_colour_manual(values=cols)+scale_x_sqrt()#+facet_wrap(~R)
ggplot(data=lamlong)+ #
geom_hline(yintercept=1, linetype="dotted")+#
geom_line(aes(x=abundance, y=lambda, col=spp, group=variable))+#
 geom_point(aes(x=abundance, y=lambda, fill=spp, size=variable), shape=21)+#
 guides(fill="none", col="none")+labs(y=lam)+ scale_fill_manual(values=as.character(params$cols))+#
 scale_colour_manual(values=as.character(params$cols))+#
 facet_wrap(~morphology, scales="free_x")+#
 theme(axis.text.x=element_text(angle=90, size=5))
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
source("R/data_prep.R")#
source("R/params.R")#
#
########################################
# IPM FUNCTIONS#
########################################
options(stringsAsFactors=FALSE)#
#
#------------------------------- growth#
g.yx <- function(y, x) {#
	dnorm(y, mean=params$g.int[params$spp==sp] + #
	  params$g.slp[params$spp==sp]*x,#
	    sd=sqrt(params$g.var[params$spp==sp]))#
	    }#
#-------------------------------survival#
s.x <- function(x) { #
	u <- params$s.int[params$spp==sp] + #
	  params$s.slp[params$spp==sp] * x + #
	    params$s.slp.2[params$spp==sp] * x^2#
  return(inv.logit(u)) #
  }#
#------------------------------- reproduction#
 r.yx <- function(y, x) {	#
 	mat<- inv.logit(params$m.int[params$spp==sp] + #
 	  params$m.slp[params$spp==sp] *x)#
 	fec<- exp(params$f.int[params$spp==sp] + #
 	  params$f.slp[params$spp==sp] *x) #
 	#siz<- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.05) #
 	#siz<- dnorm(y,mean=rec.size, sd=0.05) #
 	#siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=params$g.var[params$spp==sp])#
 	siz <- dnorm(y,mean=log10(pi*params$r.int[params$spp==sp]^2), sd=0.1)#
   out <- rec* mat * fec * siz #
   return(out)#
   } #
#
#------------------------------- growth functions#
#
a_func <- function(r) {#
  pi * r^2#
}#
r_func <- function(a) {#
  sqrt(a / pi)#
}#
circularity <- function(area, perimeter) {#
  (4 * pi * area)/(perimeter^ 2)#
}#
#------------------------------- growth & partial morality#
p.yx <- function(y, x) {#
  # x <- -4#
  g <- a_func(r_func(10^x) + params$r.int[params$spp==sp] )#
  #+ 1.96 * params$r.err[params$spp==sp])#
  temp <- 10^y / g#
  temp[temp > 1] <- 1#
  dnorm(logit(1 - temp), params$p.int[params$spp==sp] + x * params$p.slp[params$spp==sp], params$p.sig[params$spp==sp])#
}#
#------------------------------- kernel#
#
pmort<-T#
#
bigmatrix <- function() {#
    if (pmort) {#
    G <- h * outer(y, y, p.yx)#
  } else {#
    G <- h * outer(y, y, g.yx)#
  }#
  G <- t(t(G) / apply(G, 2, sum))#
  S <- s.x(y)#
  P <- G#
  for(i in 1:n) P[,i]=G[,i]*S[i]#
  #R <- h * outer(y, y, r.yx) #
  R <- h * outer(y, pmin(y, smax), r.yx) #  ceiling#
  K <- P + R#
  lam <- Re(eigen(K)$values[1])#
	w <- abs(Re(eigen(K)$vectors[,1])) #
	v <- abs(Re(eigen(t(K))$vectors[,1]))#
	return(list(K=K, lam=lam, w=w, v=v, G=G, S=S, R=R, P=P)) }#
# Maximum size windows, constant or vary by species? #
params$smax<-aggregate(area_cm2~spp, dat, max)$area#
params$smin<-aggregate(area_cm2~spp, dat, min)$area#
########################################
# MESH AND BOUNDARIES#
########################################
#
min.size <- -3.5 #
max.size <- 1 #
rec.size <- -2.21 #
n <- 100#
b <- min.size + c(0:n) * (max.size - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
I <- y >= rec.size#
#
#-------------------------------#
d.cm2<-function(x){ (sqrt((10^x)*10000)/pi)*2 }#
d.cm2(rec.size) # rec diam in cm#
d.cm2(log10(pi*params$r.int[params$spp=="AH"]^2))#
########################################
# RECRUITMENT#
########################################
#
#rec<-1#
rec <- 1*10^-8#
#
rmat<-NULL#
  for (sp in spp) {#
  	smax<-params[params$spp==sp, "smax"]#
rmat<-rbind(rmat,data.frame(s=y, rep=apply(t(bigmatrix()$R), 1, sum), spp=sp))}#
head(rmat)#
recplot<-ggplot()+#
  geom_line(data=rmat, aes(s, rep, col=spp), linetype="dotted")+#
  geom_line(data=f.pred,aes(area, pred, col=spp))+#
  scale_y_log10()+#
  #facet_wrap(~spp)+#
  scale_colour_manual(values=cols)#
recplot#
########################################
# PLOT IPMS#
########################################
#
par(mfcol=c(2, 6))#
lam_const <- NULL#
t.rec <- NULL#
for (sp in spp) {#
	smax<-params[params$spp==sp, "smax"]#
  	sub<-dat[dat$spp==sp,]#
    mod <- bigmatrix()#
	image(y, y, t(mod$K)^0.3)    #
	points(sub$area, sub$area_next, cex=0.25)#
	title(sp, line=-1)#
	abline(0, 1, lty=2)#
  lam_const<-c(lam_const,bigmatrix()$lam) }#
params$lam_const<-lam_const#
params$lam_const#
########################################
# MULTIPLE REC#
########################################
#
store<-data.frame()#
recx<-c(1*10^-3, 1*10^-4, 1*10^-5, 1*10^-6, 1*10^-7, 1*10^-8)#
for (sp in spp) {#
	for (rec in recx){#
	smax<-params[params$spp==sp, "smax"]#
  	sub<-dat[dat$spp==sp,]#
  	rec<-rec#
   mod <- bigmatrix()#
  store<-rbind(store, data.frame(sp=sp, rec=rec, lam=bigmatrix()$lam))#
  } }#
recdat<- dcast(store, sp~rec, value.var='lam')#
params$lam_0<-recdat[,"1e-08"]#
params$lam_1<-recdat[,"1e-07"]#
params$lam_2<-recdat[,"1e-06"]#
params$lam_3<-recdat[,"1e-05"]#
params$lam_4<-recdat[,"1e-04"]#
########################################
# EXPLORE LAMBDA II#
########################################
#
ggplot(data=lamlong)+ #
geom_hline(yintercept=1, linetype="dotted")+#
geom_line(aes(x=abundance, y=lambda, col=spp, group=variable))+#
 geom_point(aes(x=abundance, y=lambda, fill=spp, size=variable), shape=21)+#
 guides(fill="none", col="none")+labs(y=lam)+ scale_fill_manual(values=as.character(params$cols))+#
 scale_colour_manual(values=as.character(params$cols))+#
 facet_wrap(~morphology, scales="free_x")+#
 theme(axis.text.x=element_text(angle=90, size=5))
########################################
lam<-expression(lambda)#
lamlong<-melt(params, measure.vars=c("lam_0","lam_1","lam_2","lam_3", "lam_4"), value.name="lambda")#
ggplot(data=lamlong)+ #
geom_hline(yintercept=1, linetype="dotted")+#
geom_line(aes(x=abundance, y=lambda, col=spp, group=variable))+#
 geom_point(aes(x=abundance, y=lambda, fill=spp, size=variable), shape=21)+#
 guides(fill="none", col="none")+labs(y=lam)+ scale_fill_manual(values=as.character(params$cols))+#
 scale_colour_manual(values=as.character(params$cols))+#
 facet_wrap(~morphology, scales="free_x")+#
 theme(axis.text.x=element_text(angle=90, size=5))
#Pvals <- big$P / h#
#P.elas <- Pvals * K.sens / lambda#
#
ggplot(params, aes(r.int, eR, col=spp))+#
geom_line(aes(group=morphology))+#
geom_point(aes(size=abundance_05))+#
  scale_x_log10()+#
  scale_y_log10()+#
scale_colour_manual(values=cols)+scale_x_sqrt()#+facet_wrap(~R)
# Lamda abundance... #
pdat<-lamlong[lamlong$variable=="lam_3",]#
#pdat<-lamlong[lamlong$variable!="lam_4",]#
#pdat<-lamlong#
plot_grid(ggplot(pdat,aes(x=abundance_05, y=lambda, col=variable, fill=variable))+#
geom_smooth(method="lm", formula=y~poly(x,2), size=0.5)+#
#geom_hline(yintercept=1, linetype="dotted")+#
geom_text(aes(label=spp), size=3)+#
labs(x="abundance", y=lam)+theme(legend.title=element_blank(), axis.text=element_text(size=8))+#
scale_x_log10(),#
ggplot(pdat,aes(x=r.int, y=lambda, col=variable, fill=variable))+#
geom_smooth(method="lm", formula=y~poly(x,2), size=0.5)+#
#geom_hline(yintercept=1, linetype="dotted")+#
geom_text(aes(label=spp), size=3)+#
labs(x="growth", y=lam)+theme(legend.title=element_blank(), axis.text=element_text(size=8))+#
scale_x_log10(),#
nrow=1)
########################################
#-------------------------------  min.size/max.size-lamda relationship#
########################################
#
store<-data.frame()#
minx<-c(-6,-5,-4,-3,-2,-1)#
for (sp in spp) {#
	for(min.size2 in minx){#
		min.size2<-min.size2#
		max.size <- max.size #2#
		rec.size <- rec.size#
		n <- 100#
		b <- min.size2 + c(0:n) * (max.size - min.size2)/n#
		y <- 0.5 * (b[1:n]+b[2:(n+1)])#
		h <- y[2] - y[1]#
		store<-rbind(store, data.frame(sp=sp, min.size=min.size2, lam=bigmatrix()$lam)) }}#
ggplot(data=store, aes(x=min.size, y=lam, colour=sp))+#
geom_line()+geom_hline(yintercept=1)+#
geom_vline(xintercept=min.size, linetype="dotted")+#
ggtitle("relative differences")+#
scale_colour_manual(values=as.character(params$cols))
store<-data.frame()#
maxx <- c( 0,1,2,3, 4,5)#
for (sp in spp) {#
	for(max.size2 in maxx){#
		max.size2<-max.size2#
		min.size <- min.size #2#
rec.size <- -2.7#
n <- 100#
b <- min.size + c(0:n) * (max.size2 - min.size)/n#
y <- 0.5 * (b[1:n]+b[2:(n+1)])#
h <- y[2] - y[1]#
		store<-rbind(store, data.frame(sp=sp, max.size=max.size2, lam=bigmatrix()$lam)) }}#
ggplot(data=store, aes(x=max.size, y=lam, colour=sp))+#
geom_line()+geom_hline(yintercept=1)+#
geom_vline(xintercept=max.size, linetype="dotted")+#
#lims(x=c(0, 0.00001), y=c(0,4))+#
ggtitle("relative differences")+#
scale_colour_manual(values=as.character(params$cols))
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
# load scripts#
source("R/data_prep.R")#
source("R/params.R")
########################################
# TRADEOFFS #
########################################
head(params)#
#
# survival#
params$p_mort<-inv.logit((params$p.slp*log10(0.01))+params$p.int)#
params$av.surv<-aggregate(pred~spp, s.pred,mean)$pred#
params$survcm<-aggregate(pred~spp, s.pred[s.pred$area<log10(pi*(11/100/2)^2),], FUN=mean)$pred#
max.surv<-do.call(rbind, lapply(split(s.pred,as.factor(s.pred$spp)), function(x) {return(x[which.max(x$pred),])}))#
params$safe.size<-max.surv$area#
#
# growth#
gdat$growth<-gdat$area_cm2_next-gdat$area_cm2	#
params$av.growth<-aggregate(growth~spp, gdat[gdat$growth>0,], mean)$growth#
#
# reproduction#
params$f.cm2<-aggregate(f.cm2~spp, fec,mean)$f.cm2#
params$en.cm2<-params$f.cm2*params$eggC#
params$min.r<-aggregate(area_cm2~spp, fec[fec$reproductive==1,], min)$area_cm2#
#
#params2<-params#
#params2<-rbind(params2, rep(NA, ncol(params)))#
#params2[12,"spp"]<-"CR"#
#params2[12,"r.int"]<-0.2/1000#
#params2[12,"min.r"]<-pi*((2/10/2)^2) # 1.2-2 mm diam#
colnames(params)#
pca<-prcomp(params[,c("r.int", "f.cm2","survcm","av.surv","p_mort")], scale=T, center=T)#
#pca<-prcomp(params[,c("r.int", "f.cm2","av.surv", "p_mort")], scale=T, center=T)#
pcdat<-data.frame(spp=params$spp, x=pca$x[,1], y=pca$x[,2], abun=params$abundance_05)#
rot<-data.frame(spp=rownames(pca$rotation), x=pca$rotation[,1], y=pca$rotation[,2])#
exp<-round(c(summary(pca)[[1]][1]^2/sum(summary(pca)[[1]]^2),summary(pca)[[1]][2]^2/sum(summary(pca)[[1]]^2)),3)*100#
#
ggplot()+#
geom_segment(data=rot, aes(x=0,y=0, xend=x, yend=y), arrow=arrow(length=unit(1, "mm")))+#
geom_text(data=rot, aes(x*1.2, y*1.2, label=spp))+#
geom_point(data=pcdat, aes(x,y, col=spp, size=abun))+#
geom_text(data=pcdat, aes(x,y, label=spp), size=3)+#
scale_colour_manual(values=c(cols))+#
guides(colour="none", size="none")+scale_radius(range=c(5,12))+#
labs(x=paste("PC1 (",exp[1],"%)", sep=""),y=paste("PC2 (",exp[2],"%)", sep=""))+#
theme_bw()
# linear models..#
#
lm.plot<-function(x, y, n){#
	dat<-params#
	dat$x<-params[,x]#
	dat$y<-params[,y]#
    ggplot(dat, aes(x,y))+	#
    geom_smooth(method="lm", formula=y~poly(x,n))+#
	geom_point(aes(fill=spp), shape=21, size=3.5)+#
	geom_text(aes(label=spp), size=1.5)+#
	labs(x=x, y=y)+#
	scale_fill_manual(values=paste(cols))+guides(fill="none")+#
	theme(axis.text=element_text(size=6),axis.title=element_text(size=10))#
}#
#
# growth#
plot_grid(#
lm.plot("r.int","min.r",1)+scale_x_log10()+scale_y_log10(),#
lm.plot("r.int","p_mort",1)+scale_x_log10(), #
lm.plot("r.int","safe.size",1)+scale_x_log10(),#
lm.plot("r.int","survcm",2)+scale_x_log10(),#
lm.plot("r.int","av.surv",2)+scale_x_log10(),#
lm.plot("r.int","f.cm2",2)+scale_x_log10(),#
lm.plot("r.int","en.cm2",1)+scale_x_log10(),#
align="hv")
pdf("figs/p7_tradeoffs.pdf")#
ggplot()+#
geom_segment(data=rot, aes(x=0,y=0, xend=x, yend=y), arrow=arrow(length=unit(1, "mm")))+#
geom_text(data=rot, aes(x*1.2, y*1.2, label=spp))+#
geom_point(data=pcdat, aes(x,y, col=spp, size=abun))+#
geom_text(data=pcdat, aes(x,y, label=spp), size=3)+#
scale_colour_manual(values=c(cols))+#
guides(colour="none", size="none")+scale_radius(range=c(5,12))+#
labs(x=paste("PC1 (",exp[1],"%)", sep=""),y=paste("PC2 (",exp[2],"%)", sep=""))+#
theme_bw()#
dev.off()
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
# load scripts#
source("R/data_prep.R")#
source("R/params.R")
########################################
# LOAD#
########################################
#
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
# load scripts#
source("R/data_prep.R")#
source("R/params.R")
# load scripts#
source("R/data_prep.R")#
source("params.R")
########################################
# LOAD#
########################################
#
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
# load scripts#
source("R/data_prep.R")#
source("params.R")
########################################
# MATURITY #
########################################
fec$reproductive <- ifelse(fec$eggs>0, 1, 0) # reproductive status#
m.int<-NULL#
m.slp<-NULL#
m.pred<-NULL#
for(sp in spp){#
	sub<-fec[fec$spp==sp,]#
	m.mod<-glm(reproductive ~ area, family="binomial", data=sub) #
	m.int<-c(m.int, coef(m.mod)[1])#
	m.slp<-c(m.slp, coef(m.mod)[2])#
	new<-data.frame(area=seq(min(sub$area), max(sub$area), 0.1), #
	  spp=sp, morph=sub$morphology[1])#
	new$pred<-predict(m.mod, new, type="response")#
	m.pred<-rbind(m.pred, new)#
}#
params$m.int<-m.int#
params$m.slp<-m.slp#
#
# -------- plot#
pdf("figs/p1_maturity.pdf", )#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()
# -------- plot#
png("figs/p1_maturity.png", height=6, width=6, units = 'in', res = 300)#
#pdf("figs/p1_maturity.pdf" )#
ggplot()+#
  geom_jitter(data=fec, #
    aes(x= area, reproductive), #
      height=0.02, shape=21, col="grey")+#
  geom_line(data=m.pred, #
    aes(area, pred, col=spp), #
      size=1)+#
  scale_colour_manual(values=cols)+#
  theme_classic()#
dev.off()
########################################
# LOAD#
########################################
#
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
# load scripts#
source("R/data_prep.R")#
source("params.R")
########################################
# LOAD#
########################################
#
rm(list = ls())#
#
library("MASS") #
library("reshape2")#
library("ggplot2")#
library("cowplot")#
inv.logit <- function(x) {exp(x)/(1+exp(x))}#
#
# load scripts#
source("R/data_prep.R")#
source("R/params.R")
dir()
dir()
source("R/data_prep.R")
